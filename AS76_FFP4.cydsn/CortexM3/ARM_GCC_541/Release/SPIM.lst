ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SPIM.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	SPIM_txBuffer,10,4
  20              		.comm	SPIM_txBufferFull,1,1
  21              		.comm	SPIM_txBufferRead,1,1
  22              		.comm	SPIM_txBufferWrite,1,1
  23              		.global	SPIM_initVar
  24              		.bss
  25              		.type	SPIM_initVar, %object
  26              		.size	SPIM_initVar, 1
  27              	SPIM_initVar:
  28 0000 00       		.space	1
  29              		.comm	SPIM_swStatusTx,1,1
  30              		.comm	SPIM_swStatusRx,1,1
  31              		.section	.text.SPIM_Init,"ax",%progbits
  32              		.align	2
  33              		.global	SPIM_Init
  34              		.thumb
  35              		.thumb_func
  36              		.type	SPIM_Init, %function
  37              	SPIM_Init:
  38              	.LFB0:
  39              		.file 1 "Generated_Source\\PSoC5\\SPIM.c"
   1:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/SPIM.c **** * File Name: SPIM.c
   3:Generated_Source\PSoC5/SPIM.c **** * Version 2.50
   4:Generated_Source\PSoC5/SPIM.c **** *
   5:Generated_Source\PSoC5/SPIM.c **** * Description:
   6:Generated_Source\PSoC5/SPIM.c **** *  This file provides all API functionality of the SPI Master component.
   7:Generated_Source\PSoC5/SPIM.c **** *
   8:Generated_Source\PSoC5/SPIM.c **** * Note:
   9:Generated_Source\PSoC5/SPIM.c **** *  None.
  10:Generated_Source\PSoC5/SPIM.c **** *
  11:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
  12:Generated_Source\PSoC5/SPIM.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/SPIM.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/SPIM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/SPIM.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/SPIM.c **** 
  18:Generated_Source\PSoC5/SPIM.c **** #include "SPIM_PVT.h"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 2


  19:Generated_Source\PSoC5/SPIM.c **** 
  20:Generated_Source\PSoC5/SPIM.c **** #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  21:Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_txBuffer[SPIM_TX_BUFFER_SIZE];
  22:Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_txBufferFull;
  23:Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_txBufferRead;
  24:Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_txBufferWrite;
  25:Generated_Source\PSoC5/SPIM.c **** #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
  26:Generated_Source\PSoC5/SPIM.c **** 
  27:Generated_Source\PSoC5/SPIM.c **** #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
  28:Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_rxBuffer[SPIM_RX_BUFFER_SIZE];
  29:Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_rxBufferFull;
  30:Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_rxBufferRead;
  31:Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_rxBufferWrite;
  32:Generated_Source\PSoC5/SPIM.c **** #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
  33:Generated_Source\PSoC5/SPIM.c **** 
  34:Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_initVar = 0u;
  35:Generated_Source\PSoC5/SPIM.c **** 
  36:Generated_Source\PSoC5/SPIM.c **** volatile uint8 SPIM_swStatusTx;
  37:Generated_Source\PSoC5/SPIM.c **** volatile uint8 SPIM_swStatusRx;
  38:Generated_Source\PSoC5/SPIM.c **** 
  39:Generated_Source\PSoC5/SPIM.c **** 
  40:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
  41:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_Init
  42:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
  43:Generated_Source\PSoC5/SPIM.c **** *
  44:Generated_Source\PSoC5/SPIM.c **** * Summary:
  45:Generated_Source\PSoC5/SPIM.c **** *  Inits/Restores default SPIM configuration provided with customizer.
  46:Generated_Source\PSoC5/SPIM.c **** *
  47:Generated_Source\PSoC5/SPIM.c **** * Parameters:
  48:Generated_Source\PSoC5/SPIM.c **** *  None.
  49:Generated_Source\PSoC5/SPIM.c **** *
  50:Generated_Source\PSoC5/SPIM.c **** * Return:
  51:Generated_Source\PSoC5/SPIM.c **** *  None.
  52:Generated_Source\PSoC5/SPIM.c **** *
  53:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
  54:Generated_Source\PSoC5/SPIM.c **** *  When this function is called it initializes all of the necessary parameters
  55:Generated_Source\PSoC5/SPIM.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  56:Generated_Source\PSoC5/SPIM.c **** *  interrupt service routine, configuring the bit-counter parameters and
  57:Generated_Source\PSoC5/SPIM.c **** *  clearing the FIFO and Status Register.
  58:Generated_Source\PSoC5/SPIM.c **** *
  59:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
  60:Generated_Source\PSoC5/SPIM.c **** *  No.
  61:Generated_Source\PSoC5/SPIM.c **** *
  62:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
  63:Generated_Source\PSoC5/SPIM.c **** void SPIM_Init(void) 
  64:Generated_Source\PSoC5/SPIM.c **** {
  40              		.loc 1 64 0
  41              		.cfi_startproc
  42              		@ args = 0, pretend = 0, frame = 0
  43              		@ frame_needed = 1, uses_anonymous_args = 0
  44 0000 80B5     		push	{r7, lr}
  45              		.cfi_def_cfa_offset 8
  46              		.cfi_offset 7, -8
  47              		.cfi_offset 14, -4
  48 0002 00AF     		add	r7, sp, #0
  49              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC5/SPIM.c ****     /* Initialize the Bit counter */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 3


  66:Generated_Source\PSoC5/SPIM.c ****     SPIM_COUNTER_PERIOD_REG = SPIM_BITCTR_INIT;
  50              		.loc 1 66 0
  51 0004 124B     		ldr	r3, .L2
  52 0006 0F22     		movs	r2, #15
  53 0008 1A70     		strb	r2, [r3]
  67:Generated_Source\PSoC5/SPIM.c **** 
  68:Generated_Source\PSoC5/SPIM.c ****     /* Init TX ISR  */
  69:Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
  70:Generated_Source\PSoC5/SPIM.c ****         CyIntDisable         (SPIM_TX_ISR_NUMBER);
  54              		.loc 1 70 0
  55 000a 124B     		ldr	r3, .L2+4
  56 000c 0822     		movs	r2, #8
  57 000e 1A60     		str	r2, [r3]
  71:Generated_Source\PSoC5/SPIM.c ****         CyIntSetPriority     (SPIM_TX_ISR_NUMBER,  SPIM_TX_ISR_PRIORITY);
  58              		.loc 1 71 0
  59 0010 0621     		movs	r1, #6
  60 0012 0320     		movs	r0, #3
  61 0014 FFF7FEFF 		bl	CyIntSetPriority
  72:Generated_Source\PSoC5/SPIM.c ****         (void) CyIntSetVector(SPIM_TX_ISR_NUMBER, &SPIM_TX_ISR);
  62              		.loc 1 72 0
  63 0018 0F49     		ldr	r1, .L2+8
  64 001a 0320     		movs	r0, #3
  65 001c FFF7FEFF 		bl	CyIntSetVector
  73:Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
  74:Generated_Source\PSoC5/SPIM.c **** 
  75:Generated_Source\PSoC5/SPIM.c ****     /* Init RX ISR  */
  76:Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
  77:Generated_Source\PSoC5/SPIM.c ****         CyIntDisable         (SPIM_RX_ISR_NUMBER);
  78:Generated_Source\PSoC5/SPIM.c ****         CyIntSetPriority     (SPIM_RX_ISR_NUMBER,  SPIM_RX_ISR_PRIORITY);
  79:Generated_Source\PSoC5/SPIM.c ****         (void) CyIntSetVector(SPIM_RX_ISR_NUMBER, &SPIM_RX_ISR);
  80:Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
  81:Generated_Source\PSoC5/SPIM.c **** 
  82:Generated_Source\PSoC5/SPIM.c ****     /* Clear any stray data from the RX and TX FIFO */
  83:Generated_Source\PSoC5/SPIM.c ****     SPIM_ClearFIFO();
  66              		.loc 1 83 0
  67 0020 FFF7FEFF 		bl	SPIM_ClearFIFO
  84:Generated_Source\PSoC5/SPIM.c **** 
  85:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
  86:Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferFull  = 0u;
  87:Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferRead  = 0u;
  88:Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferWrite = 0u;
  89:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
  90:Generated_Source\PSoC5/SPIM.c **** 
  91:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  92:Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferFull  = 0u;
  68              		.loc 1 92 0
  69 0024 0D4B     		ldr	r3, .L2+12
  70 0026 0022     		movs	r2, #0
  71 0028 1A70     		strb	r2, [r3]
  93:Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferRead  = 0u;
  72              		.loc 1 93 0
  73 002a 0D4B     		ldr	r3, .L2+16
  74 002c 0022     		movs	r2, #0
  75 002e 1A70     		strb	r2, [r3]
  94:Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferWrite = 0u;
  76              		.loc 1 94 0
  77 0030 0C4B     		ldr	r3, .L2+20
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 4


  78 0032 0022     		movs	r2, #0
  79 0034 1A70     		strb	r2, [r3]
  95:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
  96:Generated_Source\PSoC5/SPIM.c **** 
  97:Generated_Source\PSoC5/SPIM.c ****     (void) SPIM_ReadTxStatus(); /* Clear Tx status and swStatusTx */
  80              		.loc 1 97 0
  81 0036 FFF7FEFF 		bl	SPIM_ReadTxStatus
  98:Generated_Source\PSoC5/SPIM.c ****     (void) SPIM_ReadRxStatus(); /* Clear Rx status and swStatusRx */
  82              		.loc 1 98 0
  83 003a FFF7FEFF 		bl	SPIM_ReadRxStatus
  99:Generated_Source\PSoC5/SPIM.c **** 
 100:Generated_Source\PSoC5/SPIM.c ****     /* Configure TX and RX interrupt mask */
 101:Generated_Source\PSoC5/SPIM.c ****     SPIM_TX_STATUS_MASK_REG = SPIM_TX_INIT_INTERRUPTS_MASK;
  84              		.loc 1 101 0
  85 003e 0A4B     		ldr	r3, .L2+24
  86 0040 0022     		movs	r2, #0
  87 0042 1A70     		strb	r2, [r3]
 102:Generated_Source\PSoC5/SPIM.c ****     SPIM_RX_STATUS_MASK_REG = SPIM_RX_INIT_INTERRUPTS_MASK;
  88              		.loc 1 102 0
  89 0044 094B     		ldr	r3, .L2+28
  90 0046 0022     		movs	r2, #0
  91 0048 1A70     		strb	r2, [r3]
 103:Generated_Source\PSoC5/SPIM.c **** }
  92              		.loc 1 103 0
  93 004a 00BF     		nop
  94 004c 80BD     		pop	{r7, pc}
  95              	.L3:
  96 004e 00BF     		.align	2
  97              	.L2:
  98 0050 8B650040 		.word	1073767819
  99 0054 80E100E0 		.word	-536813184
 100 0058 00000000 		.word	SPIM_TX_ISR
 101 005c 00000000 		.word	SPIM_txBufferFull
 102 0060 00000000 		.word	SPIM_txBufferRead
 103 0064 00000000 		.word	SPIM_txBufferWrite
 104 0068 84650040 		.word	1073767812
 105 006c 88640040 		.word	1073767560
 106              		.cfi_endproc
 107              	.LFE0:
 108              		.size	SPIM_Init, .-SPIM_Init
 109              		.section	.text.SPIM_Enable,"ax",%progbits
 110              		.align	2
 111              		.global	SPIM_Enable
 112              		.thumb
 113              		.thumb_func
 114              		.type	SPIM_Enable, %function
 115              	SPIM_Enable:
 116              	.LFB1:
 104:Generated_Source\PSoC5/SPIM.c **** 
 105:Generated_Source\PSoC5/SPIM.c **** 
 106:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 107:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_Enable
 108:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 109:Generated_Source\PSoC5/SPIM.c **** *
 110:Generated_Source\PSoC5/SPIM.c **** * Summary:
 111:Generated_Source\PSoC5/SPIM.c **** *  Enable SPIM component.
 112:Generated_Source\PSoC5/SPIM.c **** *
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 5


 113:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 114:Generated_Source\PSoC5/SPIM.c **** *  None.
 115:Generated_Source\PSoC5/SPIM.c **** *
 116:Generated_Source\PSoC5/SPIM.c **** * Return:
 117:Generated_Source\PSoC5/SPIM.c **** *  None.
 118:Generated_Source\PSoC5/SPIM.c **** *
 119:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 120:Generated_Source\PSoC5/SPIM.c **** void SPIM_Enable(void) 
 121:Generated_Source\PSoC5/SPIM.c **** {
 117              		.loc 1 121 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 8
 120              		@ frame_needed = 1, uses_anonymous_args = 0
 121 0000 80B5     		push	{r7, lr}
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 7, -8
 124              		.cfi_offset 14, -4
 125 0002 82B0     		sub	sp, sp, #8
 126              		.cfi_def_cfa_offset 16
 127 0004 00AF     		add	r7, sp, #0
 128              		.cfi_def_cfa_register 7
 122:Generated_Source\PSoC5/SPIM.c ****     uint8 enableInterrupts;
 123:Generated_Source\PSoC5/SPIM.c **** 
 124:Generated_Source\PSoC5/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 129              		.loc 1 124 0
 130 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 131 000a 0346     		mov	r3, r0
 132 000c FB71     		strb	r3, [r7, #7]
 125:Generated_Source\PSoC5/SPIM.c ****     SPIM_COUNTER_CONTROL_REG |= SPIM_CNTR_ENABLE;
 133              		.loc 1 125 0
 134 000e 134A     		ldr	r2, .L5
 135 0010 124B     		ldr	r3, .L5
 136 0012 1B78     		ldrb	r3, [r3]
 137 0014 DBB2     		uxtb	r3, r3
 138 0016 43F02003 		orr	r3, r3, #32
 139 001a DBB2     		uxtb	r3, r3
 140 001c 1370     		strb	r3, [r2]
 126:Generated_Source\PSoC5/SPIM.c ****     SPIM_TX_STATUS_ACTL_REG  |= SPIM_INT_ENABLE;
 141              		.loc 1 126 0
 142 001e 104A     		ldr	r2, .L5+4
 143 0020 0F4B     		ldr	r3, .L5+4
 144 0022 1B78     		ldrb	r3, [r3]
 145 0024 DBB2     		uxtb	r3, r3
 146 0026 43F01003 		orr	r3, r3, #16
 147 002a DBB2     		uxtb	r3, r3
 148 002c 1370     		strb	r3, [r2]
 127:Generated_Source\PSoC5/SPIM.c ****     SPIM_RX_STATUS_ACTL_REG  |= SPIM_INT_ENABLE;
 149              		.loc 1 127 0
 150 002e 0D4A     		ldr	r2, .L5+8
 151 0030 0C4B     		ldr	r3, .L5+8
 152 0032 1B78     		ldrb	r3, [r3]
 153 0034 DBB2     		uxtb	r3, r3
 154 0036 43F01003 		orr	r3, r3, #16
 155 003a DBB2     		uxtb	r3, r3
 156 003c 1370     		strb	r3, [r2]
 128:Generated_Source\PSoC5/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 157              		.loc 1 128 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 6


 158 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 159 0040 1846     		mov	r0, r3
 160 0042 FFF7FEFF 		bl	CyExitCriticalSection
 129:Generated_Source\PSoC5/SPIM.c **** 
 130:Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_CLOCK)
 131:Generated_Source\PSoC5/SPIM.c ****         SPIM_IntClock_Enable();
 161              		.loc 1 131 0
 162 0046 FFF7FEFF 		bl	SPIM_IntClock_Start
 132:Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_CLOCK) */
 133:Generated_Source\PSoC5/SPIM.c **** 
 134:Generated_Source\PSoC5/SPIM.c ****     SPIM_EnableTxInt();
 163              		.loc 1 134 0
 164 004a FFF7FEFF 		bl	SPIM_EnableTxInt
 135:Generated_Source\PSoC5/SPIM.c ****     SPIM_EnableRxInt();
 165              		.loc 1 135 0
 166 004e FFF7FEFF 		bl	SPIM_EnableRxInt
 136:Generated_Source\PSoC5/SPIM.c **** }
 167              		.loc 1 136 0
 168 0052 00BF     		nop
 169 0054 0837     		adds	r7, r7, #8
 170              		.cfi_def_cfa_offset 8
 171 0056 BD46     		mov	sp, r7
 172              		.cfi_def_cfa_register 13
 173              		@ sp needed
 174 0058 80BD     		pop	{r7, pc}
 175              	.L6:
 176 005a 00BF     		.align	2
 177              	.L5:
 178 005c 9B650040 		.word	1073767835
 179 0060 94650040 		.word	1073767828
 180 0064 98640040 		.word	1073767576
 181              		.cfi_endproc
 182              	.LFE1:
 183              		.size	SPIM_Enable, .-SPIM_Enable
 184              		.section	.text.SPIM_Start,"ax",%progbits
 185              		.align	2
 186              		.global	SPIM_Start
 187              		.thumb
 188              		.thumb_func
 189              		.type	SPIM_Start, %function
 190              	SPIM_Start:
 191              	.LFB2:
 137:Generated_Source\PSoC5/SPIM.c **** 
 138:Generated_Source\PSoC5/SPIM.c **** 
 139:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 140:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_Start
 141:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 142:Generated_Source\PSoC5/SPIM.c **** *
 143:Generated_Source\PSoC5/SPIM.c **** * Summary:
 144:Generated_Source\PSoC5/SPIM.c **** *  Initialize and Enable the SPI Master component.
 145:Generated_Source\PSoC5/SPIM.c **** *
 146:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 147:Generated_Source\PSoC5/SPIM.c **** *  None.
 148:Generated_Source\PSoC5/SPIM.c **** *
 149:Generated_Source\PSoC5/SPIM.c **** * Return:
 150:Generated_Source\PSoC5/SPIM.c **** *  None.
 151:Generated_Source\PSoC5/SPIM.c **** *
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 7


 152:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 153:Generated_Source\PSoC5/SPIM.c **** *  SPIM_initVar - used to check initial configuration, modified on
 154:Generated_Source\PSoC5/SPIM.c **** *  first function call.
 155:Generated_Source\PSoC5/SPIM.c **** *
 156:Generated_Source\PSoC5/SPIM.c **** * Theory:
 157:Generated_Source\PSoC5/SPIM.c **** *  Enable the clock input to enable operation.
 158:Generated_Source\PSoC5/SPIM.c **** *
 159:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 160:Generated_Source\PSoC5/SPIM.c **** *  No.
 161:Generated_Source\PSoC5/SPIM.c **** *
 162:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 163:Generated_Source\PSoC5/SPIM.c **** void SPIM_Start(void) 
 164:Generated_Source\PSoC5/SPIM.c **** {
 192              		.loc 1 164 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 1, uses_anonymous_args = 0
 196 0000 80B5     		push	{r7, lr}
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 7, -8
 199              		.cfi_offset 14, -4
 200 0002 00AF     		add	r7, sp, #0
 201              		.cfi_def_cfa_register 7
 165:Generated_Source\PSoC5/SPIM.c ****     if(0u == SPIM_initVar)
 202              		.loc 1 165 0
 203 0004 064B     		ldr	r3, .L9
 204 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 205 0008 002B     		cmp	r3, #0
 206 000a 04D1     		bne	.L8
 166:Generated_Source\PSoC5/SPIM.c ****     {
 167:Generated_Source\PSoC5/SPIM.c ****         SPIM_Init();
 207              		.loc 1 167 0
 208 000c FFF7FEFF 		bl	SPIM_Init
 168:Generated_Source\PSoC5/SPIM.c ****         SPIM_initVar = 1u;
 209              		.loc 1 168 0
 210 0010 034B     		ldr	r3, .L9
 211 0012 0122     		movs	r2, #1
 212 0014 1A70     		strb	r2, [r3]
 213              	.L8:
 169:Generated_Source\PSoC5/SPIM.c ****     }
 170:Generated_Source\PSoC5/SPIM.c **** 
 171:Generated_Source\PSoC5/SPIM.c ****     SPIM_Enable();
 214              		.loc 1 171 0
 215 0016 FFF7FEFF 		bl	SPIM_Enable
 172:Generated_Source\PSoC5/SPIM.c **** }
 216              		.loc 1 172 0
 217 001a 00BF     		nop
 218 001c 80BD     		pop	{r7, pc}
 219              	.L10:
 220 001e 00BF     		.align	2
 221              	.L9:
 222 0020 00000000 		.word	SPIM_initVar
 223              		.cfi_endproc
 224              	.LFE2:
 225              		.size	SPIM_Start, .-SPIM_Start
 226              		.section	.text.SPIM_Stop,"ax",%progbits
 227              		.align	2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 8


 228              		.global	SPIM_Stop
 229              		.thumb
 230              		.thumb_func
 231              		.type	SPIM_Stop, %function
 232              	SPIM_Stop:
 233              	.LFB3:
 173:Generated_Source\PSoC5/SPIM.c **** 
 174:Generated_Source\PSoC5/SPIM.c **** 
 175:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 176:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_Stop
 177:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 178:Generated_Source\PSoC5/SPIM.c **** *
 179:Generated_Source\PSoC5/SPIM.c **** * Summary:
 180:Generated_Source\PSoC5/SPIM.c **** *  Disable the SPI Master component.
 181:Generated_Source\PSoC5/SPIM.c **** *
 182:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 183:Generated_Source\PSoC5/SPIM.c **** *  None.
 184:Generated_Source\PSoC5/SPIM.c **** *
 185:Generated_Source\PSoC5/SPIM.c **** * Return:
 186:Generated_Source\PSoC5/SPIM.c **** *  None.
 187:Generated_Source\PSoC5/SPIM.c **** *
 188:Generated_Source\PSoC5/SPIM.c **** * Theory:
 189:Generated_Source\PSoC5/SPIM.c **** *  Disable the clock input to enable operation.
 190:Generated_Source\PSoC5/SPIM.c **** *
 191:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 192:Generated_Source\PSoC5/SPIM.c **** void SPIM_Stop(void) 
 193:Generated_Source\PSoC5/SPIM.c **** {
 234              		.loc 1 193 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 8
 237              		@ frame_needed = 1, uses_anonymous_args = 0
 238 0000 80B5     		push	{r7, lr}
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 7, -8
 241              		.cfi_offset 14, -4
 242 0002 82B0     		sub	sp, sp, #8
 243              		.cfi_def_cfa_offset 16
 244 0004 00AF     		add	r7, sp, #0
 245              		.cfi_def_cfa_register 7
 194:Generated_Source\PSoC5/SPIM.c ****     uint8 enableInterrupts;
 195:Generated_Source\PSoC5/SPIM.c **** 
 196:Generated_Source\PSoC5/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 246              		.loc 1 196 0
 247 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 248 000a 0346     		mov	r3, r0
 249 000c FB71     		strb	r3, [r7, #7]
 197:Generated_Source\PSoC5/SPIM.c ****     SPIM_TX_STATUS_ACTL_REG &= ((uint8) ~SPIM_INT_ENABLE);
 250              		.loc 1 197 0
 251 000e 0F4A     		ldr	r2, .L12
 252 0010 0E4B     		ldr	r3, .L12
 253 0012 1B78     		ldrb	r3, [r3]
 254 0014 DBB2     		uxtb	r3, r3
 255 0016 23F01003 		bic	r3, r3, #16
 256 001a DBB2     		uxtb	r3, r3
 257 001c 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC5/SPIM.c ****     SPIM_RX_STATUS_ACTL_REG &= ((uint8) ~SPIM_INT_ENABLE);
 258              		.loc 1 198 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 9


 259 001e 0C4A     		ldr	r2, .L12+4
 260 0020 0B4B     		ldr	r3, .L12+4
 261 0022 1B78     		ldrb	r3, [r3]
 262 0024 DBB2     		uxtb	r3, r3
 263 0026 23F01003 		bic	r3, r3, #16
 264 002a DBB2     		uxtb	r3, r3
 265 002c 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC5/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 266              		.loc 1 199 0
 267 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 268 0030 1846     		mov	r0, r3
 269 0032 FFF7FEFF 		bl	CyExitCriticalSection
 200:Generated_Source\PSoC5/SPIM.c **** 
 201:Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_CLOCK)
 202:Generated_Source\PSoC5/SPIM.c ****         SPIM_IntClock_Disable();
 270              		.loc 1 202 0
 271 0036 FFF7FEFF 		bl	SPIM_IntClock_Stop
 203:Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_CLOCK) */
 204:Generated_Source\PSoC5/SPIM.c **** 
 205:Generated_Source\PSoC5/SPIM.c ****     SPIM_DisableTxInt();
 272              		.loc 1 205 0
 273 003a FFF7FEFF 		bl	SPIM_DisableTxInt
 206:Generated_Source\PSoC5/SPIM.c ****     SPIM_DisableRxInt();
 274              		.loc 1 206 0
 275 003e FFF7FEFF 		bl	SPIM_DisableRxInt
 207:Generated_Source\PSoC5/SPIM.c **** }
 276              		.loc 1 207 0
 277 0042 00BF     		nop
 278 0044 0837     		adds	r7, r7, #8
 279              		.cfi_def_cfa_offset 8
 280 0046 BD46     		mov	sp, r7
 281              		.cfi_def_cfa_register 13
 282              		@ sp needed
 283 0048 80BD     		pop	{r7, pc}
 284              	.L13:
 285 004a 00BF     		.align	2
 286              	.L12:
 287 004c 94650040 		.word	1073767828
 288 0050 98640040 		.word	1073767576
 289              		.cfi_endproc
 290              	.LFE3:
 291              		.size	SPIM_Stop, .-SPIM_Stop
 292              		.section	.text.SPIM_EnableTxInt,"ax",%progbits
 293              		.align	2
 294              		.global	SPIM_EnableTxInt
 295              		.thumb
 296              		.thumb_func
 297              		.type	SPIM_EnableTxInt, %function
 298              	SPIM_EnableTxInt:
 299              	.LFB4:
 208:Generated_Source\PSoC5/SPIM.c **** 
 209:Generated_Source\PSoC5/SPIM.c **** 
 210:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 211:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_EnableTxInt
 212:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 213:Generated_Source\PSoC5/SPIM.c **** *
 214:Generated_Source\PSoC5/SPIM.c **** * Summary:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 10


 215:Generated_Source\PSoC5/SPIM.c **** *  Enable internal Tx interrupt generation.
 216:Generated_Source\PSoC5/SPIM.c **** *
 217:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 218:Generated_Source\PSoC5/SPIM.c **** *  None.
 219:Generated_Source\PSoC5/SPIM.c **** *
 220:Generated_Source\PSoC5/SPIM.c **** * Return:
 221:Generated_Source\PSoC5/SPIM.c **** *  None.
 222:Generated_Source\PSoC5/SPIM.c **** *
 223:Generated_Source\PSoC5/SPIM.c **** * Theory:
 224:Generated_Source\PSoC5/SPIM.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 225:Generated_Source\PSoC5/SPIM.c **** *
 226:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 227:Generated_Source\PSoC5/SPIM.c **** void SPIM_EnableTxInt(void) 
 228:Generated_Source\PSoC5/SPIM.c **** {
 300              		.loc 1 228 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 1, uses_anonymous_args = 0
 304              		@ link register save eliminated.
 305 0000 80B4     		push	{r7}
 306              		.cfi_def_cfa_offset 4
 307              		.cfi_offset 7, -4
 308 0002 00AF     		add	r7, sp, #0
 309              		.cfi_def_cfa_register 7
 229:Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
 230:Generated_Source\PSoC5/SPIM.c ****         CyIntEnable(SPIM_TX_ISR_NUMBER);
 310              		.loc 1 230 0
 311 0004 034B     		ldr	r3, .L15
 312 0006 0822     		movs	r2, #8
 313 0008 1A60     		str	r2, [r3]
 231:Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
 232:Generated_Source\PSoC5/SPIM.c **** }
 314              		.loc 1 232 0
 315 000a 00BF     		nop
 316 000c BD46     		mov	sp, r7
 317              		.cfi_def_cfa_register 13
 318              		@ sp needed
 319 000e 80BC     		pop	{r7}
 320              		.cfi_restore 7
 321              		.cfi_def_cfa_offset 0
 322 0010 7047     		bx	lr
 323              	.L16:
 324 0012 00BF     		.align	2
 325              	.L15:
 326 0014 00E100E0 		.word	-536813312
 327              		.cfi_endproc
 328              	.LFE4:
 329              		.size	SPIM_EnableTxInt, .-SPIM_EnableTxInt
 330              		.section	.text.SPIM_EnableRxInt,"ax",%progbits
 331              		.align	2
 332              		.global	SPIM_EnableRxInt
 333              		.thumb
 334              		.thumb_func
 335              		.type	SPIM_EnableRxInt, %function
 336              	SPIM_EnableRxInt:
 337              	.LFB5:
 233:Generated_Source\PSoC5/SPIM.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 11


 234:Generated_Source\PSoC5/SPIM.c **** 
 235:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 236:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_EnableRxInt
 237:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 238:Generated_Source\PSoC5/SPIM.c **** *
 239:Generated_Source\PSoC5/SPIM.c **** * Summary:
 240:Generated_Source\PSoC5/SPIM.c **** *  Enable internal Rx interrupt generation.
 241:Generated_Source\PSoC5/SPIM.c **** *
 242:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 243:Generated_Source\PSoC5/SPIM.c **** *  None.
 244:Generated_Source\PSoC5/SPIM.c **** *
 245:Generated_Source\PSoC5/SPIM.c **** * Return:
 246:Generated_Source\PSoC5/SPIM.c **** *  None.
 247:Generated_Source\PSoC5/SPIM.c **** *
 248:Generated_Source\PSoC5/SPIM.c **** * Theory:
 249:Generated_Source\PSoC5/SPIM.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 250:Generated_Source\PSoC5/SPIM.c **** *
 251:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 252:Generated_Source\PSoC5/SPIM.c **** void SPIM_EnableRxInt(void) 
 253:Generated_Source\PSoC5/SPIM.c **** {
 338              		.loc 1 253 0
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 1, uses_anonymous_args = 0
 342              		@ link register save eliminated.
 343 0000 80B4     		push	{r7}
 344              		.cfi_def_cfa_offset 4
 345              		.cfi_offset 7, -4
 346 0002 00AF     		add	r7, sp, #0
 347              		.cfi_def_cfa_register 7
 254:Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
 255:Generated_Source\PSoC5/SPIM.c ****         CyIntEnable(SPIM_RX_ISR_NUMBER);
 256:Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
 257:Generated_Source\PSoC5/SPIM.c **** }
 348              		.loc 1 257 0
 349 0004 00BF     		nop
 350 0006 BD46     		mov	sp, r7
 351              		.cfi_def_cfa_register 13
 352              		@ sp needed
 353 0008 80BC     		pop	{r7}
 354              		.cfi_restore 7
 355              		.cfi_def_cfa_offset 0
 356 000a 7047     		bx	lr
 357              		.cfi_endproc
 358              	.LFE5:
 359              		.size	SPIM_EnableRxInt, .-SPIM_EnableRxInt
 360              		.section	.text.SPIM_DisableTxInt,"ax",%progbits
 361              		.align	2
 362              		.global	SPIM_DisableTxInt
 363              		.thumb
 364              		.thumb_func
 365              		.type	SPIM_DisableTxInt, %function
 366              	SPIM_DisableTxInt:
 367              	.LFB6:
 258:Generated_Source\PSoC5/SPIM.c **** 
 259:Generated_Source\PSoC5/SPIM.c **** 
 260:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 12


 261:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_DisableTxInt
 262:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 263:Generated_Source\PSoC5/SPIM.c **** *
 264:Generated_Source\PSoC5/SPIM.c **** * Summary:
 265:Generated_Source\PSoC5/SPIM.c **** *  Disable internal Tx interrupt generation.
 266:Generated_Source\PSoC5/SPIM.c **** *
 267:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 268:Generated_Source\PSoC5/SPIM.c **** *  None.
 269:Generated_Source\PSoC5/SPIM.c **** *
 270:Generated_Source\PSoC5/SPIM.c **** * Return:
 271:Generated_Source\PSoC5/SPIM.c **** *  None.
 272:Generated_Source\PSoC5/SPIM.c **** *
 273:Generated_Source\PSoC5/SPIM.c **** * Theory:
 274:Generated_Source\PSoC5/SPIM.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 275:Generated_Source\PSoC5/SPIM.c **** *
 276:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 277:Generated_Source\PSoC5/SPIM.c **** void SPIM_DisableTxInt(void) 
 278:Generated_Source\PSoC5/SPIM.c **** {
 368              		.loc 1 278 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 1, uses_anonymous_args = 0
 372              		@ link register save eliminated.
 373 0000 80B4     		push	{r7}
 374              		.cfi_def_cfa_offset 4
 375              		.cfi_offset 7, -4
 376 0002 00AF     		add	r7, sp, #0
 377              		.cfi_def_cfa_register 7
 279:Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
 280:Generated_Source\PSoC5/SPIM.c ****         CyIntDisable(SPIM_TX_ISR_NUMBER);
 378              		.loc 1 280 0
 379 0004 034B     		ldr	r3, .L19
 380 0006 0822     		movs	r2, #8
 381 0008 1A60     		str	r2, [r3]
 281:Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
 282:Generated_Source\PSoC5/SPIM.c **** }
 382              		.loc 1 282 0
 383 000a 00BF     		nop
 384 000c BD46     		mov	sp, r7
 385              		.cfi_def_cfa_register 13
 386              		@ sp needed
 387 000e 80BC     		pop	{r7}
 388              		.cfi_restore 7
 389              		.cfi_def_cfa_offset 0
 390 0010 7047     		bx	lr
 391              	.L20:
 392 0012 00BF     		.align	2
 393              	.L19:
 394 0014 80E100E0 		.word	-536813184
 395              		.cfi_endproc
 396              	.LFE6:
 397              		.size	SPIM_DisableTxInt, .-SPIM_DisableTxInt
 398              		.section	.text.SPIM_DisableRxInt,"ax",%progbits
 399              		.align	2
 400              		.global	SPIM_DisableRxInt
 401              		.thumb
 402              		.thumb_func
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 13


 403              		.type	SPIM_DisableRxInt, %function
 404              	SPIM_DisableRxInt:
 405              	.LFB7:
 283:Generated_Source\PSoC5/SPIM.c **** 
 284:Generated_Source\PSoC5/SPIM.c **** 
 285:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_DisableRxInt
 287:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 288:Generated_Source\PSoC5/SPIM.c **** *
 289:Generated_Source\PSoC5/SPIM.c **** * Summary:
 290:Generated_Source\PSoC5/SPIM.c **** *  Disable internal Rx interrupt generation.
 291:Generated_Source\PSoC5/SPIM.c **** *
 292:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 293:Generated_Source\PSoC5/SPIM.c **** *  None.
 294:Generated_Source\PSoC5/SPIM.c **** *
 295:Generated_Source\PSoC5/SPIM.c **** * Return:
 296:Generated_Source\PSoC5/SPIM.c **** *  None.
 297:Generated_Source\PSoC5/SPIM.c **** *
 298:Generated_Source\PSoC5/SPIM.c **** * Theory:
 299:Generated_Source\PSoC5/SPIM.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 300:Generated_Source\PSoC5/SPIM.c **** *
 301:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/SPIM.c **** void SPIM_DisableRxInt(void) 
 303:Generated_Source\PSoC5/SPIM.c **** {
 406              		.loc 1 303 0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 1, uses_anonymous_args = 0
 410              		@ link register save eliminated.
 411 0000 80B4     		push	{r7}
 412              		.cfi_def_cfa_offset 4
 413              		.cfi_offset 7, -4
 414 0002 00AF     		add	r7, sp, #0
 415              		.cfi_def_cfa_register 7
 304:Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
 305:Generated_Source\PSoC5/SPIM.c ****         CyIntDisable(SPIM_RX_ISR_NUMBER);
 306:Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
 307:Generated_Source\PSoC5/SPIM.c **** }
 416              		.loc 1 307 0
 417 0004 00BF     		nop
 418 0006 BD46     		mov	sp, r7
 419              		.cfi_def_cfa_register 13
 420              		@ sp needed
 421 0008 80BC     		pop	{r7}
 422              		.cfi_restore 7
 423              		.cfi_def_cfa_offset 0
 424 000a 7047     		bx	lr
 425              		.cfi_endproc
 426              	.LFE7:
 427              		.size	SPIM_DisableRxInt, .-SPIM_DisableRxInt
 428              		.section	.text.SPIM_SetTxInterruptMode,"ax",%progbits
 429              		.align	2
 430              		.global	SPIM_SetTxInterruptMode
 431              		.thumb
 432              		.thumb_func
 433              		.type	SPIM_SetTxInterruptMode, %function
 434              	SPIM_SetTxInterruptMode:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 14


 435              	.LFB8:
 308:Generated_Source\PSoC5/SPIM.c **** 
 309:Generated_Source\PSoC5/SPIM.c **** 
 310:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 311:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_SetTxInterruptMode
 312:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 313:Generated_Source\PSoC5/SPIM.c **** *
 314:Generated_Source\PSoC5/SPIM.c **** * Summary:
 315:Generated_Source\PSoC5/SPIM.c **** *  Configure which status bits trigger an interrupt event.
 316:Generated_Source\PSoC5/SPIM.c **** *
 317:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 318:Generated_Source\PSoC5/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 319:Generated_Source\PSoC5/SPIM.c **** *  header file).
 320:Generated_Source\PSoC5/SPIM.c **** *
 321:Generated_Source\PSoC5/SPIM.c **** * Return:
 322:Generated_Source\PSoC5/SPIM.c **** *  None.
 323:Generated_Source\PSoC5/SPIM.c **** *
 324:Generated_Source\PSoC5/SPIM.c **** * Theory:
 325:Generated_Source\PSoC5/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
 326:Generated_Source\PSoC5/SPIM.c **** *
 327:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 328:Generated_Source\PSoC5/SPIM.c **** void SPIM_SetTxInterruptMode(uint8 intSrc) 
 329:Generated_Source\PSoC5/SPIM.c **** {
 436              		.loc 1 329 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 8
 439              		@ frame_needed = 1, uses_anonymous_args = 0
 440              		@ link register save eliminated.
 441 0000 80B4     		push	{r7}
 442              		.cfi_def_cfa_offset 4
 443              		.cfi_offset 7, -4
 444 0002 83B0     		sub	sp, sp, #12
 445              		.cfi_def_cfa_offset 16
 446 0004 00AF     		add	r7, sp, #0
 447              		.cfi_def_cfa_register 7
 448 0006 0346     		mov	r3, r0
 449 0008 FB71     		strb	r3, [r7, #7]
 330:Generated_Source\PSoC5/SPIM.c ****     SPIM_TX_STATUS_MASK_REG = intSrc;
 450              		.loc 1 330 0
 451 000a 044A     		ldr	r2, .L23
 452 000c FB79     		ldrb	r3, [r7, #7]
 453 000e 1370     		strb	r3, [r2]
 331:Generated_Source\PSoC5/SPIM.c **** }
 454              		.loc 1 331 0
 455 0010 00BF     		nop
 456 0012 0C37     		adds	r7, r7, #12
 457              		.cfi_def_cfa_offset 4
 458 0014 BD46     		mov	sp, r7
 459              		.cfi_def_cfa_register 13
 460              		@ sp needed
 461 0016 80BC     		pop	{r7}
 462              		.cfi_restore 7
 463              		.cfi_def_cfa_offset 0
 464 0018 7047     		bx	lr
 465              	.L24:
 466 001a 00BF     		.align	2
 467              	.L23:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 15


 468 001c 84650040 		.word	1073767812
 469              		.cfi_endproc
 470              	.LFE8:
 471              		.size	SPIM_SetTxInterruptMode, .-SPIM_SetTxInterruptMode
 472              		.section	.text.SPIM_SetRxInterruptMode,"ax",%progbits
 473              		.align	2
 474              		.global	SPIM_SetRxInterruptMode
 475              		.thumb
 476              		.thumb_func
 477              		.type	SPIM_SetRxInterruptMode, %function
 478              	SPIM_SetRxInterruptMode:
 479              	.LFB9:
 332:Generated_Source\PSoC5/SPIM.c **** 
 333:Generated_Source\PSoC5/SPIM.c **** 
 334:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 335:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_SetRxInterruptMode
 336:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 337:Generated_Source\PSoC5/SPIM.c **** *
 338:Generated_Source\PSoC5/SPIM.c **** * Summary:
 339:Generated_Source\PSoC5/SPIM.c **** *  Configure which status bits trigger an interrupt event.
 340:Generated_Source\PSoC5/SPIM.c **** *
 341:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 342:Generated_Source\PSoC5/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 343:Generated_Source\PSoC5/SPIM.c **** *  header file).
 344:Generated_Source\PSoC5/SPIM.c **** *
 345:Generated_Source\PSoC5/SPIM.c **** * Return:
 346:Generated_Source\PSoC5/SPIM.c **** *  None.
 347:Generated_Source\PSoC5/SPIM.c **** *
 348:Generated_Source\PSoC5/SPIM.c **** * Theory:
 349:Generated_Source\PSoC5/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
 350:Generated_Source\PSoC5/SPIM.c **** *
 351:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 352:Generated_Source\PSoC5/SPIM.c **** void SPIM_SetRxInterruptMode(uint8 intSrc) 
 353:Generated_Source\PSoC5/SPIM.c **** {
 480              		.loc 1 353 0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 8
 483              		@ frame_needed = 1, uses_anonymous_args = 0
 484              		@ link register save eliminated.
 485 0000 80B4     		push	{r7}
 486              		.cfi_def_cfa_offset 4
 487              		.cfi_offset 7, -4
 488 0002 83B0     		sub	sp, sp, #12
 489              		.cfi_def_cfa_offset 16
 490 0004 00AF     		add	r7, sp, #0
 491              		.cfi_def_cfa_register 7
 492 0006 0346     		mov	r3, r0
 493 0008 FB71     		strb	r3, [r7, #7]
 354:Generated_Source\PSoC5/SPIM.c ****     SPIM_RX_STATUS_MASK_REG  = intSrc;
 494              		.loc 1 354 0
 495 000a 044A     		ldr	r2, .L26
 496 000c FB79     		ldrb	r3, [r7, #7]
 497 000e 1370     		strb	r3, [r2]
 355:Generated_Source\PSoC5/SPIM.c **** }
 498              		.loc 1 355 0
 499 0010 00BF     		nop
 500 0012 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 16


 501              		.cfi_def_cfa_offset 4
 502 0014 BD46     		mov	sp, r7
 503              		.cfi_def_cfa_register 13
 504              		@ sp needed
 505 0016 80BC     		pop	{r7}
 506              		.cfi_restore 7
 507              		.cfi_def_cfa_offset 0
 508 0018 7047     		bx	lr
 509              	.L27:
 510 001a 00BF     		.align	2
 511              	.L26:
 512 001c 88640040 		.word	1073767560
 513              		.cfi_endproc
 514              	.LFE9:
 515              		.size	SPIM_SetRxInterruptMode, .-SPIM_SetRxInterruptMode
 516              		.section	.text.SPIM_ReadTxStatus,"ax",%progbits
 517              		.align	2
 518              		.global	SPIM_ReadTxStatus
 519              		.thumb
 520              		.thumb_func
 521              		.type	SPIM_ReadTxStatus, %function
 522              	SPIM_ReadTxStatus:
 523              	.LFB10:
 356:Generated_Source\PSoC5/SPIM.c **** 
 357:Generated_Source\PSoC5/SPIM.c **** 
 358:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 359:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ReadTxStatus
 360:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 361:Generated_Source\PSoC5/SPIM.c **** *
 362:Generated_Source\PSoC5/SPIM.c **** * Summary:
 363:Generated_Source\PSoC5/SPIM.c **** *  Read the Tx status register for the component.
 364:Generated_Source\PSoC5/SPIM.c **** *
 365:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 366:Generated_Source\PSoC5/SPIM.c **** *  None.
 367:Generated_Source\PSoC5/SPIM.c **** *
 368:Generated_Source\PSoC5/SPIM.c **** * Return:
 369:Generated_Source\PSoC5/SPIM.c **** *  Contents of the Tx status register.
 370:Generated_Source\PSoC5/SPIM.c **** *
 371:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 372:Generated_Source\PSoC5/SPIM.c **** *  SPIM_swStatusTx - used to store in software status register,
 373:Generated_Source\PSoC5/SPIM.c **** *  modified every function call - resets to zero.
 374:Generated_Source\PSoC5/SPIM.c **** *
 375:Generated_Source\PSoC5/SPIM.c **** * Theory:
 376:Generated_Source\PSoC5/SPIM.c **** *  Allows the user and the API to read the Tx status register for error
 377:Generated_Source\PSoC5/SPIM.c **** *  detection and flow control.
 378:Generated_Source\PSoC5/SPIM.c **** *
 379:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 380:Generated_Source\PSoC5/SPIM.c **** *  Clear Tx status register of the component.
 381:Generated_Source\PSoC5/SPIM.c **** *
 382:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 383:Generated_Source\PSoC5/SPIM.c **** *  No.
 384:Generated_Source\PSoC5/SPIM.c **** *
 385:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 386:Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_ReadTxStatus(void) 
 387:Generated_Source\PSoC5/SPIM.c **** {
 524              		.loc 1 387 0
 525              		.cfi_startproc
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 17


 526              		@ args = 0, pretend = 0, frame = 8
 527              		@ frame_needed = 1, uses_anonymous_args = 0
 528 0000 80B5     		push	{r7, lr}
 529              		.cfi_def_cfa_offset 8
 530              		.cfi_offset 7, -8
 531              		.cfi_offset 14, -4
 532 0002 82B0     		sub	sp, sp, #8
 533              		.cfi_def_cfa_offset 16
 534 0004 00AF     		add	r7, sp, #0
 535              		.cfi_def_cfa_register 7
 388:Generated_Source\PSoC5/SPIM.c ****     uint8 tmpStatus;
 389:Generated_Source\PSoC5/SPIM.c **** 
 390:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 391:Generated_Source\PSoC5/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 392:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableTxInt();
 536              		.loc 1 392 0
 537 0006 FFF7FEFF 		bl	SPIM_DisableTxInt
 393:Generated_Source\PSoC5/SPIM.c **** 
 394:Generated_Source\PSoC5/SPIM.c ****         tmpStatus = SPIM_GET_STATUS_TX(SPIM_swStatusTx);
 538              		.loc 1 394 0
 539 000a 0A4B     		ldr	r3, .L30
 540 000c 1B78     		ldrb	r3, [r3]
 541 000e DAB2     		uxtb	r2, r3
 542 0010 094B     		ldr	r3, .L30+4
 543 0012 1B78     		ldrb	r3, [r3]
 544 0014 DBB2     		uxtb	r3, r3
 545 0016 03F00903 		and	r3, r3, #9
 546 001a DBB2     		uxtb	r3, r3
 547 001c 1343     		orrs	r3, r3, r2
 548 001e FB71     		strb	r3, [r7, #7]
 395:Generated_Source\PSoC5/SPIM.c ****         SPIM_swStatusTx = 0u;
 549              		.loc 1 395 0
 550 0020 054B     		ldr	r3, .L30+4
 551 0022 0022     		movs	r2, #0
 552 0024 1A70     		strb	r2, [r3]
 396:Generated_Source\PSoC5/SPIM.c **** 
 397:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableTxInt();
 553              		.loc 1 397 0
 554 0026 FFF7FEFF 		bl	SPIM_EnableTxInt
 398:Generated_Source\PSoC5/SPIM.c **** 
 399:Generated_Source\PSoC5/SPIM.c ****     #else
 400:Generated_Source\PSoC5/SPIM.c **** 
 401:Generated_Source\PSoC5/SPIM.c ****         tmpStatus = SPIM_TX_STATUS_REG;
 402:Generated_Source\PSoC5/SPIM.c **** 
 403:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 404:Generated_Source\PSoC5/SPIM.c **** 
 405:Generated_Source\PSoC5/SPIM.c ****     return(tmpStatus);
 555              		.loc 1 405 0
 556 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 406:Generated_Source\PSoC5/SPIM.c **** }
 557              		.loc 1 406 0
 558 002c 1846     		mov	r0, r3
 559 002e 0837     		adds	r7, r7, #8
 560              		.cfi_def_cfa_offset 8
 561 0030 BD46     		mov	sp, r7
 562              		.cfi_def_cfa_register 13
 563              		@ sp needed
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 18


 564 0032 80BD     		pop	{r7, pc}
 565              	.L31:
 566              		.align	2
 567              	.L30:
 568 0034 64650040 		.word	1073767780
 569 0038 00000000 		.word	SPIM_swStatusTx
 570              		.cfi_endproc
 571              	.LFE10:
 572              		.size	SPIM_ReadTxStatus, .-SPIM_ReadTxStatus
 573              		.section	.text.SPIM_ReadRxStatus,"ax",%progbits
 574              		.align	2
 575              		.global	SPIM_ReadRxStatus
 576              		.thumb
 577              		.thumb_func
 578              		.type	SPIM_ReadRxStatus, %function
 579              	SPIM_ReadRxStatus:
 580              	.LFB11:
 407:Generated_Source\PSoC5/SPIM.c **** 
 408:Generated_Source\PSoC5/SPIM.c **** 
 409:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 410:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ReadRxStatus
 411:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 412:Generated_Source\PSoC5/SPIM.c **** *
 413:Generated_Source\PSoC5/SPIM.c **** * Summary:
 414:Generated_Source\PSoC5/SPIM.c **** *  Read the Rx status register for the component.
 415:Generated_Source\PSoC5/SPIM.c **** *
 416:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 417:Generated_Source\PSoC5/SPIM.c **** *  None.
 418:Generated_Source\PSoC5/SPIM.c **** *
 419:Generated_Source\PSoC5/SPIM.c **** * Return:
 420:Generated_Source\PSoC5/SPIM.c **** *  Contents of the Rx status register.
 421:Generated_Source\PSoC5/SPIM.c **** *
 422:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 423:Generated_Source\PSoC5/SPIM.c **** *  SPIM_swStatusRx - used to store in software Rx status register,
 424:Generated_Source\PSoC5/SPIM.c **** *  modified every function call - resets to zero.
 425:Generated_Source\PSoC5/SPIM.c **** *
 426:Generated_Source\PSoC5/SPIM.c **** * Theory:
 427:Generated_Source\PSoC5/SPIM.c **** *  Allows the user and the API to read the Rx status register for error
 428:Generated_Source\PSoC5/SPIM.c **** *  detection and flow control.
 429:Generated_Source\PSoC5/SPIM.c **** *
 430:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 431:Generated_Source\PSoC5/SPIM.c **** *  Clear Rx status register of the component.
 432:Generated_Source\PSoC5/SPIM.c **** *
 433:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 434:Generated_Source\PSoC5/SPIM.c **** *  No.
 435:Generated_Source\PSoC5/SPIM.c **** *
 436:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 437:Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_ReadRxStatus(void) 
 438:Generated_Source\PSoC5/SPIM.c **** {
 581              		.loc 1 438 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 8
 584              		@ frame_needed = 1, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 586 0000 80B4     		push	{r7}
 587              		.cfi_def_cfa_offset 4
 588              		.cfi_offset 7, -4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 19


 589 0002 83B0     		sub	sp, sp, #12
 590              		.cfi_def_cfa_offset 16
 591 0004 00AF     		add	r7, sp, #0
 592              		.cfi_def_cfa_register 7
 439:Generated_Source\PSoC5/SPIM.c ****     uint8 tmpStatus;
 440:Generated_Source\PSoC5/SPIM.c **** 
 441:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 442:Generated_Source\PSoC5/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 443:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableRxInt();
 444:Generated_Source\PSoC5/SPIM.c **** 
 445:Generated_Source\PSoC5/SPIM.c ****         tmpStatus = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
 446:Generated_Source\PSoC5/SPIM.c ****         SPIM_swStatusRx = 0u;
 447:Generated_Source\PSoC5/SPIM.c **** 
 448:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableRxInt();
 449:Generated_Source\PSoC5/SPIM.c **** 
 450:Generated_Source\PSoC5/SPIM.c ****     #else
 451:Generated_Source\PSoC5/SPIM.c **** 
 452:Generated_Source\PSoC5/SPIM.c ****         tmpStatus = SPIM_RX_STATUS_REG;
 593              		.loc 1 452 0
 594 0006 044B     		ldr	r3, .L34
 595 0008 1B78     		ldrb	r3, [r3]
 596 000a FB71     		strb	r3, [r7, #7]
 453:Generated_Source\PSoC5/SPIM.c **** 
 454:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 455:Generated_Source\PSoC5/SPIM.c **** 
 456:Generated_Source\PSoC5/SPIM.c ****     return(tmpStatus);
 597              		.loc 1 456 0
 598 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 457:Generated_Source\PSoC5/SPIM.c **** }
 599              		.loc 1 457 0
 600 000e 1846     		mov	r0, r3
 601 0010 0C37     		adds	r7, r7, #12
 602              		.cfi_def_cfa_offset 4
 603 0012 BD46     		mov	sp, r7
 604              		.cfi_def_cfa_register 13
 605              		@ sp needed
 606 0014 80BC     		pop	{r7}
 607              		.cfi_restore 7
 608              		.cfi_def_cfa_offset 0
 609 0016 7047     		bx	lr
 610              	.L35:
 611              		.align	2
 612              	.L34:
 613 0018 68640040 		.word	1073767528
 614              		.cfi_endproc
 615              	.LFE11:
 616              		.size	SPIM_ReadRxStatus, .-SPIM_ReadRxStatus
 617              		.section	.text.SPIM_WriteTxData,"ax",%progbits
 618              		.align	2
 619              		.global	SPIM_WriteTxData
 620              		.thumb
 621              		.thumb_func
 622              		.type	SPIM_WriteTxData, %function
 623              	SPIM_WriteTxData:
 624              	.LFB12:
 458:Generated_Source\PSoC5/SPIM.c **** 
 459:Generated_Source\PSoC5/SPIM.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 20


 460:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 461:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_WriteTxData
 462:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 463:Generated_Source\PSoC5/SPIM.c **** *
 464:Generated_Source\PSoC5/SPIM.c **** * Summary:
 465:Generated_Source\PSoC5/SPIM.c **** *  Write a byte of data to be sent across the SPI.
 466:Generated_Source\PSoC5/SPIM.c **** *
 467:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 468:Generated_Source\PSoC5/SPIM.c **** *  txDataByte: The data value to send across the SPI.
 469:Generated_Source\PSoC5/SPIM.c **** *
 470:Generated_Source\PSoC5/SPIM.c **** * Return:
 471:Generated_Source\PSoC5/SPIM.c **** *  None.
 472:Generated_Source\PSoC5/SPIM.c **** *
 473:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 474:Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 475:Generated_Source\PSoC5/SPIM.c **** *  have been written down in the TX software buffer, modified every function
 476:Generated_Source\PSoC5/SPIM.c **** *  call if TX Software Buffer is used.
 477:Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 478:Generated_Source\PSoC5/SPIM.c **** *  have been read from the TX software buffer.
 479:Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBuffer[SPIM_TX_BUFFER_SIZE] - used to store
 480:Generated_Source\PSoC5/SPIM.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 481:Generated_Source\PSoC5/SPIM.c **** *
 482:Generated_Source\PSoC5/SPIM.c **** * Theory:
 483:Generated_Source\PSoC5/SPIM.c **** *  Allows the user to transmit any byte of data in a single transfer.
 484:Generated_Source\PSoC5/SPIM.c **** *
 485:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 486:Generated_Source\PSoC5/SPIM.c **** *  If this function is called again before the previous byte is finished then
 487:Generated_Source\PSoC5/SPIM.c **** *  the next byte will be appended to the transfer with no time between
 488:Generated_Source\PSoC5/SPIM.c **** *  the byte transfers. Clear Tx status register of the component.
 489:Generated_Source\PSoC5/SPIM.c **** *
 490:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 491:Generated_Source\PSoC5/SPIM.c **** *  No.
 492:Generated_Source\PSoC5/SPIM.c **** *
 493:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 494:Generated_Source\PSoC5/SPIM.c **** void SPIM_WriteTxData(uint8 txData) 
 495:Generated_Source\PSoC5/SPIM.c **** {
 625              		.loc 1 495 0
 626              		.cfi_startproc
 627              		@ args = 0, pretend = 0, frame = 16
 628              		@ frame_needed = 1, uses_anonymous_args = 0
 629 0000 80B5     		push	{r7, lr}
 630              		.cfi_def_cfa_offset 8
 631              		.cfi_offset 7, -8
 632              		.cfi_offset 14, -4
 633 0002 84B0     		sub	sp, sp, #16
 634              		.cfi_def_cfa_offset 24
 635 0004 00AF     		add	r7, sp, #0
 636              		.cfi_def_cfa_register 7
 637 0006 0346     		mov	r3, r0
 638 0008 FB71     		strb	r3, [r7, #7]
 639              	.L39:
 496:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 497:Generated_Source\PSoC5/SPIM.c **** 
 498:Generated_Source\PSoC5/SPIM.c ****         uint8 tempStatus;
 499:Generated_Source\PSoC5/SPIM.c ****         uint8 tmpTxBufferRead;
 500:Generated_Source\PSoC5/SPIM.c **** 
 501:Generated_Source\PSoC5/SPIM.c ****         /* Block if TX buffer is FULL: don't overwrite */
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 21


 502:Generated_Source\PSoC5/SPIM.c ****         do
 503:Generated_Source\PSoC5/SPIM.c ****         {
 504:Generated_Source\PSoC5/SPIM.c ****             tmpTxBufferRead = SPIM_txBufferRead;
 640              		.loc 1 504 0
 641 000a 394B     		ldr	r3, .L45
 642 000c 1B78     		ldrb	r3, [r3]
 643 000e FB73     		strb	r3, [r7, #15]
 505:Generated_Source\PSoC5/SPIM.c ****             if(0u == tmpTxBufferRead)
 644              		.loc 1 505 0
 645 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 646 0012 002B     		cmp	r3, #0
 647 0014 02D1     		bne	.L37
 506:Generated_Source\PSoC5/SPIM.c ****             {
 507:Generated_Source\PSoC5/SPIM.c ****                 tmpTxBufferRead = (SPIM_TX_BUFFER_SIZE - 1u);
 648              		.loc 1 507 0
 649 0016 0923     		movs	r3, #9
 650 0018 FB73     		strb	r3, [r7, #15]
 651 001a 02E0     		b	.L38
 652              	.L37:
 508:Generated_Source\PSoC5/SPIM.c ****             }
 509:Generated_Source\PSoC5/SPIM.c ****             else
 510:Generated_Source\PSoC5/SPIM.c ****             {
 511:Generated_Source\PSoC5/SPIM.c ****                 tmpTxBufferRead--;
 653              		.loc 1 511 0
 654 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 655 001e 013B     		subs	r3, r3, #1
 656 0020 FB73     		strb	r3, [r7, #15]
 657              	.L38:
 512:Generated_Source\PSoC5/SPIM.c ****             }
 513:Generated_Source\PSoC5/SPIM.c **** 
 514:Generated_Source\PSoC5/SPIM.c ****         }while(tmpTxBufferRead == SPIM_txBufferWrite);
 658              		.loc 1 514 0
 659 0022 344B     		ldr	r3, .L45+4
 660 0024 1B78     		ldrb	r3, [r3]
 661 0026 DBB2     		uxtb	r3, r3
 662 0028 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 663 002a 9A42     		cmp	r2, r3
 664 002c EDD0     		beq	.L39
 515:Generated_Source\PSoC5/SPIM.c **** 
 516:Generated_Source\PSoC5/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 517:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableTxInt();
 665              		.loc 1 517 0
 666 002e FFF7FEFF 		bl	SPIM_DisableTxInt
 518:Generated_Source\PSoC5/SPIM.c **** 
 519:Generated_Source\PSoC5/SPIM.c ****         tempStatus = SPIM_GET_STATUS_TX(SPIM_swStatusTx);
 667              		.loc 1 519 0
 668 0032 314B     		ldr	r3, .L45+8
 669 0034 1B78     		ldrb	r3, [r3]
 670 0036 DAB2     		uxtb	r2, r3
 671 0038 304B     		ldr	r3, .L45+12
 672 003a 1B78     		ldrb	r3, [r3]
 673 003c DBB2     		uxtb	r3, r3
 674 003e 03F00903 		and	r3, r3, #9
 675 0042 DBB2     		uxtb	r3, r3
 676 0044 1343     		orrs	r3, r3, r2
 677 0046 BB73     		strb	r3, [r7, #14]
 520:Generated_Source\PSoC5/SPIM.c ****         SPIM_swStatusTx = tempStatus;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 22


 678              		.loc 1 520 0
 679 0048 2C4A     		ldr	r2, .L45+12
 680 004a BB7B     		ldrb	r3, [r7, #14]
 681 004c 1370     		strb	r3, [r2]
 521:Generated_Source\PSoC5/SPIM.c **** 
 522:Generated_Source\PSoC5/SPIM.c **** 
 523:Generated_Source\PSoC5/SPIM.c ****         if((SPIM_txBufferRead == SPIM_txBufferWrite) &&
 682              		.loc 1 523 0
 683 004e 284B     		ldr	r3, .L45
 684 0050 1B78     		ldrb	r3, [r3]
 685 0052 DAB2     		uxtb	r2, r3
 686 0054 274B     		ldr	r3, .L45+4
 687 0056 1B78     		ldrb	r3, [r3]
 688 0058 DBB2     		uxtb	r3, r3
 689 005a 9A42     		cmp	r2, r3
 690 005c 0AD1     		bne	.L40
 524:Generated_Source\PSoC5/SPIM.c ****            (0u != (SPIM_swStatusTx & SPIM_STS_TX_FIFO_NOT_FULL)))
 691              		.loc 1 524 0 discriminator 1
 692 005e 274B     		ldr	r3, .L45+12
 693 0060 1B78     		ldrb	r3, [r3]
 694 0062 DBB2     		uxtb	r3, r3
 695 0064 03F00403 		and	r3, r3, #4
 523:Generated_Source\PSoC5/SPIM.c ****            (0u != (SPIM_swStatusTx & SPIM_STS_TX_FIFO_NOT_FULL)))
 696              		.loc 1 523 0 discriminator 1
 697 0068 002B     		cmp	r3, #0
 698 006a 03D0     		beq	.L40
 525:Generated_Source\PSoC5/SPIM.c ****         {
 526:Generated_Source\PSoC5/SPIM.c ****             /* Put data element into the TX FIFO */
 527:Generated_Source\PSoC5/SPIM.c ****             CY_SET_REG8(SPIM_TXDATA_PTR, txData);
 699              		.loc 1 527 0
 700 006c 244A     		ldr	r2, .L45+16
 701 006e FB79     		ldrb	r3, [r7, #7]
 702 0070 1370     		strb	r3, [r2]
 703 0072 37E0     		b	.L41
 704              	.L40:
 528:Generated_Source\PSoC5/SPIM.c ****         }
 529:Generated_Source\PSoC5/SPIM.c ****         else
 530:Generated_Source\PSoC5/SPIM.c ****         {
 531:Generated_Source\PSoC5/SPIM.c ****             /* Add to the TX software buffer */
 532:Generated_Source\PSoC5/SPIM.c ****             SPIM_txBufferWrite++;
 705              		.loc 1 532 0
 706 0074 1F4B     		ldr	r3, .L45+4
 707 0076 1B78     		ldrb	r3, [r3]
 708 0078 DBB2     		uxtb	r3, r3
 709 007a 0133     		adds	r3, r3, #1
 710 007c DAB2     		uxtb	r2, r3
 711 007e 1D4B     		ldr	r3, .L45+4
 712 0080 1A70     		strb	r2, [r3]
 533:Generated_Source\PSoC5/SPIM.c ****             if(SPIM_txBufferWrite >= SPIM_TX_BUFFER_SIZE)
 713              		.loc 1 533 0
 714 0082 1C4B     		ldr	r3, .L45+4
 715 0084 1B78     		ldrb	r3, [r3]
 716 0086 DBB2     		uxtb	r3, r3
 717 0088 092B     		cmp	r3, #9
 718 008a 02D9     		bls	.L42
 534:Generated_Source\PSoC5/SPIM.c ****             {
 535:Generated_Source\PSoC5/SPIM.c ****                 SPIM_txBufferWrite = 0u;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 23


 719              		.loc 1 535 0
 720 008c 194B     		ldr	r3, .L45+4
 721 008e 0022     		movs	r2, #0
 722 0090 1A70     		strb	r2, [r3]
 723              	.L42:
 536:Generated_Source\PSoC5/SPIM.c ****             }
 537:Generated_Source\PSoC5/SPIM.c **** 
 538:Generated_Source\PSoC5/SPIM.c ****             if(SPIM_txBufferWrite == SPIM_txBufferRead)
 724              		.loc 1 538 0
 725 0092 184B     		ldr	r3, .L45+4
 726 0094 1B78     		ldrb	r3, [r3]
 727 0096 DAB2     		uxtb	r2, r3
 728 0098 154B     		ldr	r3, .L45
 729 009a 1B78     		ldrb	r3, [r3]
 730 009c DBB2     		uxtb	r3, r3
 731 009e 9A42     		cmp	r2, r3
 732 00a0 11D1     		bne	.L43
 539:Generated_Source\PSoC5/SPIM.c ****             {
 540:Generated_Source\PSoC5/SPIM.c ****                 SPIM_txBufferRead++;
 733              		.loc 1 540 0
 734 00a2 134B     		ldr	r3, .L45
 735 00a4 1B78     		ldrb	r3, [r3]
 736 00a6 DBB2     		uxtb	r3, r3
 737 00a8 0133     		adds	r3, r3, #1
 738 00aa DAB2     		uxtb	r2, r3
 739 00ac 104B     		ldr	r3, .L45
 740 00ae 1A70     		strb	r2, [r3]
 541:Generated_Source\PSoC5/SPIM.c ****                 if(SPIM_txBufferRead >= SPIM_TX_BUFFER_SIZE)
 741              		.loc 1 541 0
 742 00b0 0F4B     		ldr	r3, .L45
 743 00b2 1B78     		ldrb	r3, [r3]
 744 00b4 DBB2     		uxtb	r3, r3
 745 00b6 092B     		cmp	r3, #9
 746 00b8 02D9     		bls	.L44
 542:Generated_Source\PSoC5/SPIM.c ****                 {
 543:Generated_Source\PSoC5/SPIM.c ****                     SPIM_txBufferRead = 0u;
 747              		.loc 1 543 0
 748 00ba 0D4B     		ldr	r3, .L45
 749 00bc 0022     		movs	r2, #0
 750 00be 1A70     		strb	r2, [r3]
 751              	.L44:
 544:Generated_Source\PSoC5/SPIM.c ****                 }
 545:Generated_Source\PSoC5/SPIM.c ****                 SPIM_txBufferFull = 1u;
 752              		.loc 1 545 0
 753 00c0 104B     		ldr	r3, .L45+20
 754 00c2 0122     		movs	r2, #1
 755 00c4 1A70     		strb	r2, [r3]
 756              	.L43:
 546:Generated_Source\PSoC5/SPIM.c ****             }
 547:Generated_Source\PSoC5/SPIM.c **** 
 548:Generated_Source\PSoC5/SPIM.c ****             SPIM_txBuffer[SPIM_txBufferWrite] = txData;
 757              		.loc 1 548 0
 758 00c6 0B4B     		ldr	r3, .L45+4
 759 00c8 1B78     		ldrb	r3, [r3]
 760 00ca DBB2     		uxtb	r3, r3
 761 00cc 1946     		mov	r1, r3
 762 00ce 0E4A     		ldr	r2, .L45+24
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 24


 763 00d0 FB79     		ldrb	r3, [r7, #7]
 764 00d2 5354     		strb	r3, [r2, r1]
 549:Generated_Source\PSoC5/SPIM.c **** 
 550:Generated_Source\PSoC5/SPIM.c ****             SPIM_TX_STATUS_MASK_REG |= SPIM_STS_TX_FIFO_NOT_FULL;
 765              		.loc 1 550 0
 766 00d4 0D4A     		ldr	r2, .L45+28
 767 00d6 0D4B     		ldr	r3, .L45+28
 768 00d8 1B78     		ldrb	r3, [r3]
 769 00da DBB2     		uxtb	r3, r3
 770 00dc 43F00403 		orr	r3, r3, #4
 771 00e0 DBB2     		uxtb	r3, r3
 772 00e2 1370     		strb	r3, [r2]
 773              	.L41:
 551:Generated_Source\PSoC5/SPIM.c ****         }
 552:Generated_Source\PSoC5/SPIM.c **** 
 553:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableTxInt();
 774              		.loc 1 553 0
 775 00e4 FFF7FEFF 		bl	SPIM_EnableTxInt
 554:Generated_Source\PSoC5/SPIM.c **** 
 555:Generated_Source\PSoC5/SPIM.c ****     #else
 556:Generated_Source\PSoC5/SPIM.c ****         /* Wait until TX FIFO has a place */
 557:Generated_Source\PSoC5/SPIM.c ****         while(0u == (SPIM_TX_STATUS_REG & SPIM_STS_TX_FIFO_NOT_FULL))
 558:Generated_Source\PSoC5/SPIM.c ****         {
 559:Generated_Source\PSoC5/SPIM.c ****         }
 560:Generated_Source\PSoC5/SPIM.c **** 
 561:Generated_Source\PSoC5/SPIM.c ****         /* Put data element into the TX FIFO */
 562:Generated_Source\PSoC5/SPIM.c ****         CY_SET_REG8(SPIM_TXDATA_PTR, txData);
 563:Generated_Source\PSoC5/SPIM.c **** 
 564:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 565:Generated_Source\PSoC5/SPIM.c **** }
 776              		.loc 1 565 0
 777 00e8 00BF     		nop
 778 00ea 1037     		adds	r7, r7, #16
 779              		.cfi_def_cfa_offset 8
 780 00ec BD46     		mov	sp, r7
 781              		.cfi_def_cfa_register 13
 782              		@ sp needed
 783 00ee 80BD     		pop	{r7, pc}
 784              	.L46:
 785              		.align	2
 786              	.L45:
 787 00f0 00000000 		.word	SPIM_txBufferRead
 788 00f4 00000000 		.word	SPIM_txBufferWrite
 789 00f8 64650040 		.word	1073767780
 790 00fc 00000000 		.word	SPIM_swStatusTx
 791 0100 4B650040 		.word	1073767755
 792 0104 00000000 		.word	SPIM_txBufferFull
 793 0108 00000000 		.word	SPIM_txBuffer
 794 010c 84650040 		.word	1073767812
 795              		.cfi_endproc
 796              	.LFE12:
 797              		.size	SPIM_WriteTxData, .-SPIM_WriteTxData
 798              		.section	.text.SPIM_ReadRxData,"ax",%progbits
 799              		.align	2
 800              		.global	SPIM_ReadRxData
 801              		.thumb
 802              		.thumb_func
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 25


 803              		.type	SPIM_ReadRxData, %function
 804              	SPIM_ReadRxData:
 805              	.LFB13:
 566:Generated_Source\PSoC5/SPIM.c **** 
 567:Generated_Source\PSoC5/SPIM.c **** 
 568:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 569:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ReadRxData
 570:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 571:Generated_Source\PSoC5/SPIM.c **** *
 572:Generated_Source\PSoC5/SPIM.c **** * Summary:
 573:Generated_Source\PSoC5/SPIM.c **** *  Read the next byte of data received across the SPI.
 574:Generated_Source\PSoC5/SPIM.c **** *
 575:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 576:Generated_Source\PSoC5/SPIM.c **** *  None.
 577:Generated_Source\PSoC5/SPIM.c **** *
 578:Generated_Source\PSoC5/SPIM.c **** * Return:
 579:Generated_Source\PSoC5/SPIM.c **** *  The next byte of data read from the FIFO.
 580:Generated_Source\PSoC5/SPIM.c **** *
 581:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 582:Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 583:Generated_Source\PSoC5/SPIM.c **** *  have been written down in the RX software buffer.
 584:Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 585:Generated_Source\PSoC5/SPIM.c **** *  have been read from the RX software buffer, modified every function
 586:Generated_Source\PSoC5/SPIM.c **** *  call if RX Software Buffer is used.
 587:Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBuffer[SPIM_RX_BUFFER_SIZE] - used to store
 588:Generated_Source\PSoC5/SPIM.c **** *  received data.
 589:Generated_Source\PSoC5/SPIM.c **** *
 590:Generated_Source\PSoC5/SPIM.c **** * Theory:
 591:Generated_Source\PSoC5/SPIM.c **** *  Allows the user to read a byte of data received.
 592:Generated_Source\PSoC5/SPIM.c **** *
 593:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 594:Generated_Source\PSoC5/SPIM.c **** *  Will return invalid data if the FIFO is empty. The user should Call
 595:Generated_Source\PSoC5/SPIM.c **** *  GetRxBufferSize() and if it returns a non-zero value then it is safe to call
 596:Generated_Source\PSoC5/SPIM.c **** *  ReadByte() function.
 597:Generated_Source\PSoC5/SPIM.c **** *
 598:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 599:Generated_Source\PSoC5/SPIM.c **** *  No.
 600:Generated_Source\PSoC5/SPIM.c **** *
 601:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 602:Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_ReadRxData(void) 
 603:Generated_Source\PSoC5/SPIM.c **** {
 806              		.loc 1 603 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 8
 809              		@ frame_needed = 1, uses_anonymous_args = 0
 810              		@ link register save eliminated.
 811 0000 80B4     		push	{r7}
 812              		.cfi_def_cfa_offset 4
 813              		.cfi_offset 7, -4
 814 0002 83B0     		sub	sp, sp, #12
 815              		.cfi_def_cfa_offset 16
 816 0004 00AF     		add	r7, sp, #0
 817              		.cfi_def_cfa_register 7
 604:Generated_Source\PSoC5/SPIM.c ****     uint8 rxData;
 605:Generated_Source\PSoC5/SPIM.c **** 
 606:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 607:Generated_Source\PSoC5/SPIM.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 26


 608:Generated_Source\PSoC5/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 609:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableRxInt();
 610:Generated_Source\PSoC5/SPIM.c **** 
 611:Generated_Source\PSoC5/SPIM.c ****         if(SPIM_rxBufferRead != SPIM_rxBufferWrite)
 612:Generated_Source\PSoC5/SPIM.c ****         {
 613:Generated_Source\PSoC5/SPIM.c ****             if(0u == SPIM_rxBufferFull)
 614:Generated_Source\PSoC5/SPIM.c ****             {
 615:Generated_Source\PSoC5/SPIM.c ****                 SPIM_rxBufferRead++;
 616:Generated_Source\PSoC5/SPIM.c ****                 if(SPIM_rxBufferRead >= SPIM_RX_BUFFER_SIZE)
 617:Generated_Source\PSoC5/SPIM.c ****                 {
 618:Generated_Source\PSoC5/SPIM.c ****                     SPIM_rxBufferRead = 0u;
 619:Generated_Source\PSoC5/SPIM.c ****                 }
 620:Generated_Source\PSoC5/SPIM.c ****             }
 621:Generated_Source\PSoC5/SPIM.c ****             else
 622:Generated_Source\PSoC5/SPIM.c ****             {
 623:Generated_Source\PSoC5/SPIM.c ****                 SPIM_rxBufferFull = 0u;
 624:Generated_Source\PSoC5/SPIM.c ****             }
 625:Generated_Source\PSoC5/SPIM.c ****         }
 626:Generated_Source\PSoC5/SPIM.c **** 
 627:Generated_Source\PSoC5/SPIM.c ****         rxData = SPIM_rxBuffer[SPIM_rxBufferRead];
 628:Generated_Source\PSoC5/SPIM.c **** 
 629:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableRxInt();
 630:Generated_Source\PSoC5/SPIM.c **** 
 631:Generated_Source\PSoC5/SPIM.c ****     #else
 632:Generated_Source\PSoC5/SPIM.c **** 
 633:Generated_Source\PSoC5/SPIM.c ****         rxData = CY_GET_REG8(SPIM_RXDATA_PTR);
 818              		.loc 1 633 0
 819 0006 044B     		ldr	r3, .L49
 820 0008 1B78     		ldrb	r3, [r3]
 821 000a FB71     		strb	r3, [r7, #7]
 634:Generated_Source\PSoC5/SPIM.c **** 
 635:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 636:Generated_Source\PSoC5/SPIM.c **** 
 637:Generated_Source\PSoC5/SPIM.c ****     return(rxData);
 822              		.loc 1 637 0
 823 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 638:Generated_Source\PSoC5/SPIM.c **** }
 824              		.loc 1 638 0
 825 000e 1846     		mov	r0, r3
 826 0010 0C37     		adds	r7, r7, #12
 827              		.cfi_def_cfa_offset 4
 828 0012 BD46     		mov	sp, r7
 829              		.cfi_def_cfa_register 13
 830              		@ sp needed
 831 0014 80BC     		pop	{r7}
 832              		.cfi_restore 7
 833              		.cfi_def_cfa_offset 0
 834 0016 7047     		bx	lr
 835              	.L50:
 836              		.align	2
 837              	.L49:
 838 0018 5B650040 		.word	1073767771
 839              		.cfi_endproc
 840              	.LFE13:
 841              		.size	SPIM_ReadRxData, .-SPIM_ReadRxData
 842              		.section	.text.SPIM_GetRxBufferSize,"ax",%progbits
 843              		.align	2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 27


 844              		.global	SPIM_GetRxBufferSize
 845              		.thumb
 846              		.thumb_func
 847              		.type	SPIM_GetRxBufferSize, %function
 848              	SPIM_GetRxBufferSize:
 849              	.LFB14:
 639:Generated_Source\PSoC5/SPIM.c **** 
 640:Generated_Source\PSoC5/SPIM.c **** 
 641:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 642:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_GetRxBufferSize
 643:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 644:Generated_Source\PSoC5/SPIM.c **** *
 645:Generated_Source\PSoC5/SPIM.c **** * Summary:
 646:Generated_Source\PSoC5/SPIM.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 647:Generated_Source\PSoC5/SPIM.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 648:Generated_Source\PSoC5/SPIM.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 649:Generated_Source\PSoC5/SPIM.c **** *
 650:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 651:Generated_Source\PSoC5/SPIM.c **** *  None.
 652:Generated_Source\PSoC5/SPIM.c **** *
 653:Generated_Source\PSoC5/SPIM.c **** * Return:
 654:Generated_Source\PSoC5/SPIM.c **** *  Integer count of the number of bytes/words in the RX buffer.
 655:Generated_Source\PSoC5/SPIM.c **** *
 656:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 657:Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 658:Generated_Source\PSoC5/SPIM.c **** *  have been written down in the RX software buffer.
 659:Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 660:Generated_Source\PSoC5/SPIM.c **** *  have been read from the RX software buffer.
 661:Generated_Source\PSoC5/SPIM.c **** *
 662:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 663:Generated_Source\PSoC5/SPIM.c **** *  Clear status register of the component.
 664:Generated_Source\PSoC5/SPIM.c **** *
 665:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 666:Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_GetRxBufferSize(void) 
 667:Generated_Source\PSoC5/SPIM.c **** {
 850              		.loc 1 667 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 8
 853              		@ frame_needed = 1, uses_anonymous_args = 0
 854              		@ link register save eliminated.
 855 0000 80B4     		push	{r7}
 856              		.cfi_def_cfa_offset 4
 857              		.cfi_offset 7, -4
 858 0002 83B0     		sub	sp, sp, #12
 859              		.cfi_def_cfa_offset 16
 860 0004 00AF     		add	r7, sp, #0
 861              		.cfi_def_cfa_register 7
 668:Generated_Source\PSoC5/SPIM.c ****     uint8 size;
 669:Generated_Source\PSoC5/SPIM.c **** 
 670:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 671:Generated_Source\PSoC5/SPIM.c **** 
 672:Generated_Source\PSoC5/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 673:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableRxInt();
 674:Generated_Source\PSoC5/SPIM.c **** 
 675:Generated_Source\PSoC5/SPIM.c ****         if(SPIM_rxBufferRead == SPIM_rxBufferWrite)
 676:Generated_Source\PSoC5/SPIM.c ****         {
 677:Generated_Source\PSoC5/SPIM.c ****             size = 0u;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 28


 678:Generated_Source\PSoC5/SPIM.c ****         }
 679:Generated_Source\PSoC5/SPIM.c ****         else if(SPIM_rxBufferRead < SPIM_rxBufferWrite)
 680:Generated_Source\PSoC5/SPIM.c ****         {
 681:Generated_Source\PSoC5/SPIM.c ****             size = (SPIM_rxBufferWrite - SPIM_rxBufferRead);
 682:Generated_Source\PSoC5/SPIM.c ****         }
 683:Generated_Source\PSoC5/SPIM.c ****         else
 684:Generated_Source\PSoC5/SPIM.c ****         {
 685:Generated_Source\PSoC5/SPIM.c ****             size = (SPIM_RX_BUFFER_SIZE - SPIM_rxBufferRead) + SPIM_rxBufferWrite;
 686:Generated_Source\PSoC5/SPIM.c ****         }
 687:Generated_Source\PSoC5/SPIM.c **** 
 688:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableRxInt();
 689:Generated_Source\PSoC5/SPIM.c **** 
 690:Generated_Source\PSoC5/SPIM.c ****     #else
 691:Generated_Source\PSoC5/SPIM.c **** 
 692:Generated_Source\PSoC5/SPIM.c ****         /* We can only know if there is data in the RX FIFO */
 693:Generated_Source\PSoC5/SPIM.c ****         size = (0u != (SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY)) ? 1u : 0u;
 862              		.loc 1 693 0
 863 0006 084B     		ldr	r3, .L55
 864 0008 1B78     		ldrb	r3, [r3]
 865 000a DBB2     		uxtb	r3, r3
 866 000c 03F02003 		and	r3, r3, #32
 867 0010 002B     		cmp	r3, #0
 868 0012 01D0     		beq	.L52
 869              		.loc 1 693 0 is_stmt 0 discriminator 1
 870 0014 0123     		movs	r3, #1
 871 0016 00E0     		b	.L53
 872              	.L52:
 873              		.loc 1 693 0 discriminator 2
 874 0018 0023     		movs	r3, #0
 875              	.L53:
 876              		.loc 1 693 0 discriminator 4
 877 001a FB71     		strb	r3, [r7, #7]
 694:Generated_Source\PSoC5/SPIM.c **** 
 695:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 696:Generated_Source\PSoC5/SPIM.c **** 
 697:Generated_Source\PSoC5/SPIM.c ****     return(size);
 878              		.loc 1 697 0 is_stmt 1 discriminator 4
 879 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 698:Generated_Source\PSoC5/SPIM.c **** }
 880              		.loc 1 698 0 discriminator 4
 881 001e 1846     		mov	r0, r3
 882 0020 0C37     		adds	r7, r7, #12
 883              		.cfi_def_cfa_offset 4
 884 0022 BD46     		mov	sp, r7
 885              		.cfi_def_cfa_register 13
 886              		@ sp needed
 887 0024 80BC     		pop	{r7}
 888              		.cfi_restore 7
 889              		.cfi_def_cfa_offset 0
 890 0026 7047     		bx	lr
 891              	.L56:
 892              		.align	2
 893              	.L55:
 894 0028 68640040 		.word	1073767528
 895              		.cfi_endproc
 896              	.LFE14:
 897              		.size	SPIM_GetRxBufferSize, .-SPIM_GetRxBufferSize
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 29


 898              		.section	.text.SPIM_GetTxBufferSize,"ax",%progbits
 899              		.align	2
 900              		.global	SPIM_GetTxBufferSize
 901              		.thumb
 902              		.thumb_func
 903              		.type	SPIM_GetTxBufferSize, %function
 904              	SPIM_GetTxBufferSize:
 905              	.LFB15:
 699:Generated_Source\PSoC5/SPIM.c **** 
 700:Generated_Source\PSoC5/SPIM.c **** 
 701:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 702:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_GetTxBufferSize
 703:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 704:Generated_Source\PSoC5/SPIM.c **** *
 705:Generated_Source\PSoC5/SPIM.c **** * Summary:
 706:Generated_Source\PSoC5/SPIM.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 707:Generated_Source\PSoC5/SPIM.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 708:Generated_Source\PSoC5/SPIM.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 709:Generated_Source\PSoC5/SPIM.c **** *  Software Buffer.
 710:Generated_Source\PSoC5/SPIM.c **** *
 711:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 712:Generated_Source\PSoC5/SPIM.c **** *  None.
 713:Generated_Source\PSoC5/SPIM.c **** *
 714:Generated_Source\PSoC5/SPIM.c **** * Return:
 715:Generated_Source\PSoC5/SPIM.c **** *  Integer count of the number of bytes/words in the TX buffer.
 716:Generated_Source\PSoC5/SPIM.c **** *
 717:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 718:Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 719:Generated_Source\PSoC5/SPIM.c **** *  have been written down in the TX software buffer.
 720:Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 721:Generated_Source\PSoC5/SPIM.c **** *  have been read from the TX software buffer.
 722:Generated_Source\PSoC5/SPIM.c **** *
 723:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 724:Generated_Source\PSoC5/SPIM.c **** *  Clear status register of the component.
 725:Generated_Source\PSoC5/SPIM.c **** *
 726:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 727:Generated_Source\PSoC5/SPIM.c **** uint8  SPIM_GetTxBufferSize(void) 
 728:Generated_Source\PSoC5/SPIM.c **** {
 906              		.loc 1 728 0
 907              		.cfi_startproc
 908              		@ args = 0, pretend = 0, frame = 8
 909              		@ frame_needed = 1, uses_anonymous_args = 0
 910 0000 80B5     		push	{r7, lr}
 911              		.cfi_def_cfa_offset 8
 912              		.cfi_offset 7, -8
 913              		.cfi_offset 14, -4
 914 0002 82B0     		sub	sp, sp, #8
 915              		.cfi_def_cfa_offset 16
 916 0004 00AF     		add	r7, sp, #0
 917              		.cfi_def_cfa_register 7
 729:Generated_Source\PSoC5/SPIM.c ****     uint8 size;
 730:Generated_Source\PSoC5/SPIM.c **** 
 731:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 732:Generated_Source\PSoC5/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 733:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableTxInt();
 918              		.loc 1 733 0
 919 0006 FFF7FEFF 		bl	SPIM_DisableTxInt
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 30


 734:Generated_Source\PSoC5/SPIM.c **** 
 735:Generated_Source\PSoC5/SPIM.c ****         if(SPIM_txBufferRead == SPIM_txBufferWrite)
 920              		.loc 1 735 0
 921 000a 164B     		ldr	r3, .L62
 922 000c 1B78     		ldrb	r3, [r3]
 923 000e DAB2     		uxtb	r2, r3
 924 0010 154B     		ldr	r3, .L62+4
 925 0012 1B78     		ldrb	r3, [r3]
 926 0014 DBB2     		uxtb	r3, r3
 927 0016 9A42     		cmp	r2, r3
 928 0018 02D1     		bne	.L58
 736:Generated_Source\PSoC5/SPIM.c ****         {
 737:Generated_Source\PSoC5/SPIM.c ****             size = 0u;
 929              		.loc 1 737 0
 930 001a 0023     		movs	r3, #0
 931 001c FB71     		strb	r3, [r7, #7]
 932 001e 1AE0     		b	.L59
 933              	.L58:
 738:Generated_Source\PSoC5/SPIM.c ****         }
 739:Generated_Source\PSoC5/SPIM.c ****         else if(SPIM_txBufferRead < SPIM_txBufferWrite)
 934              		.loc 1 739 0
 935 0020 104B     		ldr	r3, .L62
 936 0022 1B78     		ldrb	r3, [r3]
 937 0024 DAB2     		uxtb	r2, r3
 938 0026 104B     		ldr	r3, .L62+4
 939 0028 1B78     		ldrb	r3, [r3]
 940 002a DBB2     		uxtb	r3, r3
 941 002c 9A42     		cmp	r2, r3
 942 002e 08D2     		bcs	.L60
 740:Generated_Source\PSoC5/SPIM.c ****         {
 741:Generated_Source\PSoC5/SPIM.c ****             size = (SPIM_txBufferWrite - SPIM_txBufferRead);
 943              		.loc 1 741 0
 944 0030 0D4B     		ldr	r3, .L62+4
 945 0032 1B78     		ldrb	r3, [r3]
 946 0034 DAB2     		uxtb	r2, r3
 947 0036 0B4B     		ldr	r3, .L62
 948 0038 1B78     		ldrb	r3, [r3]
 949 003a DBB2     		uxtb	r3, r3
 950 003c D31A     		subs	r3, r2, r3
 951 003e FB71     		strb	r3, [r7, #7]
 952 0040 09E0     		b	.L59
 953              	.L60:
 742:Generated_Source\PSoC5/SPIM.c ****         }
 743:Generated_Source\PSoC5/SPIM.c ****         else
 744:Generated_Source\PSoC5/SPIM.c ****         {
 745:Generated_Source\PSoC5/SPIM.c ****             size = (SPIM_TX_BUFFER_SIZE - SPIM_txBufferRead) + SPIM_txBufferWrite;
 954              		.loc 1 745 0
 955 0042 094B     		ldr	r3, .L62+4
 956 0044 1B78     		ldrb	r3, [r3]
 957 0046 DAB2     		uxtb	r2, r3
 958 0048 064B     		ldr	r3, .L62
 959 004a 1B78     		ldrb	r3, [r3]
 960 004c DBB2     		uxtb	r3, r3
 961 004e D31A     		subs	r3, r2, r3
 962 0050 DBB2     		uxtb	r3, r3
 963 0052 0A33     		adds	r3, r3, #10
 964 0054 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 31


 965              	.L59:
 746:Generated_Source\PSoC5/SPIM.c ****         }
 747:Generated_Source\PSoC5/SPIM.c **** 
 748:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableTxInt();
 966              		.loc 1 748 0
 967 0056 FFF7FEFF 		bl	SPIM_EnableTxInt
 749:Generated_Source\PSoC5/SPIM.c **** 
 750:Generated_Source\PSoC5/SPIM.c ****     #else
 751:Generated_Source\PSoC5/SPIM.c **** 
 752:Generated_Source\PSoC5/SPIM.c ****         size = SPIM_TX_STATUS_REG;
 753:Generated_Source\PSoC5/SPIM.c **** 
 754:Generated_Source\PSoC5/SPIM.c ****         if(0u != (size & SPIM_STS_TX_FIFO_EMPTY))
 755:Generated_Source\PSoC5/SPIM.c ****         {
 756:Generated_Source\PSoC5/SPIM.c ****             size = 0u;
 757:Generated_Source\PSoC5/SPIM.c ****         }
 758:Generated_Source\PSoC5/SPIM.c ****         else if(0u != (size & SPIM_STS_TX_FIFO_NOT_FULL))
 759:Generated_Source\PSoC5/SPIM.c ****         {
 760:Generated_Source\PSoC5/SPIM.c ****             size = 1u;
 761:Generated_Source\PSoC5/SPIM.c ****         }
 762:Generated_Source\PSoC5/SPIM.c ****         else
 763:Generated_Source\PSoC5/SPIM.c ****         {
 764:Generated_Source\PSoC5/SPIM.c ****             size = SPIM_FIFO_SIZE;
 765:Generated_Source\PSoC5/SPIM.c ****         }
 766:Generated_Source\PSoC5/SPIM.c **** 
 767:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 768:Generated_Source\PSoC5/SPIM.c **** 
 769:Generated_Source\PSoC5/SPIM.c ****     return(size);
 968              		.loc 1 769 0
 969 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 770:Generated_Source\PSoC5/SPIM.c **** }
 970              		.loc 1 770 0
 971 005c 1846     		mov	r0, r3
 972 005e 0837     		adds	r7, r7, #8
 973              		.cfi_def_cfa_offset 8
 974 0060 BD46     		mov	sp, r7
 975              		.cfi_def_cfa_register 13
 976              		@ sp needed
 977 0062 80BD     		pop	{r7, pc}
 978              	.L63:
 979              		.align	2
 980              	.L62:
 981 0064 00000000 		.word	SPIM_txBufferRead
 982 0068 00000000 		.word	SPIM_txBufferWrite
 983              		.cfi_endproc
 984              	.LFE15:
 985              		.size	SPIM_GetTxBufferSize, .-SPIM_GetTxBufferSize
 986              		.section	.text.SPIM_ClearRxBuffer,"ax",%progbits
 987              		.align	2
 988              		.global	SPIM_ClearRxBuffer
 989              		.thumb
 990              		.thumb_func
 991              		.type	SPIM_ClearRxBuffer, %function
 992              	SPIM_ClearRxBuffer:
 993              	.LFB16:
 771:Generated_Source\PSoC5/SPIM.c **** 
 772:Generated_Source\PSoC5/SPIM.c **** 
 773:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 32


 774:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ClearRxBuffer
 775:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 776:Generated_Source\PSoC5/SPIM.c **** *
 777:Generated_Source\PSoC5/SPIM.c **** * Summary:
 778:Generated_Source\PSoC5/SPIM.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 779:Generated_Source\PSoC5/SPIM.c **** *
 780:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 781:Generated_Source\PSoC5/SPIM.c **** *  None.
 782:Generated_Source\PSoC5/SPIM.c **** *
 783:Generated_Source\PSoC5/SPIM.c **** * Return:
 784:Generated_Source\PSoC5/SPIM.c **** *  None.
 785:Generated_Source\PSoC5/SPIM.c **** *
 786:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 787:Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 788:Generated_Source\PSoC5/SPIM.c **** *  have been written down in the RX software buffer, modified every function
 789:Generated_Source\PSoC5/SPIM.c **** *  call - resets to zero.
 790:Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 791:Generated_Source\PSoC5/SPIM.c **** *  have been read from the RX software buffer, modified every function call -
 792:Generated_Source\PSoC5/SPIM.c **** *  resets to zero.
 793:Generated_Source\PSoC5/SPIM.c **** *
 794:Generated_Source\PSoC5/SPIM.c **** * Theory:
 795:Generated_Source\PSoC5/SPIM.c **** *  Setting the pointers to zero makes the system believe there is no data to
 796:Generated_Source\PSoC5/SPIM.c **** *  read and writing will resume at address 0 overwriting any data that may have
 797:Generated_Source\PSoC5/SPIM.c **** *  remained in the RAM.
 798:Generated_Source\PSoC5/SPIM.c **** *
 799:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 800:Generated_Source\PSoC5/SPIM.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 801:Generated_Source\PSoC5/SPIM.c **** *
 802:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 803:Generated_Source\PSoC5/SPIM.c **** *  No.
 804:Generated_Source\PSoC5/SPIM.c **** *
 805:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 806:Generated_Source\PSoC5/SPIM.c **** void SPIM_ClearRxBuffer(void) 
 807:Generated_Source\PSoC5/SPIM.c **** {
 994              		.loc 1 807 0
 995              		.cfi_startproc
 996              		@ args = 0, pretend = 0, frame = 0
 997              		@ frame_needed = 1, uses_anonymous_args = 0
 998              		@ link register save eliminated.
 999 0000 80B4     		push	{r7}
 1000              		.cfi_def_cfa_offset 4
 1001              		.cfi_offset 7, -4
 1002 0002 00AF     		add	r7, sp, #0
 1003              		.cfi_def_cfa_register 7
 808:Generated_Source\PSoC5/SPIM.c ****     /* Clear Hardware RX FIFO */
 809:Generated_Source\PSoC5/SPIM.c ****     while(0u !=(SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY))
 1004              		.loc 1 809 0
 1005 0004 01E0     		b	.L65
 1006              	.L66:
 810:Generated_Source\PSoC5/SPIM.c ****     {
 811:Generated_Source\PSoC5/SPIM.c ****         (void) CY_GET_REG8(SPIM_RXDATA_PTR);
 1007              		.loc 1 811 0
 1008 0006 064B     		ldr	r3, .L67
 1009 0008 1B78     		ldrb	r3, [r3]
 1010              	.L65:
 809:Generated_Source\PSoC5/SPIM.c ****     {
 1011              		.loc 1 809 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 33


 1012 000a 064B     		ldr	r3, .L67+4
 1013 000c 1B78     		ldrb	r3, [r3]
 1014 000e DBB2     		uxtb	r3, r3
 1015 0010 03F02003 		and	r3, r3, #32
 1016 0014 002B     		cmp	r3, #0
 1017 0016 F6D1     		bne	.L66
 812:Generated_Source\PSoC5/SPIM.c ****     }
 813:Generated_Source\PSoC5/SPIM.c **** 
 814:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 815:Generated_Source\PSoC5/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 816:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableRxInt();
 817:Generated_Source\PSoC5/SPIM.c **** 
 818:Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferFull  = 0u;
 819:Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferRead  = 0u;
 820:Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferWrite = 0u;
 821:Generated_Source\PSoC5/SPIM.c **** 
 822:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableRxInt();
 823:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 824:Generated_Source\PSoC5/SPIM.c **** }
 1018              		.loc 1 824 0
 1019 0018 00BF     		nop
 1020 001a BD46     		mov	sp, r7
 1021              		.cfi_def_cfa_register 13
 1022              		@ sp needed
 1023 001c 80BC     		pop	{r7}
 1024              		.cfi_restore 7
 1025              		.cfi_def_cfa_offset 0
 1026 001e 7047     		bx	lr
 1027              	.L68:
 1028              		.align	2
 1029              	.L67:
 1030 0020 5B650040 		.word	1073767771
 1031 0024 68640040 		.word	1073767528
 1032              		.cfi_endproc
 1033              	.LFE16:
 1034              		.size	SPIM_ClearRxBuffer, .-SPIM_ClearRxBuffer
 1035              		.section	.text.SPIM_ClearTxBuffer,"ax",%progbits
 1036              		.align	2
 1037              		.global	SPIM_ClearTxBuffer
 1038              		.thumb
 1039              		.thumb_func
 1040              		.type	SPIM_ClearTxBuffer, %function
 1041              	SPIM_ClearTxBuffer:
 1042              	.LFB17:
 825:Generated_Source\PSoC5/SPIM.c **** 
 826:Generated_Source\PSoC5/SPIM.c **** 
 827:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 828:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ClearTxBuffer
 829:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 830:Generated_Source\PSoC5/SPIM.c **** *
 831:Generated_Source\PSoC5/SPIM.c **** * Summary:
 832:Generated_Source\PSoC5/SPIM.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 833:Generated_Source\PSoC5/SPIM.c **** *
 834:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 835:Generated_Source\PSoC5/SPIM.c **** *  None.
 836:Generated_Source\PSoC5/SPIM.c **** *
 837:Generated_Source\PSoC5/SPIM.c **** * Return:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 34


 838:Generated_Source\PSoC5/SPIM.c **** *  None.
 839:Generated_Source\PSoC5/SPIM.c **** *
 840:Generated_Source\PSoC5/SPIM.c **** * Global variables:
 841:Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 842:Generated_Source\PSoC5/SPIM.c **** *  have been written down in the TX software buffer, modified every function
 843:Generated_Source\PSoC5/SPIM.c **** *  call - resets to zero.
 844:Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 845:Generated_Source\PSoC5/SPIM.c **** *  have been read from the TX software buffer, modified every function call -
 846:Generated_Source\PSoC5/SPIM.c **** *  resets to zero.
 847:Generated_Source\PSoC5/SPIM.c **** *
 848:Generated_Source\PSoC5/SPIM.c **** * Theory:
 849:Generated_Source\PSoC5/SPIM.c **** *  Setting the pointers to zero makes the system believe there is no data to
 850:Generated_Source\PSoC5/SPIM.c **** *  read and writing will resume at address 0 overwriting any data that may have
 851:Generated_Source\PSoC5/SPIM.c **** *  remained in the RAM.
 852:Generated_Source\PSoC5/SPIM.c **** *
 853:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 854:Generated_Source\PSoC5/SPIM.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 855:Generated_Source\PSoC5/SPIM.c **** *  overwritten.
 856:Generated_Source\PSoC5/SPIM.c **** *
 857:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 858:Generated_Source\PSoC5/SPIM.c **** *  No.
 859:Generated_Source\PSoC5/SPIM.c **** *
 860:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 861:Generated_Source\PSoC5/SPIM.c **** void SPIM_ClearTxBuffer(void) 
 862:Generated_Source\PSoC5/SPIM.c **** {
 1043              		.loc 1 862 0
 1044              		.cfi_startproc
 1045              		@ args = 0, pretend = 0, frame = 8
 1046              		@ frame_needed = 1, uses_anonymous_args = 0
 1047 0000 80B5     		push	{r7, lr}
 1048              		.cfi_def_cfa_offset 8
 1049              		.cfi_offset 7, -8
 1050              		.cfi_offset 14, -4
 1051 0002 82B0     		sub	sp, sp, #8
 1052              		.cfi_def_cfa_offset 16
 1053 0004 00AF     		add	r7, sp, #0
 1054              		.cfi_def_cfa_register 7
 863:Generated_Source\PSoC5/SPIM.c ****     uint8 enableInterrupts;
 864:Generated_Source\PSoC5/SPIM.c **** 
 865:Generated_Source\PSoC5/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 1055              		.loc 1 865 0
 1056 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1057 000a 0346     		mov	r3, r0
 1058 000c FB71     		strb	r3, [r7, #7]
 866:Generated_Source\PSoC5/SPIM.c ****     /* Clear TX FIFO */
 867:Generated_Source\PSoC5/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 1059              		.loc 1 867 0
 1060 000e 164A     		ldr	r2, .L70
 1061 0010 154B     		ldr	r3, .L70
 1062 0012 1B78     		ldrb	r3, [r3]
 1063 0014 DBB2     		uxtb	r3, r3
 1064 0016 43F00103 		orr	r3, r3, #1
 1065 001a DBB2     		uxtb	r3, r3
 1066 001c 1370     		strb	r3, [r2]
 868:Generated_Source\PSoC5/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 1067              		.loc 1 868 0
 1068 001e 124A     		ldr	r2, .L70
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 35


 1069 0020 114B     		ldr	r3, .L70
 1070 0022 1B78     		ldrb	r3, [r3]
 1071 0024 DBB2     		uxtb	r3, r3
 1072 0026 23F00103 		bic	r3, r3, #1
 1073 002a DBB2     		uxtb	r3, r3
 1074 002c 1370     		strb	r3, [r2]
 869:Generated_Source\PSoC5/SPIM.c **** 
 870:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_USE_SECOND_DATAPATH)
 871:Generated_Source\PSoC5/SPIM.c ****         /* Clear TX FIFO for 2nd Datapath */
 872:Generated_Source\PSoC5/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 873:Generated_Source\PSoC5/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 874:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_USE_SECOND_DATAPATH) */
 875:Generated_Source\PSoC5/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 1075              		.loc 1 875 0
 1076 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1077 0030 1846     		mov	r0, r3
 1078 0032 FFF7FEFF 		bl	CyExitCriticalSection
 876:Generated_Source\PSoC5/SPIM.c **** 
 877:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 878:Generated_Source\PSoC5/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 879:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableTxInt();
 1079              		.loc 1 879 0
 1080 0036 FFF7FEFF 		bl	SPIM_DisableTxInt
 880:Generated_Source\PSoC5/SPIM.c **** 
 881:Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferFull  = 0u;
 1081              		.loc 1 881 0
 1082 003a 0C4B     		ldr	r3, .L70+4
 1083 003c 0022     		movs	r2, #0
 1084 003e 1A70     		strb	r2, [r3]
 882:Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferRead  = 0u;
 1085              		.loc 1 882 0
 1086 0040 0B4B     		ldr	r3, .L70+8
 1087 0042 0022     		movs	r2, #0
 1088 0044 1A70     		strb	r2, [r3]
 883:Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferWrite = 0u;
 1089              		.loc 1 883 0
 1090 0046 0B4B     		ldr	r3, .L70+12
 1091 0048 0022     		movs	r2, #0
 1092 004a 1A70     		strb	r2, [r3]
 884:Generated_Source\PSoC5/SPIM.c **** 
 885:Generated_Source\PSoC5/SPIM.c ****         /* Buffer is EMPTY: disable TX FIFO NOT FULL interrupt */
 886:Generated_Source\PSoC5/SPIM.c ****         SPIM_TX_STATUS_MASK_REG &= ((uint8) ~SPIM_STS_TX_FIFO_NOT_FULL);
 1093              		.loc 1 886 0
 1094 004c 0A4A     		ldr	r2, .L70+16
 1095 004e 0A4B     		ldr	r3, .L70+16
 1096 0050 1B78     		ldrb	r3, [r3]
 1097 0052 DBB2     		uxtb	r3, r3
 1098 0054 23F00403 		bic	r3, r3, #4
 1099 0058 DBB2     		uxtb	r3, r3
 1100 005a 1370     		strb	r3, [r2]
 887:Generated_Source\PSoC5/SPIM.c **** 
 888:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableTxInt();
 1101              		.loc 1 888 0
 1102 005c FFF7FEFF 		bl	SPIM_EnableTxInt
 889:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 890:Generated_Source\PSoC5/SPIM.c **** }
 1103              		.loc 1 890 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 36


 1104 0060 00BF     		nop
 1105 0062 0837     		adds	r7, r7, #8
 1106              		.cfi_def_cfa_offset 8
 1107 0064 BD46     		mov	sp, r7
 1108              		.cfi_def_cfa_register 13
 1109              		@ sp needed
 1110 0066 80BD     		pop	{r7, pc}
 1111              	.L71:
 1112              		.align	2
 1113              	.L70:
 1114 0068 9B650040 		.word	1073767835
 1115 006c 00000000 		.word	SPIM_txBufferFull
 1116 0070 00000000 		.word	SPIM_txBufferRead
 1117 0074 00000000 		.word	SPIM_txBufferWrite
 1118 0078 84650040 		.word	1073767812
 1119              		.cfi_endproc
 1120              	.LFE17:
 1121              		.size	SPIM_ClearTxBuffer, .-SPIM_ClearTxBuffer
 1122              		.section	.text.SPIM_PutArray,"ax",%progbits
 1123              		.align	2
 1124              		.global	SPIM_PutArray
 1125              		.thumb
 1126              		.thumb_func
 1127              		.type	SPIM_PutArray, %function
 1128              	SPIM_PutArray:
 1129              	.LFB18:
 891:Generated_Source\PSoC5/SPIM.c **** 
 892:Generated_Source\PSoC5/SPIM.c **** 
 893:Generated_Source\PSoC5/SPIM.c **** #if(0u != SPIM_BIDIRECTIONAL_MODE)
 894:Generated_Source\PSoC5/SPIM.c ****     /*******************************************************************************
 895:Generated_Source\PSoC5/SPIM.c ****     * Function Name: SPIM_TxEnable
 896:Generated_Source\PSoC5/SPIM.c ****     ********************************************************************************
 897:Generated_Source\PSoC5/SPIM.c ****     *
 898:Generated_Source\PSoC5/SPIM.c ****     * Summary:
 899:Generated_Source\PSoC5/SPIM.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 900:Generated_Source\PSoC5/SPIM.c ****     *  will set the bi-directional pin to transmit.
 901:Generated_Source\PSoC5/SPIM.c ****     *
 902:Generated_Source\PSoC5/SPIM.c ****     * Parameters:
 903:Generated_Source\PSoC5/SPIM.c ****     *  None.
 904:Generated_Source\PSoC5/SPIM.c ****     *
 905:Generated_Source\PSoC5/SPIM.c ****     * Return:
 906:Generated_Source\PSoC5/SPIM.c ****     *  None.
 907:Generated_Source\PSoC5/SPIM.c ****     *
 908:Generated_Source\PSoC5/SPIM.c ****     *******************************************************************************/
 909:Generated_Source\PSoC5/SPIM.c ****     void SPIM_TxEnable(void) 
 910:Generated_Source\PSoC5/SPIM.c ****     {
 911:Generated_Source\PSoC5/SPIM.c ****         SPIM_CONTROL_REG |= SPIM_CTRL_TX_SIGNAL_EN;
 912:Generated_Source\PSoC5/SPIM.c ****     }
 913:Generated_Source\PSoC5/SPIM.c **** 
 914:Generated_Source\PSoC5/SPIM.c **** 
 915:Generated_Source\PSoC5/SPIM.c ****     /*******************************************************************************
 916:Generated_Source\PSoC5/SPIM.c ****     * Function Name: SPIM_TxDisable
 917:Generated_Source\PSoC5/SPIM.c ****     ********************************************************************************
 918:Generated_Source\PSoC5/SPIM.c ****     *
 919:Generated_Source\PSoC5/SPIM.c ****     * Summary:
 920:Generated_Source\PSoC5/SPIM.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 921:Generated_Source\PSoC5/SPIM.c ****     *  will set the bi-directional pin to receive.
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 37


 922:Generated_Source\PSoC5/SPIM.c ****     *
 923:Generated_Source\PSoC5/SPIM.c ****     * Parameters:
 924:Generated_Source\PSoC5/SPIM.c ****     *  None.
 925:Generated_Source\PSoC5/SPIM.c ****     *
 926:Generated_Source\PSoC5/SPIM.c ****     * Return:
 927:Generated_Source\PSoC5/SPIM.c ****     *  None.
 928:Generated_Source\PSoC5/SPIM.c ****     *
 929:Generated_Source\PSoC5/SPIM.c ****     *******************************************************************************/
 930:Generated_Source\PSoC5/SPIM.c ****     void SPIM_TxDisable(void) 
 931:Generated_Source\PSoC5/SPIM.c ****     {
 932:Generated_Source\PSoC5/SPIM.c ****         SPIM_CONTROL_REG &= ((uint8) ~SPIM_CTRL_TX_SIGNAL_EN);
 933:Generated_Source\PSoC5/SPIM.c ****     }
 934:Generated_Source\PSoC5/SPIM.c **** 
 935:Generated_Source\PSoC5/SPIM.c **** #endif /* (0u != SPIM_BIDIRECTIONAL_MODE) */
 936:Generated_Source\PSoC5/SPIM.c **** 
 937:Generated_Source\PSoC5/SPIM.c **** 
 938:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 939:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_PutArray
 940:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 941:Generated_Source\PSoC5/SPIM.c **** *
 942:Generated_Source\PSoC5/SPIM.c **** * Summary:
 943:Generated_Source\PSoC5/SPIM.c **** *  Write available data from ROM/RAM to the TX buffer while space is available
 944:Generated_Source\PSoC5/SPIM.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer.
 945:Generated_Source\PSoC5/SPIM.c **** *
 946:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 947:Generated_Source\PSoC5/SPIM.c **** *  *buffer: Pointer to the location in RAM containing the data to send
 948:Generated_Source\PSoC5/SPIM.c **** *  byteCount: The number of bytes to move to the transmit buffer.
 949:Generated_Source\PSoC5/SPIM.c **** *
 950:Generated_Source\PSoC5/SPIM.c **** * Return:
 951:Generated_Source\PSoC5/SPIM.c **** *  None.
 952:Generated_Source\PSoC5/SPIM.c **** *
 953:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 954:Generated_Source\PSoC5/SPIM.c **** *  Will stay in this routine until all data has been sent.  May get locked in
 955:Generated_Source\PSoC5/SPIM.c **** *  this loop if data is not being initiated by the master if there is not
 956:Generated_Source\PSoC5/SPIM.c **** *  enough room in the TX FIFO.
 957:Generated_Source\PSoC5/SPIM.c **** *
 958:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 959:Generated_Source\PSoC5/SPIM.c **** *  No.
 960:Generated_Source\PSoC5/SPIM.c **** *
 961:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 962:Generated_Source\PSoC5/SPIM.c **** void SPIM_PutArray(const uint8 buffer[], uint8 byteCount)
 963:Generated_Source\PSoC5/SPIM.c ****                                                                           
 964:Generated_Source\PSoC5/SPIM.c **** {
 1130              		.loc 1 964 0
 1131              		.cfi_startproc
 1132              		@ args = 0, pretend = 0, frame = 16
 1133              		@ frame_needed = 1, uses_anonymous_args = 0
 1134 0000 80B5     		push	{r7, lr}
 1135              		.cfi_def_cfa_offset 8
 1136              		.cfi_offset 7, -8
 1137              		.cfi_offset 14, -4
 1138 0002 84B0     		sub	sp, sp, #16
 1139              		.cfi_def_cfa_offset 24
 1140 0004 00AF     		add	r7, sp, #0
 1141              		.cfi_def_cfa_register 7
 1142 0006 7860     		str	r0, [r7, #4]
 1143 0008 0B46     		mov	r3, r1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 38


 1144 000a FB70     		strb	r3, [r7, #3]
 965:Generated_Source\PSoC5/SPIM.c ****     uint8 bufIndex;
 966:Generated_Source\PSoC5/SPIM.c **** 
 967:Generated_Source\PSoC5/SPIM.c ****     bufIndex = 0u;
 1145              		.loc 1 967 0
 1146 000c 0023     		movs	r3, #0
 1147 000e FB73     		strb	r3, [r7, #15]
 968:Generated_Source\PSoC5/SPIM.c **** 
 969:Generated_Source\PSoC5/SPIM.c ****     while(byteCount > 0u)
 1148              		.loc 1 969 0
 1149 0010 0CE0     		b	.L73
 1150              	.L74:
 970:Generated_Source\PSoC5/SPIM.c ****     {
 971:Generated_Source\PSoC5/SPIM.c ****         SPIM_WriteTxData(buffer[bufIndex]);
 1151              		.loc 1 971 0
 1152 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1153 0014 7A68     		ldr	r2, [r7, #4]
 1154 0016 1344     		add	r3, r3, r2
 1155 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1156 001a 1846     		mov	r0, r3
 1157 001c FFF7FEFF 		bl	SPIM_WriteTxData
 972:Generated_Source\PSoC5/SPIM.c ****         bufIndex++;
 1158              		.loc 1 972 0
 1159 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1160 0022 0133     		adds	r3, r3, #1
 1161 0024 FB73     		strb	r3, [r7, #15]
 973:Generated_Source\PSoC5/SPIM.c ****         byteCount--;
 1162              		.loc 1 973 0
 1163 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1164 0028 013B     		subs	r3, r3, #1
 1165 002a FB70     		strb	r3, [r7, #3]
 1166              	.L73:
 969:Generated_Source\PSoC5/SPIM.c ****     {
 1167              		.loc 1 969 0
 1168 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1169 002e 002B     		cmp	r3, #0
 1170 0030 EFD1     		bne	.L74
 974:Generated_Source\PSoC5/SPIM.c ****     }
 975:Generated_Source\PSoC5/SPIM.c **** }
 1171              		.loc 1 975 0
 1172 0032 00BF     		nop
 1173 0034 1037     		adds	r7, r7, #16
 1174              		.cfi_def_cfa_offset 8
 1175 0036 BD46     		mov	sp, r7
 1176              		.cfi_def_cfa_register 13
 1177              		@ sp needed
 1178 0038 80BD     		pop	{r7, pc}
 1179              		.cfi_endproc
 1180              	.LFE18:
 1181              		.size	SPIM_PutArray, .-SPIM_PutArray
 1182 003a 00BF     		.section	.text.SPIM_ClearFIFO,"ax",%progbits
 1183              		.align	2
 1184              		.global	SPIM_ClearFIFO
 1185              		.thumb
 1186              		.thumb_func
 1187              		.type	SPIM_ClearFIFO, %function
 1188              	SPIM_ClearFIFO:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 39


 1189              	.LFB19:
 976:Generated_Source\PSoC5/SPIM.c **** 
 977:Generated_Source\PSoC5/SPIM.c **** 
 978:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 979:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ClearFIFO
 980:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 981:Generated_Source\PSoC5/SPIM.c **** *
 982:Generated_Source\PSoC5/SPIM.c **** * Summary:
 983:Generated_Source\PSoC5/SPIM.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
 984:Generated_Source\PSoC5/SPIM.c **** *
 985:Generated_Source\PSoC5/SPIM.c **** * Parameters:
 986:Generated_Source\PSoC5/SPIM.c **** *  None.
 987:Generated_Source\PSoC5/SPIM.c **** *
 988:Generated_Source\PSoC5/SPIM.c **** * Return:
 989:Generated_Source\PSoC5/SPIM.c **** *  None.
 990:Generated_Source\PSoC5/SPIM.c **** *
 991:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 992:Generated_Source\PSoC5/SPIM.c **** *  Clear status register of the component.
 993:Generated_Source\PSoC5/SPIM.c **** *
 994:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 995:Generated_Source\PSoC5/SPIM.c **** void SPIM_ClearFIFO(void) 
 996:Generated_Source\PSoC5/SPIM.c **** {
 1190              		.loc 1 996 0
 1191              		.cfi_startproc
 1192              		@ args = 0, pretend = 0, frame = 8
 1193              		@ frame_needed = 1, uses_anonymous_args = 0
 1194 0000 80B5     		push	{r7, lr}
 1195              		.cfi_def_cfa_offset 8
 1196              		.cfi_offset 7, -8
 1197              		.cfi_offset 14, -4
 1198 0002 82B0     		sub	sp, sp, #8
 1199              		.cfi_def_cfa_offset 16
 1200 0004 00AF     		add	r7, sp, #0
 1201              		.cfi_def_cfa_register 7
 997:Generated_Source\PSoC5/SPIM.c ****     uint8 enableInterrupts;
 998:Generated_Source\PSoC5/SPIM.c **** 
 999:Generated_Source\PSoC5/SPIM.c ****     /* Clear Hardware RX FIFO */
1000:Generated_Source\PSoC5/SPIM.c ****     while(0u !=(SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY))
 1202              		.loc 1 1000 0
 1203 0006 01E0     		b	.L76
 1204              	.L77:
1001:Generated_Source\PSoC5/SPIM.c ****     {
1002:Generated_Source\PSoC5/SPIM.c ****         (void) CY_GET_REG8(SPIM_RXDATA_PTR);
 1205              		.loc 1 1002 0
 1206 0008 124B     		ldr	r3, .L78
 1207 000a 1B78     		ldrb	r3, [r3]
 1208              	.L76:
1000:Generated_Source\PSoC5/SPIM.c ****     {
 1209              		.loc 1 1000 0
 1210 000c 124B     		ldr	r3, .L78+4
 1211 000e 1B78     		ldrb	r3, [r3]
 1212 0010 DBB2     		uxtb	r3, r3
 1213 0012 03F02003 		and	r3, r3, #32
 1214 0016 002B     		cmp	r3, #0
 1215 0018 F6D1     		bne	.L77
1003:Generated_Source\PSoC5/SPIM.c ****     }
1004:Generated_Source\PSoC5/SPIM.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 40


1005:Generated_Source\PSoC5/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 1216              		.loc 1 1005 0
 1217 001a FFF7FEFF 		bl	CyEnterCriticalSection
 1218 001e 0346     		mov	r3, r0
 1219 0020 FB71     		strb	r3, [r7, #7]
1006:Generated_Source\PSoC5/SPIM.c ****     /* Clear TX FIFO */
1007:Generated_Source\PSoC5/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 1220              		.loc 1 1007 0
 1221 0022 0E4A     		ldr	r2, .L78+8
 1222 0024 0D4B     		ldr	r3, .L78+8
 1223 0026 1B78     		ldrb	r3, [r3]
 1224 0028 DBB2     		uxtb	r3, r3
 1225 002a 43F00103 		orr	r3, r3, #1
 1226 002e DBB2     		uxtb	r3, r3
 1227 0030 1370     		strb	r3, [r2]
1008:Generated_Source\PSoC5/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 1228              		.loc 1 1008 0
 1229 0032 0A4A     		ldr	r2, .L78+8
 1230 0034 094B     		ldr	r3, .L78+8
 1231 0036 1B78     		ldrb	r3, [r3]
 1232 0038 DBB2     		uxtb	r3, r3
 1233 003a 23F00103 		bic	r3, r3, #1
 1234 003e DBB2     		uxtb	r3, r3
 1235 0040 1370     		strb	r3, [r2]
1009:Generated_Source\PSoC5/SPIM.c **** 
1010:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_USE_SECOND_DATAPATH)
1011:Generated_Source\PSoC5/SPIM.c ****         /* Clear TX FIFO for 2nd Datapath */
1012:Generated_Source\PSoC5/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
1013:Generated_Source\PSoC5/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
1014:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_USE_SECOND_DATAPATH) */
1015:Generated_Source\PSoC5/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 1236              		.loc 1 1015 0
 1237 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1238 0044 1846     		mov	r0, r3
 1239 0046 FFF7FEFF 		bl	CyExitCriticalSection
1016:Generated_Source\PSoC5/SPIM.c **** }
 1240              		.loc 1 1016 0
 1241 004a 00BF     		nop
 1242 004c 0837     		adds	r7, r7, #8
 1243              		.cfi_def_cfa_offset 8
 1244 004e BD46     		mov	sp, r7
 1245              		.cfi_def_cfa_register 13
 1246              		@ sp needed
 1247 0050 80BD     		pop	{r7, pc}
 1248              	.L79:
 1249 0052 00BF     		.align	2
 1250              	.L78:
 1251 0054 5B650040 		.word	1073767771
 1252 0058 68640040 		.word	1073767528
 1253 005c 9B650040 		.word	1073767835
 1254              		.cfi_endproc
 1255              	.LFE19:
 1256              		.size	SPIM_ClearFIFO, .-SPIM_ClearFIFO
 1257              		.section	.text.SPIM_EnableInt,"ax",%progbits
 1258              		.align	2
 1259              		.global	SPIM_EnableInt
 1260              		.thumb
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 41


 1261              		.thumb_func
 1262              		.type	SPIM_EnableInt, %function
 1263              	SPIM_EnableInt:
 1264              	.LFB20:
1017:Generated_Source\PSoC5/SPIM.c **** 
1018:Generated_Source\PSoC5/SPIM.c **** 
1019:Generated_Source\PSoC5/SPIM.c **** /* Following functions are for version Compatibility, they are obsolete.
1020:Generated_Source\PSoC5/SPIM.c **** *  Please do not use it in new projects.
1021:Generated_Source\PSoC5/SPIM.c **** */
1022:Generated_Source\PSoC5/SPIM.c **** 
1023:Generated_Source\PSoC5/SPIM.c **** 
1024:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
1025:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_EnableInt
1026:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
1027:Generated_Source\PSoC5/SPIM.c **** *
1028:Generated_Source\PSoC5/SPIM.c **** * Summary:
1029:Generated_Source\PSoC5/SPIM.c **** *  Enable internal interrupt generation.
1030:Generated_Source\PSoC5/SPIM.c **** *
1031:Generated_Source\PSoC5/SPIM.c **** * Parameters:
1032:Generated_Source\PSoC5/SPIM.c **** *  None.
1033:Generated_Source\PSoC5/SPIM.c **** *
1034:Generated_Source\PSoC5/SPIM.c **** * Return:
1035:Generated_Source\PSoC5/SPIM.c **** *  None.
1036:Generated_Source\PSoC5/SPIM.c **** *
1037:Generated_Source\PSoC5/SPIM.c **** * Theory:
1038:Generated_Source\PSoC5/SPIM.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1039:Generated_Source\PSoC5/SPIM.c **** *
1040:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
1041:Generated_Source\PSoC5/SPIM.c **** void SPIM_EnableInt(void) 
1042:Generated_Source\PSoC5/SPIM.c **** {
 1265              		.loc 1 1042 0
 1266              		.cfi_startproc
 1267              		@ args = 0, pretend = 0, frame = 0
 1268              		@ frame_needed = 1, uses_anonymous_args = 0
 1269 0000 80B5     		push	{r7, lr}
 1270              		.cfi_def_cfa_offset 8
 1271              		.cfi_offset 7, -8
 1272              		.cfi_offset 14, -4
 1273 0002 00AF     		add	r7, sp, #0
 1274              		.cfi_def_cfa_register 7
1043:Generated_Source\PSoC5/SPIM.c ****     SPIM_EnableRxInt();
 1275              		.loc 1 1043 0
 1276 0004 FFF7FEFF 		bl	SPIM_EnableRxInt
1044:Generated_Source\PSoC5/SPIM.c ****     SPIM_EnableTxInt();
 1277              		.loc 1 1044 0
 1278 0008 FFF7FEFF 		bl	SPIM_EnableTxInt
1045:Generated_Source\PSoC5/SPIM.c **** }
 1279              		.loc 1 1045 0
 1280 000c 00BF     		nop
 1281 000e 80BD     		pop	{r7, pc}
 1282              		.cfi_endproc
 1283              	.LFE20:
 1284              		.size	SPIM_EnableInt, .-SPIM_EnableInt
 1285              		.section	.text.SPIM_DisableInt,"ax",%progbits
 1286              		.align	2
 1287              		.global	SPIM_DisableInt
 1288              		.thumb
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 42


 1289              		.thumb_func
 1290              		.type	SPIM_DisableInt, %function
 1291              	SPIM_DisableInt:
 1292              	.LFB21:
1046:Generated_Source\PSoC5/SPIM.c **** 
1047:Generated_Source\PSoC5/SPIM.c **** 
1048:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
1049:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_DisableInt
1050:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
1051:Generated_Source\PSoC5/SPIM.c **** *
1052:Generated_Source\PSoC5/SPIM.c **** * Summary:
1053:Generated_Source\PSoC5/SPIM.c **** *  Disable internal interrupt generation.
1054:Generated_Source\PSoC5/SPIM.c **** *
1055:Generated_Source\PSoC5/SPIM.c **** * Parameters:
1056:Generated_Source\PSoC5/SPIM.c **** *  None.
1057:Generated_Source\PSoC5/SPIM.c **** *
1058:Generated_Source\PSoC5/SPIM.c **** * Return:
1059:Generated_Source\PSoC5/SPIM.c **** *  None.
1060:Generated_Source\PSoC5/SPIM.c **** *
1061:Generated_Source\PSoC5/SPIM.c **** * Theory:
1062:Generated_Source\PSoC5/SPIM.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1063:Generated_Source\PSoC5/SPIM.c **** *
1064:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
1065:Generated_Source\PSoC5/SPIM.c **** void SPIM_DisableInt(void) 
1066:Generated_Source\PSoC5/SPIM.c **** {
 1293              		.loc 1 1066 0
 1294              		.cfi_startproc
 1295              		@ args = 0, pretend = 0, frame = 0
 1296              		@ frame_needed = 1, uses_anonymous_args = 0
 1297 0000 80B5     		push	{r7, lr}
 1298              		.cfi_def_cfa_offset 8
 1299              		.cfi_offset 7, -8
 1300              		.cfi_offset 14, -4
 1301 0002 00AF     		add	r7, sp, #0
 1302              		.cfi_def_cfa_register 7
1067:Generated_Source\PSoC5/SPIM.c ****     SPIM_DisableTxInt();
 1303              		.loc 1 1067 0
 1304 0004 FFF7FEFF 		bl	SPIM_DisableTxInt
1068:Generated_Source\PSoC5/SPIM.c ****     SPIM_DisableRxInt();
 1305              		.loc 1 1068 0
 1306 0008 FFF7FEFF 		bl	SPIM_DisableRxInt
1069:Generated_Source\PSoC5/SPIM.c **** }
 1307              		.loc 1 1069 0
 1308 000c 00BF     		nop
 1309 000e 80BD     		pop	{r7, pc}
 1310              		.cfi_endproc
 1311              	.LFE21:
 1312              		.size	SPIM_DisableInt, .-SPIM_DisableInt
 1313              		.section	.text.SPIM_SetInterruptMode,"ax",%progbits
 1314              		.align	2
 1315              		.global	SPIM_SetInterruptMode
 1316              		.thumb
 1317              		.thumb_func
 1318              		.type	SPIM_SetInterruptMode, %function
 1319              	SPIM_SetInterruptMode:
 1320              	.LFB22:
1070:Generated_Source\PSoC5/SPIM.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 43


1071:Generated_Source\PSoC5/SPIM.c **** 
1072:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
1073:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_SetInterruptMode
1074:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
1075:Generated_Source\PSoC5/SPIM.c **** *
1076:Generated_Source\PSoC5/SPIM.c **** * Summary:
1077:Generated_Source\PSoC5/SPIM.c **** *  Configure which status bits trigger an interrupt event.
1078:Generated_Source\PSoC5/SPIM.c **** *
1079:Generated_Source\PSoC5/SPIM.c **** * Parameters:
1080:Generated_Source\PSoC5/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1081:Generated_Source\PSoC5/SPIM.c **** *  header file).
1082:Generated_Source\PSoC5/SPIM.c **** *
1083:Generated_Source\PSoC5/SPIM.c **** * Return:
1084:Generated_Source\PSoC5/SPIM.c **** *  None.
1085:Generated_Source\PSoC5/SPIM.c **** *
1086:Generated_Source\PSoC5/SPIM.c **** * Theory:
1087:Generated_Source\PSoC5/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
1088:Generated_Source\PSoC5/SPIM.c **** *
1089:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
1090:Generated_Source\PSoC5/SPIM.c **** void SPIM_SetInterruptMode(uint8 intSrc) 
1091:Generated_Source\PSoC5/SPIM.c **** {
 1321              		.loc 1 1091 0
 1322              		.cfi_startproc
 1323              		@ args = 0, pretend = 0, frame = 8
 1324              		@ frame_needed = 1, uses_anonymous_args = 0
 1325              		@ link register save eliminated.
 1326 0000 80B4     		push	{r7}
 1327              		.cfi_def_cfa_offset 4
 1328              		.cfi_offset 7, -4
 1329 0002 83B0     		sub	sp, sp, #12
 1330              		.cfi_def_cfa_offset 16
 1331 0004 00AF     		add	r7, sp, #0
 1332              		.cfi_def_cfa_register 7
 1333 0006 0346     		mov	r3, r0
 1334 0008 FB71     		strb	r3, [r7, #7]
1092:Generated_Source\PSoC5/SPIM.c ****     SPIM_TX_STATUS_MASK_REG  = (intSrc & ((uint8) ~SPIM_STS_SPI_IDLE));
 1335              		.loc 1 1092 0
 1336 000a 074A     		ldr	r2, .L83
 1337 000c FB79     		ldrb	r3, [r7, #7]
 1338 000e 23F01003 		bic	r3, r3, #16
 1339 0012 DBB2     		uxtb	r3, r3
 1340 0014 1370     		strb	r3, [r2]
1093:Generated_Source\PSoC5/SPIM.c ****     SPIM_RX_STATUS_MASK_REG  =  intSrc;
 1341              		.loc 1 1093 0
 1342 0016 054A     		ldr	r2, .L83+4
 1343 0018 FB79     		ldrb	r3, [r7, #7]
 1344 001a 1370     		strb	r3, [r2]
1094:Generated_Source\PSoC5/SPIM.c **** }
 1345              		.loc 1 1094 0
 1346 001c 00BF     		nop
 1347 001e 0C37     		adds	r7, r7, #12
 1348              		.cfi_def_cfa_offset 4
 1349 0020 BD46     		mov	sp, r7
 1350              		.cfi_def_cfa_register 13
 1351              		@ sp needed
 1352 0022 80BC     		pop	{r7}
 1353              		.cfi_restore 7
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 44


 1354              		.cfi_def_cfa_offset 0
 1355 0024 7047     		bx	lr
 1356              	.L84:
 1357 0026 00BF     		.align	2
 1358              	.L83:
 1359 0028 84650040 		.word	1073767812
 1360 002c 88640040 		.word	1073767560
 1361              		.cfi_endproc
 1362              	.LFE22:
 1363              		.size	SPIM_SetInterruptMode, .-SPIM_SetInterruptMode
 1364              		.section	.text.SPIM_ReadStatus,"ax",%progbits
 1365              		.align	2
 1366              		.global	SPIM_ReadStatus
 1367              		.thumb
 1368              		.thumb_func
 1369              		.type	SPIM_ReadStatus, %function
 1370              	SPIM_ReadStatus:
 1371              	.LFB23:
1095:Generated_Source\PSoC5/SPIM.c **** 
1096:Generated_Source\PSoC5/SPIM.c **** 
1097:Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
1098:Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ReadStatus
1099:Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
1100:Generated_Source\PSoC5/SPIM.c **** *
1101:Generated_Source\PSoC5/SPIM.c **** * Summary:
1102:Generated_Source\PSoC5/SPIM.c **** *  Read the status register for the component.
1103:Generated_Source\PSoC5/SPIM.c **** *
1104:Generated_Source\PSoC5/SPIM.c **** * Parameters:
1105:Generated_Source\PSoC5/SPIM.c **** *  None.
1106:Generated_Source\PSoC5/SPIM.c **** *
1107:Generated_Source\PSoC5/SPIM.c **** * Return:
1108:Generated_Source\PSoC5/SPIM.c **** *  Contents of the status register.
1109:Generated_Source\PSoC5/SPIM.c **** *
1110:Generated_Source\PSoC5/SPIM.c **** * Global variables:
1111:Generated_Source\PSoC5/SPIM.c **** *  SPIM_swStatus - used to store in software status register,
1112:Generated_Source\PSoC5/SPIM.c **** *  modified every function call - resets to zero.
1113:Generated_Source\PSoC5/SPIM.c **** *
1114:Generated_Source\PSoC5/SPIM.c **** * Theory:
1115:Generated_Source\PSoC5/SPIM.c **** *  Allows the user and the API to read the status register for error detection
1116:Generated_Source\PSoC5/SPIM.c **** *  and flow control.
1117:Generated_Source\PSoC5/SPIM.c **** *
1118:Generated_Source\PSoC5/SPIM.c **** * Side Effects:
1119:Generated_Source\PSoC5/SPIM.c **** *  Clear status register of the component.
1120:Generated_Source\PSoC5/SPIM.c **** *
1121:Generated_Source\PSoC5/SPIM.c **** * Reentrant:
1122:Generated_Source\PSoC5/SPIM.c **** *  No.
1123:Generated_Source\PSoC5/SPIM.c **** *
1124:Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
1125:Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_ReadStatus(void) 
1126:Generated_Source\PSoC5/SPIM.c **** {
 1372              		.loc 1 1126 0
 1373              		.cfi_startproc
 1374              		@ args = 0, pretend = 0, frame = 8
 1375              		@ frame_needed = 1, uses_anonymous_args = 0
 1376 0000 80B5     		push	{r7, lr}
 1377              		.cfi_def_cfa_offset 8
 1378              		.cfi_offset 7, -8
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 45


 1379              		.cfi_offset 14, -4
 1380 0002 82B0     		sub	sp, sp, #8
 1381              		.cfi_def_cfa_offset 16
 1382 0004 00AF     		add	r7, sp, #0
 1383              		.cfi_def_cfa_register 7
1127:Generated_Source\PSoC5/SPIM.c ****     uint8 tmpStatus;
1128:Generated_Source\PSoC5/SPIM.c **** 
1129:Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED || SPIM_RX_SOFTWARE_BUF_ENABLED)
1130:Generated_Source\PSoC5/SPIM.c **** 
1131:Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableInt();
 1384              		.loc 1 1131 0
 1385 0006 FFF7FEFF 		bl	SPIM_DisableInt
1132:Generated_Source\PSoC5/SPIM.c **** 
1133:Generated_Source\PSoC5/SPIM.c ****         tmpStatus  = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
 1386              		.loc 1 1133 0
 1387 000a 154B     		ldr	r3, .L87
 1388 000c 1B78     		ldrb	r3, [r3]
 1389 000e DAB2     		uxtb	r2, r3
 1390 0010 144B     		ldr	r3, .L87+4
 1391 0012 1B78     		ldrb	r3, [r3]
 1392 0014 DBB2     		uxtb	r3, r3
 1393 0016 03F04003 		and	r3, r3, #64
 1394 001a DBB2     		uxtb	r3, r3
 1395 001c 1343     		orrs	r3, r3, r2
 1396 001e FB71     		strb	r3, [r7, #7]
1134:Generated_Source\PSoC5/SPIM.c ****         tmpStatus |= SPIM_GET_STATUS_TX(SPIM_swStatusTx);
 1397              		.loc 1 1134 0
 1398 0020 114B     		ldr	r3, .L87+8
 1399 0022 1B78     		ldrb	r3, [r3]
 1400 0024 DAB2     		uxtb	r2, r3
 1401 0026 114B     		ldr	r3, .L87+12
 1402 0028 1B78     		ldrb	r3, [r3]
 1403 002a DBB2     		uxtb	r3, r3
 1404 002c 03F00903 		and	r3, r3, #9
 1405 0030 DBB2     		uxtb	r3, r3
 1406 0032 1343     		orrs	r3, r3, r2
 1407 0034 DAB2     		uxtb	r2, r3
 1408 0036 FB79     		ldrb	r3, [r7, #7]
 1409 0038 1343     		orrs	r3, r3, r2
 1410 003a FB71     		strb	r3, [r7, #7]
1135:Generated_Source\PSoC5/SPIM.c ****         tmpStatus &= ((uint8) ~SPIM_STS_SPI_IDLE);
 1411              		.loc 1 1135 0
 1412 003c FB79     		ldrb	r3, [r7, #7]
 1413 003e 23F01003 		bic	r3, r3, #16
 1414 0042 FB71     		strb	r3, [r7, #7]
1136:Generated_Source\PSoC5/SPIM.c **** 
1137:Generated_Source\PSoC5/SPIM.c ****         SPIM_swStatusTx = 0u;
 1415              		.loc 1 1137 0
 1416 0044 094B     		ldr	r3, .L87+12
 1417 0046 0022     		movs	r2, #0
 1418 0048 1A70     		strb	r2, [r3]
1138:Generated_Source\PSoC5/SPIM.c ****         SPIM_swStatusRx = 0u;
 1419              		.loc 1 1138 0
 1420 004a 064B     		ldr	r3, .L87+4
 1421 004c 0022     		movs	r2, #0
 1422 004e 1A70     		strb	r2, [r3]
1139:Generated_Source\PSoC5/SPIM.c **** 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 46


1140:Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableInt();
 1423              		.loc 1 1140 0
 1424 0050 FFF7FEFF 		bl	SPIM_EnableInt
1141:Generated_Source\PSoC5/SPIM.c **** 
1142:Generated_Source\PSoC5/SPIM.c ****     #else
1143:Generated_Source\PSoC5/SPIM.c **** 
1144:Generated_Source\PSoC5/SPIM.c ****         tmpStatus  = SPIM_RX_STATUS_REG;
1145:Generated_Source\PSoC5/SPIM.c ****         tmpStatus |= SPIM_TX_STATUS_REG;
1146:Generated_Source\PSoC5/SPIM.c ****         tmpStatus &= ((uint8) ~SPIM_STS_SPI_IDLE);
1147:Generated_Source\PSoC5/SPIM.c **** 
1148:Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED || SPIM_RX_SOFTWARE_BUF_ENABLED) */
1149:Generated_Source\PSoC5/SPIM.c **** 
1150:Generated_Source\PSoC5/SPIM.c ****     return(tmpStatus);
 1425              		.loc 1 1150 0
 1426 0054 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1151:Generated_Source\PSoC5/SPIM.c **** }
 1427              		.loc 1 1151 0
 1428 0056 1846     		mov	r0, r3
 1429 0058 0837     		adds	r7, r7, #8
 1430              		.cfi_def_cfa_offset 8
 1431 005a BD46     		mov	sp, r7
 1432              		.cfi_def_cfa_register 13
 1433              		@ sp needed
 1434 005c 80BD     		pop	{r7, pc}
 1435              	.L88:
 1436 005e 00BF     		.align	2
 1437              	.L87:
 1438 0060 68640040 		.word	1073767528
 1439 0064 00000000 		.word	SPIM_swStatusRx
 1440 0068 64650040 		.word	1073767780
 1441 006c 00000000 		.word	SPIM_swStatusTx
 1442              		.cfi_endproc
 1443              	.LFE23:
 1444              		.size	SPIM_ReadStatus, .-SPIM_ReadStatus
 1445              		.text
 1446              	.Letext0:
 1447              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1448              		.section	.debug_info,"",%progbits
 1449              	.Ldebug_info0:
 1450 0000 84040000 		.4byte	0x484
 1451 0004 0400     		.2byte	0x4
 1452 0006 00000000 		.4byte	.Ldebug_abbrev0
 1453 000a 04       		.byte	0x4
 1454 000b 01       		.uleb128 0x1
 1455 000c 18000000 		.4byte	.LASF60
 1456 0010 0C       		.byte	0xc
 1457 0011 CD030000 		.4byte	.LASF61
 1458 0015 E6020000 		.4byte	.LASF62
 1459 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1460 001d 00000000 		.4byte	0
 1461 0021 00000000 		.4byte	.Ldebug_line0
 1462 0025 02       		.uleb128 0x2
 1463 0026 01       		.byte	0x1
 1464 0027 06       		.byte	0x6
 1465 0028 D5000000 		.4byte	.LASF0
 1466 002c 02       		.uleb128 0x2
 1467 002d 01       		.byte	0x1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 47


 1468 002e 08       		.byte	0x8
 1469 002f 8D020000 		.4byte	.LASF1
 1470 0033 02       		.uleb128 0x2
 1471 0034 02       		.byte	0x2
 1472 0035 05       		.byte	0x5
 1473 0036 BB020000 		.4byte	.LASF2
 1474 003a 02       		.uleb128 0x2
 1475 003b 02       		.byte	0x2
 1476 003c 07       		.byte	0x7
 1477 003d A9010000 		.4byte	.LASF3
 1478 0041 02       		.uleb128 0x2
 1479 0042 04       		.byte	0x4
 1480 0043 05       		.byte	0x5
 1481 0044 E1000000 		.4byte	.LASF4
 1482 0048 02       		.uleb128 0x2
 1483 0049 04       		.byte	0x4
 1484 004a 07       		.byte	0x7
 1485 004b 80010000 		.4byte	.LASF5
 1486 004f 02       		.uleb128 0x2
 1487 0050 08       		.byte	0x8
 1488 0051 05       		.byte	0x5
 1489 0052 C7000000 		.4byte	.LASF6
 1490 0056 02       		.uleb128 0x2
 1491 0057 08       		.byte	0x8
 1492 0058 07       		.byte	0x7
 1493 0059 A6000000 		.4byte	.LASF7
 1494 005d 03       		.uleb128 0x3
 1495 005e 04       		.byte	0x4
 1496 005f 05       		.byte	0x5
 1497 0060 696E7400 		.ascii	"int\000"
 1498 0064 02       		.uleb128 0x2
 1499 0065 04       		.byte	0x4
 1500 0066 07       		.byte	0x7
 1501 0067 4F010000 		.4byte	.LASF8
 1502 006b 04       		.uleb128 0x4
 1503 006c 0D010000 		.4byte	.LASF9
 1504 0070 02       		.byte	0x2
 1505 0071 E401     		.2byte	0x1e4
 1506 0073 2C000000 		.4byte	0x2c
 1507 0077 04       		.uleb128 0x4
 1508 0078 24010000 		.4byte	.LASF10
 1509 007c 02       		.byte	0x2
 1510 007d E601     		.2byte	0x1e6
 1511 007f 48000000 		.4byte	0x48
 1512 0083 02       		.uleb128 0x2
 1513 0084 04       		.byte	0x4
 1514 0085 04       		.byte	0x4
 1515 0086 72020000 		.4byte	.LASF11
 1516 008a 02       		.uleb128 0x2
 1517 008b 08       		.byte	0x8
 1518 008c 04       		.byte	0x4
 1519 008d 13010000 		.4byte	.LASF12
 1520 0091 02       		.uleb128 0x2
 1521 0092 01       		.byte	0x1
 1522 0093 08       		.byte	0x8
 1523 0094 EB030000 		.4byte	.LASF13
 1524 0098 04       		.uleb128 0x4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 48


 1525 0099 88020000 		.4byte	.LASF14
 1526 009d 02       		.byte	0x2
 1527 009e 8E02     		.2byte	0x28e
 1528 00a0 A4000000 		.4byte	0xa4
 1529 00a4 05       		.uleb128 0x5
 1530 00a5 6B000000 		.4byte	0x6b
 1531 00a9 04       		.uleb128 0x4
 1532 00aa 0B020000 		.4byte	.LASF15
 1533 00ae 02       		.byte	0x2
 1534 00af 9002     		.2byte	0x290
 1535 00b1 B5000000 		.4byte	0xb5
 1536 00b5 05       		.uleb128 0x5
 1537 00b6 77000000 		.4byte	0x77
 1538 00ba 02       		.uleb128 0x2
 1539 00bb 08       		.byte	0x8
 1540 00bc 04       		.byte	0x4
 1541 00bd 28020000 		.4byte	.LASF16
 1542 00c1 02       		.uleb128 0x2
 1543 00c2 04       		.byte	0x4
 1544 00c3 07       		.byte	0x7
 1545 00c4 1F020000 		.4byte	.LASF17
 1546 00c8 06       		.uleb128 0x6
 1547 00c9 B1020000 		.4byte	.LASF18
 1548 00cd 01       		.byte	0x1
 1549 00ce 3F       		.byte	0x3f
 1550 00cf 00000000 		.4byte	.LFB0
 1551 00d3 70000000 		.4byte	.LFE0-.LFB0
 1552 00d7 01       		.uleb128 0x1
 1553 00d8 9C       		.byte	0x9c
 1554 00d9 07       		.uleb128 0x7
 1555 00da F0030000 		.4byte	.LASF20
 1556 00de 01       		.byte	0x1
 1557 00df 78       		.byte	0x78
 1558 00e0 00000000 		.4byte	.LFB1
 1559 00e4 68000000 		.4byte	.LFE1-.LFB1
 1560 00e8 01       		.uleb128 0x1
 1561 00e9 9C       		.byte	0x9c
 1562 00ea FD000000 		.4byte	0xfd
 1563 00ee 08       		.uleb128 0x8
 1564 00ef 44040000 		.4byte	.LASF22
 1565 00f3 01       		.byte	0x1
 1566 00f4 7A       		.byte	0x7a
 1567 00f5 6B000000 		.4byte	0x6b
 1568 00f9 02       		.uleb128 0x2
 1569 00fa 91       		.byte	0x91
 1570 00fb 77       		.sleb128 -9
 1571 00fc 00       		.byte	0
 1572 00fd 06       		.uleb128 0x6
 1573 00fe 39040000 		.4byte	.LASF19
 1574 0102 01       		.byte	0x1
 1575 0103 A3       		.byte	0xa3
 1576 0104 00000000 		.4byte	.LFB2
 1577 0108 24000000 		.4byte	.LFE2-.LFB2
 1578 010c 01       		.uleb128 0x1
 1579 010d 9C       		.byte	0x9c
 1580 010e 07       		.uleb128 0x7
 1581 010f 1A010000 		.4byte	.LASF21
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 49


 1582 0113 01       		.byte	0x1
 1583 0114 C0       		.byte	0xc0
 1584 0115 00000000 		.4byte	.LFB3
 1585 0119 54000000 		.4byte	.LFE3-.LFB3
 1586 011d 01       		.uleb128 0x1
 1587 011e 9C       		.byte	0x9c
 1588 011f 32010000 		.4byte	0x132
 1589 0123 08       		.uleb128 0x8
 1590 0124 44040000 		.4byte	.LASF22
 1591 0128 01       		.byte	0x1
 1592 0129 C2       		.byte	0xc2
 1593 012a 6B000000 		.4byte	0x6b
 1594 012e 02       		.uleb128 0x2
 1595 012f 91       		.byte	0x91
 1596 0130 77       		.sleb128 -9
 1597 0131 00       		.byte	0
 1598 0132 09       		.uleb128 0x9
 1599 0133 13040000 		.4byte	.LASF23
 1600 0137 01       		.byte	0x1
 1601 0138 E3       		.byte	0xe3
 1602 0139 00000000 		.4byte	.LFB4
 1603 013d 18000000 		.4byte	.LFE4-.LFB4
 1604 0141 01       		.uleb128 0x1
 1605 0142 9C       		.byte	0x9c
 1606 0143 09       		.uleb128 0x9
 1607 0144 34020000 		.4byte	.LASF24
 1608 0148 01       		.byte	0x1
 1609 0149 FC       		.byte	0xfc
 1610 014a 00000000 		.4byte	.LFB5
 1611 014e 0C000000 		.4byte	.LFE5-.LFB5
 1612 0152 01       		.uleb128 0x1
 1613 0153 9C       		.byte	0x9c
 1614 0154 0A       		.uleb128 0xa
 1615 0155 82030000 		.4byte	.LASF25
 1616 0159 01       		.byte	0x1
 1617 015a 1501     		.2byte	0x115
 1618 015c 00000000 		.4byte	.LFB6
 1619 0160 18000000 		.4byte	.LFE6-.LFB6
 1620 0164 01       		.uleb128 0x1
 1621 0165 9C       		.byte	0x9c
 1622 0166 0A       		.uleb128 0xa
 1623 0167 E9010000 		.4byte	.LASF26
 1624 016b 01       		.byte	0x1
 1625 016c 2E01     		.2byte	0x12e
 1626 016e 00000000 		.4byte	.LFB7
 1627 0172 0C000000 		.4byte	.LFE7-.LFB7
 1628 0176 01       		.uleb128 0x1
 1629 0177 9C       		.byte	0x9c
 1630 0178 0B       		.uleb128 0xb
 1631 0179 00000000 		.4byte	.LASF27
 1632 017d 01       		.byte	0x1
 1633 017e 4801     		.2byte	0x148
 1634 0180 00000000 		.4byte	.LFB8
 1635 0184 20000000 		.4byte	.LFE8-.LFB8
 1636 0188 01       		.uleb128 0x1
 1637 0189 9C       		.byte	0x9c
 1638 018a 9E010000 		.4byte	0x19e
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 50


 1639 018e 0C       		.uleb128 0xc
 1640 018f E2010000 		.4byte	.LASF29
 1641 0193 01       		.byte	0x1
 1642 0194 4801     		.2byte	0x148
 1643 0196 6B000000 		.4byte	0x6b
 1644 019a 02       		.uleb128 0x2
 1645 019b 91       		.byte	0x91
 1646 019c 77       		.sleb128 -9
 1647 019d 00       		.byte	0
 1648 019e 0B       		.uleb128 0xb
 1649 019f 9E030000 		.4byte	.LASF28
 1650 01a3 01       		.byte	0x1
 1651 01a4 6001     		.2byte	0x160
 1652 01a6 00000000 		.4byte	.LFB9
 1653 01aa 20000000 		.4byte	.LFE9-.LFB9
 1654 01ae 01       		.uleb128 0x1
 1655 01af 9C       		.byte	0x9c
 1656 01b0 C4010000 		.4byte	0x1c4
 1657 01b4 0C       		.uleb128 0xc
 1658 01b5 E2010000 		.4byte	.LASF29
 1659 01b9 01       		.byte	0x1
 1660 01ba 6001     		.2byte	0x160
 1661 01bc 6B000000 		.4byte	0x6b
 1662 01c0 02       		.uleb128 0x2
 1663 01c1 91       		.byte	0x91
 1664 01c2 77       		.sleb128 -9
 1665 01c3 00       		.byte	0
 1666 01c4 0D       		.uleb128 0xd
 1667 01c5 D4020000 		.4byte	.LASF31
 1668 01c9 01       		.byte	0x1
 1669 01ca 8201     		.2byte	0x182
 1670 01cc 6B000000 		.4byte	0x6b
 1671 01d0 00000000 		.4byte	.LFB10
 1672 01d4 3C000000 		.4byte	.LFE10-.LFB10
 1673 01d8 01       		.uleb128 0x1
 1674 01d9 9C       		.byte	0x9c
 1675 01da EE010000 		.4byte	0x1ee
 1676 01de 0E       		.uleb128 0xe
 1677 01df BD000000 		.4byte	.LASF30
 1678 01e3 01       		.byte	0x1
 1679 01e4 8401     		.2byte	0x184
 1680 01e6 6B000000 		.4byte	0x6b
 1681 01ea 02       		.uleb128 0x2
 1682 01eb 91       		.byte	0x91
 1683 01ec 77       		.sleb128 -9
 1684 01ed 00       		.byte	0
 1685 01ee 0F       		.uleb128 0xf
 1686 01ef 3D010000 		.4byte	.LASF32
 1687 01f3 01       		.byte	0x1
 1688 01f4 B501     		.2byte	0x1b5
 1689 01f6 6B000000 		.4byte	0x6b
 1690 01fa 00000000 		.4byte	.LFB11
 1691 01fe 1C000000 		.4byte	.LFE11-.LFB11
 1692 0202 01       		.uleb128 0x1
 1693 0203 9C       		.byte	0x9c
 1694 0204 18020000 		.4byte	0x218
 1695 0208 0E       		.uleb128 0xe
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 51


 1696 0209 BD000000 		.4byte	.LASF30
 1697 020d 01       		.byte	0x1
 1698 020e B701     		.2byte	0x1b7
 1699 0210 6B000000 		.4byte	0x6b
 1700 0214 02       		.uleb128 0x2
 1701 0215 91       		.byte	0x91
 1702 0216 77       		.sleb128 -9
 1703 0217 00       		.byte	0
 1704 0218 10       		.uleb128 0x10
 1705 0219 5C010000 		.4byte	.LASF33
 1706 021d 01       		.byte	0x1
 1707 021e EE01     		.2byte	0x1ee
 1708 0220 00000000 		.4byte	.LFB12
 1709 0224 10010000 		.4byte	.LFE12-.LFB12
 1710 0228 01       		.uleb128 0x1
 1711 0229 9C       		.byte	0x9c
 1712 022a 5C020000 		.4byte	0x25c
 1713 022e 0C       		.uleb128 0xc
 1714 022f 78040000 		.4byte	.LASF34
 1715 0233 01       		.byte	0x1
 1716 0234 EE01     		.2byte	0x1ee
 1717 0236 6B000000 		.4byte	0x6b
 1718 023a 02       		.uleb128 0x2
 1719 023b 91       		.byte	0x91
 1720 023c 6F       		.sleb128 -17
 1721 023d 0E       		.uleb128 0xe
 1722 023e 45020000 		.4byte	.LASF35
 1723 0242 01       		.byte	0x1
 1724 0243 F201     		.2byte	0x1f2
 1725 0245 6B000000 		.4byte	0x6b
 1726 0249 02       		.uleb128 0x2
 1727 024a 91       		.byte	0x91
 1728 024b 76       		.sleb128 -10
 1729 024c 0E       		.uleb128 0xe
 1730 024d EA000000 		.4byte	.LASF36
 1731 0251 01       		.byte	0x1
 1732 0252 F301     		.2byte	0x1f3
 1733 0254 6B000000 		.4byte	0x6b
 1734 0258 02       		.uleb128 0x2
 1735 0259 91       		.byte	0x91
 1736 025a 77       		.sleb128 -9
 1737 025b 00       		.byte	0
 1738 025c 0F       		.uleb128 0xf
 1739 025d 78020000 		.4byte	.LASF37
 1740 0261 01       		.byte	0x1
 1741 0262 5A02     		.2byte	0x25a
 1742 0264 6B000000 		.4byte	0x6b
 1743 0268 00000000 		.4byte	.LFB13
 1744 026c 1C000000 		.4byte	.LFE13-.LFB13
 1745 0270 01       		.uleb128 0x1
 1746 0271 9C       		.byte	0x9c
 1747 0272 86020000 		.4byte	0x286
 1748 0276 0E       		.uleb128 0xe
 1749 0277 C6030000 		.4byte	.LASF38
 1750 027b 01       		.byte	0x1
 1751 027c 5C02     		.2byte	0x25c
 1752 027e 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 52


 1753 0282 02       		.uleb128 0x2
 1754 0283 91       		.byte	0x91
 1755 0284 77       		.sleb128 -9
 1756 0285 00       		.byte	0
 1757 0286 0F       		.uleb128 0xf
 1758 0287 24040000 		.4byte	.LASF39
 1759 028b 01       		.byte	0x1
 1760 028c 9A02     		.2byte	0x29a
 1761 028e 6B000000 		.4byte	0x6b
 1762 0292 00000000 		.4byte	.LFB14
 1763 0296 2C000000 		.4byte	.LFE14-.LFB14
 1764 029a 01       		.uleb128 0x1
 1765 029b 9C       		.byte	0x9c
 1766 029c B0020000 		.4byte	0x2b0
 1767 02a0 0E       		.uleb128 0xe
 1768 02a1 A4010000 		.4byte	.LASF40
 1769 02a5 01       		.byte	0x1
 1770 02a6 9C02     		.2byte	0x29c
 1771 02a8 6B000000 		.4byte	0x6b
 1772 02ac 02       		.uleb128 0x2
 1773 02ad 91       		.byte	0x91
 1774 02ae 77       		.sleb128 -9
 1775 02af 00       		.byte	0
 1776 02b0 0D       		.uleb128 0xd
 1777 02b1 50020000 		.4byte	.LASF41
 1778 02b5 01       		.byte	0x1
 1779 02b6 D702     		.2byte	0x2d7
 1780 02b8 6B000000 		.4byte	0x6b
 1781 02bc 00000000 		.4byte	.LFB15
 1782 02c0 6C000000 		.4byte	.LFE15-.LFB15
 1783 02c4 01       		.uleb128 0x1
 1784 02c5 9C       		.byte	0x9c
 1785 02c6 DA020000 		.4byte	0x2da
 1786 02ca 0E       		.uleb128 0xe
 1787 02cb A4010000 		.4byte	.LASF40
 1788 02cf 01       		.byte	0x1
 1789 02d0 D902     		.2byte	0x2d9
 1790 02d2 6B000000 		.4byte	0x6b
 1791 02d6 02       		.uleb128 0x2
 1792 02d7 91       		.byte	0x91
 1793 02d8 77       		.sleb128 -9
 1794 02d9 00       		.byte	0
 1795 02da 0A       		.uleb128 0xa
 1796 02db FA000000 		.4byte	.LASF42
 1797 02df 01       		.byte	0x1
 1798 02e0 2603     		.2byte	0x326
 1799 02e2 00000000 		.4byte	.LFB16
 1800 02e6 28000000 		.4byte	.LFE16-.LFB16
 1801 02ea 01       		.uleb128 0x1
 1802 02eb 9C       		.byte	0x9c
 1803 02ec 10       		.uleb128 0x10
 1804 02ed 55040000 		.4byte	.LASF43
 1805 02f1 01       		.byte	0x1
 1806 02f2 5D03     		.2byte	0x35d
 1807 02f4 00000000 		.4byte	.LFB17
 1808 02f8 7C000000 		.4byte	.LFE17-.LFB17
 1809 02fc 01       		.uleb128 0x1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 53


 1810 02fd 9C       		.byte	0x9c
 1811 02fe 12030000 		.4byte	0x312
 1812 0302 0E       		.uleb128 0xe
 1813 0303 44040000 		.4byte	.LASF22
 1814 0307 01       		.byte	0x1
 1815 0308 5F03     		.2byte	0x35f
 1816 030a 6B000000 		.4byte	0x6b
 1817 030e 02       		.uleb128 0x2
 1818 030f 91       		.byte	0x91
 1819 0310 77       		.sleb128 -9
 1820 0311 00       		.byte	0
 1821 0312 10       		.uleb128 0x10
 1822 0313 11020000 		.4byte	.LASF44
 1823 0317 01       		.byte	0x1
 1824 0318 C203     		.2byte	0x3c2
 1825 031a 00000000 		.4byte	.LFB18
 1826 031e 3A000000 		.4byte	.LFE18-.LFB18
 1827 0322 01       		.uleb128 0x1
 1828 0323 9C       		.byte	0x9c
 1829 0324 56030000 		.4byte	0x356
 1830 0328 0C       		.uleb128 0xc
 1831 0329 0C040000 		.4byte	.LASF45
 1832 032d 01       		.byte	0x1
 1833 032e C203     		.2byte	0x3c2
 1834 0330 56030000 		.4byte	0x356
 1835 0334 02       		.uleb128 0x2
 1836 0335 91       		.byte	0x91
 1837 0336 6C       		.sleb128 -20
 1838 0337 0C       		.uleb128 0xc
 1839 0338 94030000 		.4byte	.LASF46
 1840 033c 01       		.byte	0x1
 1841 033d C203     		.2byte	0x3c2
 1842 033f 6B000000 		.4byte	0x6b
 1843 0343 02       		.uleb128 0x2
 1844 0344 91       		.byte	0x91
 1845 0345 6B       		.sleb128 -21
 1846 0346 0E       		.uleb128 0xe
 1847 0347 CA010000 		.4byte	.LASF47
 1848 034b 01       		.byte	0x1
 1849 034c C503     		.2byte	0x3c5
 1850 034e 6B000000 		.4byte	0x6b
 1851 0352 02       		.uleb128 0x2
 1852 0353 91       		.byte	0x91
 1853 0354 77       		.sleb128 -9
 1854 0355 00       		.byte	0
 1855 0356 11       		.uleb128 0x11
 1856 0357 04       		.byte	0x4
 1857 0358 5C030000 		.4byte	0x35c
 1858 035c 12       		.uleb128 0x12
 1859 035d 6B000000 		.4byte	0x6b
 1860 0361 10       		.uleb128 0x10
 1861 0362 D3010000 		.4byte	.LASF48
 1862 0366 01       		.byte	0x1
 1863 0367 E303     		.2byte	0x3e3
 1864 0369 00000000 		.4byte	.LFB19
 1865 036d 60000000 		.4byte	.LFE19-.LFB19
 1866 0371 01       		.uleb128 0x1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 54


 1867 0372 9C       		.byte	0x9c
 1868 0373 87030000 		.4byte	0x387
 1869 0377 0E       		.uleb128 0xe
 1870 0378 44040000 		.4byte	.LASF22
 1871 037c 01       		.byte	0x1
 1872 037d E503     		.2byte	0x3e5
 1873 037f 6B000000 		.4byte	0x6b
 1874 0383 02       		.uleb128 0x2
 1875 0384 91       		.byte	0x91
 1876 0385 77       		.sleb128 -9
 1877 0386 00       		.byte	0
 1878 0387 13       		.uleb128 0x13
 1879 0388 C5020000 		.4byte	.LASF49
 1880 038c 01       		.byte	0x1
 1881 038d 1104     		.2byte	0x411
 1882 038f 00000000 		.4byte	.LFB20
 1883 0393 10000000 		.4byte	.LFE20-.LFB20
 1884 0397 01       		.uleb128 0x1
 1885 0398 9C       		.byte	0x9c
 1886 0399 13       		.uleb128 0x13
 1887 039a 68040000 		.4byte	.LASF50
 1888 039e 01       		.byte	0x1
 1889 039f 2904     		.2byte	0x429
 1890 03a1 00000000 		.4byte	.LFB21
 1891 03a5 10000000 		.4byte	.LFE21-.LFB21
 1892 03a9 01       		.uleb128 0x1
 1893 03aa 9C       		.byte	0x9c
 1894 03ab 0B       		.uleb128 0xb
 1895 03ac 9B020000 		.4byte	.LASF51
 1896 03b0 01       		.byte	0x1
 1897 03b1 4204     		.2byte	0x442
 1898 03b3 00000000 		.4byte	.LFB22
 1899 03b7 30000000 		.4byte	.LFE22-.LFB22
 1900 03bb 01       		.uleb128 0x1
 1901 03bc 9C       		.byte	0x9c
 1902 03bd D1030000 		.4byte	0x3d1
 1903 03c1 0C       		.uleb128 0xc
 1904 03c2 E2010000 		.4byte	.LASF29
 1905 03c6 01       		.byte	0x1
 1906 03c7 4204     		.2byte	0x442
 1907 03c9 6B000000 		.4byte	0x6b
 1908 03cd 02       		.uleb128 0x2
 1909 03ce 91       		.byte	0x91
 1910 03cf 77       		.sleb128 -9
 1911 03d0 00       		.byte	0
 1912 03d1 0D       		.uleb128 0xd
 1913 03d2 FC030000 		.4byte	.LASF52
 1914 03d6 01       		.byte	0x1
 1915 03d7 6504     		.2byte	0x465
 1916 03d9 6B000000 		.4byte	0x6b
 1917 03dd 00000000 		.4byte	.LFB23
 1918 03e1 70000000 		.4byte	.LFE23-.LFB23
 1919 03e5 01       		.uleb128 0x1
 1920 03e6 9C       		.byte	0x9c
 1921 03e7 FB030000 		.4byte	0x3fb
 1922 03eb 0E       		.uleb128 0xe
 1923 03ec BD000000 		.4byte	.LASF30
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 55


 1924 03f0 01       		.byte	0x1
 1925 03f1 6704     		.2byte	0x467
 1926 03f3 6B000000 		.4byte	0x6b
 1927 03f7 02       		.uleb128 0x2
 1928 03f8 91       		.byte	0x91
 1929 03f9 77       		.sleb128 -9
 1930 03fa 00       		.byte	0
 1931 03fb 14       		.uleb128 0x14
 1932 03fc 65020000 		.4byte	.LASF53
 1933 0400 01       		.byte	0x1
 1934 0401 22       		.byte	0x22
 1935 0402 6B000000 		.4byte	0x6b
 1936 0406 05       		.uleb128 0x5
 1937 0407 03       		.byte	0x3
 1938 0408 00000000 		.4byte	SPIM_initVar
 1939 040c 14       		.uleb128 0x14
 1940 040d B6030000 		.4byte	.LASF54
 1941 0411 01       		.byte	0x1
 1942 0412 24       		.byte	0x24
 1943 0413 A4000000 		.4byte	0xa4
 1944 0417 05       		.uleb128 0x5
 1945 0418 03       		.byte	0x3
 1946 0419 00000000 		.4byte	SPIM_swStatusTx
 1947 041d 14       		.uleb128 0x14
 1948 041e FB010000 		.4byte	.LASF55
 1949 0422 01       		.byte	0x1
 1950 0423 25       		.byte	0x25
 1951 0424 A4000000 		.4byte	0xa4
 1952 0428 05       		.uleb128 0x5
 1953 0429 03       		.byte	0x3
 1954 042a 00000000 		.4byte	SPIM_swStatusRx
 1955 042e 15       		.uleb128 0x15
 1956 042f A4000000 		.4byte	0xa4
 1957 0433 3E040000 		.4byte	0x43e
 1958 0437 16       		.uleb128 0x16
 1959 0438 C1000000 		.4byte	0xc1
 1960 043c 09       		.byte	0x9
 1961 043d 00       		.byte	0
 1962 043e 14       		.uleb128 0x14
 1963 043f BC010000 		.4byte	.LASF56
 1964 0443 01       		.byte	0x1
 1965 0444 15       		.byte	0x15
 1966 0445 4F040000 		.4byte	0x44f
 1967 0449 05       		.uleb128 0x5
 1968 044a 03       		.byte	0x3
 1969 044b 00000000 		.4byte	SPIM_txBuffer
 1970 044f 05       		.uleb128 0x5
 1971 0450 2E040000 		.4byte	0x42e
 1972 0454 14       		.uleb128 0x14
 1973 0455 92010000 		.4byte	.LASF57
 1974 0459 01       		.byte	0x1
 1975 045a 17       		.byte	0x17
 1976 045b A4000000 		.4byte	0xa4
 1977 045f 05       		.uleb128 0x5
 1978 0460 03       		.byte	0x3
 1979 0461 00000000 		.4byte	SPIM_txBufferRead
 1980 0465 14       		.uleb128 0x14
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 56


 1981 0466 6D010000 		.4byte	.LASF58
 1982 046a 01       		.byte	0x1
 1983 046b 18       		.byte	0x18
 1984 046c A4000000 		.4byte	0xa4
 1985 0470 05       		.uleb128 0x5
 1986 0471 03       		.byte	0x3
 1987 0472 00000000 		.4byte	SPIM_txBufferWrite
 1988 0476 14       		.uleb128 0x14
 1989 0477 2B010000 		.4byte	.LASF59
 1990 047b 01       		.byte	0x1
 1991 047c 16       		.byte	0x16
 1992 047d A4000000 		.4byte	0xa4
 1993 0481 05       		.uleb128 0x5
 1994 0482 03       		.byte	0x3
 1995 0483 00000000 		.4byte	SPIM_txBufferFull
 1996 0487 00       		.byte	0
 1997              		.section	.debug_abbrev,"",%progbits
 1998              	.Ldebug_abbrev0:
 1999 0000 01       		.uleb128 0x1
 2000 0001 11       		.uleb128 0x11
 2001 0002 01       		.byte	0x1
 2002 0003 25       		.uleb128 0x25
 2003 0004 0E       		.uleb128 0xe
 2004 0005 13       		.uleb128 0x13
 2005 0006 0B       		.uleb128 0xb
 2006 0007 03       		.uleb128 0x3
 2007 0008 0E       		.uleb128 0xe
 2008 0009 1B       		.uleb128 0x1b
 2009 000a 0E       		.uleb128 0xe
 2010 000b 55       		.uleb128 0x55
 2011 000c 17       		.uleb128 0x17
 2012 000d 11       		.uleb128 0x11
 2013 000e 01       		.uleb128 0x1
 2014 000f 10       		.uleb128 0x10
 2015 0010 17       		.uleb128 0x17
 2016 0011 00       		.byte	0
 2017 0012 00       		.byte	0
 2018 0013 02       		.uleb128 0x2
 2019 0014 24       		.uleb128 0x24
 2020 0015 00       		.byte	0
 2021 0016 0B       		.uleb128 0xb
 2022 0017 0B       		.uleb128 0xb
 2023 0018 3E       		.uleb128 0x3e
 2024 0019 0B       		.uleb128 0xb
 2025 001a 03       		.uleb128 0x3
 2026 001b 0E       		.uleb128 0xe
 2027 001c 00       		.byte	0
 2028 001d 00       		.byte	0
 2029 001e 03       		.uleb128 0x3
 2030 001f 24       		.uleb128 0x24
 2031 0020 00       		.byte	0
 2032 0021 0B       		.uleb128 0xb
 2033 0022 0B       		.uleb128 0xb
 2034 0023 3E       		.uleb128 0x3e
 2035 0024 0B       		.uleb128 0xb
 2036 0025 03       		.uleb128 0x3
 2037 0026 08       		.uleb128 0x8
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 57


 2038 0027 00       		.byte	0
 2039 0028 00       		.byte	0
 2040 0029 04       		.uleb128 0x4
 2041 002a 16       		.uleb128 0x16
 2042 002b 00       		.byte	0
 2043 002c 03       		.uleb128 0x3
 2044 002d 0E       		.uleb128 0xe
 2045 002e 3A       		.uleb128 0x3a
 2046 002f 0B       		.uleb128 0xb
 2047 0030 3B       		.uleb128 0x3b
 2048 0031 05       		.uleb128 0x5
 2049 0032 49       		.uleb128 0x49
 2050 0033 13       		.uleb128 0x13
 2051 0034 00       		.byte	0
 2052 0035 00       		.byte	0
 2053 0036 05       		.uleb128 0x5
 2054 0037 35       		.uleb128 0x35
 2055 0038 00       		.byte	0
 2056 0039 49       		.uleb128 0x49
 2057 003a 13       		.uleb128 0x13
 2058 003b 00       		.byte	0
 2059 003c 00       		.byte	0
 2060 003d 06       		.uleb128 0x6
 2061 003e 2E       		.uleb128 0x2e
 2062 003f 00       		.byte	0
 2063 0040 3F       		.uleb128 0x3f
 2064 0041 19       		.uleb128 0x19
 2065 0042 03       		.uleb128 0x3
 2066 0043 0E       		.uleb128 0xe
 2067 0044 3A       		.uleb128 0x3a
 2068 0045 0B       		.uleb128 0xb
 2069 0046 3B       		.uleb128 0x3b
 2070 0047 0B       		.uleb128 0xb
 2071 0048 27       		.uleb128 0x27
 2072 0049 19       		.uleb128 0x19
 2073 004a 11       		.uleb128 0x11
 2074 004b 01       		.uleb128 0x1
 2075 004c 12       		.uleb128 0x12
 2076 004d 06       		.uleb128 0x6
 2077 004e 40       		.uleb128 0x40
 2078 004f 18       		.uleb128 0x18
 2079 0050 9642     		.uleb128 0x2116
 2080 0052 19       		.uleb128 0x19
 2081 0053 00       		.byte	0
 2082 0054 00       		.byte	0
 2083 0055 07       		.uleb128 0x7
 2084 0056 2E       		.uleb128 0x2e
 2085 0057 01       		.byte	0x1
 2086 0058 3F       		.uleb128 0x3f
 2087 0059 19       		.uleb128 0x19
 2088 005a 03       		.uleb128 0x3
 2089 005b 0E       		.uleb128 0xe
 2090 005c 3A       		.uleb128 0x3a
 2091 005d 0B       		.uleb128 0xb
 2092 005e 3B       		.uleb128 0x3b
 2093 005f 0B       		.uleb128 0xb
 2094 0060 27       		.uleb128 0x27
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 58


 2095 0061 19       		.uleb128 0x19
 2096 0062 11       		.uleb128 0x11
 2097 0063 01       		.uleb128 0x1
 2098 0064 12       		.uleb128 0x12
 2099 0065 06       		.uleb128 0x6
 2100 0066 40       		.uleb128 0x40
 2101 0067 18       		.uleb128 0x18
 2102 0068 9642     		.uleb128 0x2116
 2103 006a 19       		.uleb128 0x19
 2104 006b 01       		.uleb128 0x1
 2105 006c 13       		.uleb128 0x13
 2106 006d 00       		.byte	0
 2107 006e 00       		.byte	0
 2108 006f 08       		.uleb128 0x8
 2109 0070 34       		.uleb128 0x34
 2110 0071 00       		.byte	0
 2111 0072 03       		.uleb128 0x3
 2112 0073 0E       		.uleb128 0xe
 2113 0074 3A       		.uleb128 0x3a
 2114 0075 0B       		.uleb128 0xb
 2115 0076 3B       		.uleb128 0x3b
 2116 0077 0B       		.uleb128 0xb
 2117 0078 49       		.uleb128 0x49
 2118 0079 13       		.uleb128 0x13
 2119 007a 02       		.uleb128 0x2
 2120 007b 18       		.uleb128 0x18
 2121 007c 00       		.byte	0
 2122 007d 00       		.byte	0
 2123 007e 09       		.uleb128 0x9
 2124 007f 2E       		.uleb128 0x2e
 2125 0080 00       		.byte	0
 2126 0081 3F       		.uleb128 0x3f
 2127 0082 19       		.uleb128 0x19
 2128 0083 03       		.uleb128 0x3
 2129 0084 0E       		.uleb128 0xe
 2130 0085 3A       		.uleb128 0x3a
 2131 0086 0B       		.uleb128 0xb
 2132 0087 3B       		.uleb128 0x3b
 2133 0088 0B       		.uleb128 0xb
 2134 0089 27       		.uleb128 0x27
 2135 008a 19       		.uleb128 0x19
 2136 008b 11       		.uleb128 0x11
 2137 008c 01       		.uleb128 0x1
 2138 008d 12       		.uleb128 0x12
 2139 008e 06       		.uleb128 0x6
 2140 008f 40       		.uleb128 0x40
 2141 0090 18       		.uleb128 0x18
 2142 0091 9742     		.uleb128 0x2117
 2143 0093 19       		.uleb128 0x19
 2144 0094 00       		.byte	0
 2145 0095 00       		.byte	0
 2146 0096 0A       		.uleb128 0xa
 2147 0097 2E       		.uleb128 0x2e
 2148 0098 00       		.byte	0
 2149 0099 3F       		.uleb128 0x3f
 2150 009a 19       		.uleb128 0x19
 2151 009b 03       		.uleb128 0x3
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 59


 2152 009c 0E       		.uleb128 0xe
 2153 009d 3A       		.uleb128 0x3a
 2154 009e 0B       		.uleb128 0xb
 2155 009f 3B       		.uleb128 0x3b
 2156 00a0 05       		.uleb128 0x5
 2157 00a1 27       		.uleb128 0x27
 2158 00a2 19       		.uleb128 0x19
 2159 00a3 11       		.uleb128 0x11
 2160 00a4 01       		.uleb128 0x1
 2161 00a5 12       		.uleb128 0x12
 2162 00a6 06       		.uleb128 0x6
 2163 00a7 40       		.uleb128 0x40
 2164 00a8 18       		.uleb128 0x18
 2165 00a9 9742     		.uleb128 0x2117
 2166 00ab 19       		.uleb128 0x19
 2167 00ac 00       		.byte	0
 2168 00ad 00       		.byte	0
 2169 00ae 0B       		.uleb128 0xb
 2170 00af 2E       		.uleb128 0x2e
 2171 00b0 01       		.byte	0x1
 2172 00b1 3F       		.uleb128 0x3f
 2173 00b2 19       		.uleb128 0x19
 2174 00b3 03       		.uleb128 0x3
 2175 00b4 0E       		.uleb128 0xe
 2176 00b5 3A       		.uleb128 0x3a
 2177 00b6 0B       		.uleb128 0xb
 2178 00b7 3B       		.uleb128 0x3b
 2179 00b8 05       		.uleb128 0x5
 2180 00b9 27       		.uleb128 0x27
 2181 00ba 19       		.uleb128 0x19
 2182 00bb 11       		.uleb128 0x11
 2183 00bc 01       		.uleb128 0x1
 2184 00bd 12       		.uleb128 0x12
 2185 00be 06       		.uleb128 0x6
 2186 00bf 40       		.uleb128 0x40
 2187 00c0 18       		.uleb128 0x18
 2188 00c1 9742     		.uleb128 0x2117
 2189 00c3 19       		.uleb128 0x19
 2190 00c4 01       		.uleb128 0x1
 2191 00c5 13       		.uleb128 0x13
 2192 00c6 00       		.byte	0
 2193 00c7 00       		.byte	0
 2194 00c8 0C       		.uleb128 0xc
 2195 00c9 05       		.uleb128 0x5
 2196 00ca 00       		.byte	0
 2197 00cb 03       		.uleb128 0x3
 2198 00cc 0E       		.uleb128 0xe
 2199 00cd 3A       		.uleb128 0x3a
 2200 00ce 0B       		.uleb128 0xb
 2201 00cf 3B       		.uleb128 0x3b
 2202 00d0 05       		.uleb128 0x5
 2203 00d1 49       		.uleb128 0x49
 2204 00d2 13       		.uleb128 0x13
 2205 00d3 02       		.uleb128 0x2
 2206 00d4 18       		.uleb128 0x18
 2207 00d5 00       		.byte	0
 2208 00d6 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 60


 2209 00d7 0D       		.uleb128 0xd
 2210 00d8 2E       		.uleb128 0x2e
 2211 00d9 01       		.byte	0x1
 2212 00da 3F       		.uleb128 0x3f
 2213 00db 19       		.uleb128 0x19
 2214 00dc 03       		.uleb128 0x3
 2215 00dd 0E       		.uleb128 0xe
 2216 00de 3A       		.uleb128 0x3a
 2217 00df 0B       		.uleb128 0xb
 2218 00e0 3B       		.uleb128 0x3b
 2219 00e1 05       		.uleb128 0x5
 2220 00e2 27       		.uleb128 0x27
 2221 00e3 19       		.uleb128 0x19
 2222 00e4 49       		.uleb128 0x49
 2223 00e5 13       		.uleb128 0x13
 2224 00e6 11       		.uleb128 0x11
 2225 00e7 01       		.uleb128 0x1
 2226 00e8 12       		.uleb128 0x12
 2227 00e9 06       		.uleb128 0x6
 2228 00ea 40       		.uleb128 0x40
 2229 00eb 18       		.uleb128 0x18
 2230 00ec 9642     		.uleb128 0x2116
 2231 00ee 19       		.uleb128 0x19
 2232 00ef 01       		.uleb128 0x1
 2233 00f0 13       		.uleb128 0x13
 2234 00f1 00       		.byte	0
 2235 00f2 00       		.byte	0
 2236 00f3 0E       		.uleb128 0xe
 2237 00f4 34       		.uleb128 0x34
 2238 00f5 00       		.byte	0
 2239 00f6 03       		.uleb128 0x3
 2240 00f7 0E       		.uleb128 0xe
 2241 00f8 3A       		.uleb128 0x3a
 2242 00f9 0B       		.uleb128 0xb
 2243 00fa 3B       		.uleb128 0x3b
 2244 00fb 05       		.uleb128 0x5
 2245 00fc 49       		.uleb128 0x49
 2246 00fd 13       		.uleb128 0x13
 2247 00fe 02       		.uleb128 0x2
 2248 00ff 18       		.uleb128 0x18
 2249 0100 00       		.byte	0
 2250 0101 00       		.byte	0
 2251 0102 0F       		.uleb128 0xf
 2252 0103 2E       		.uleb128 0x2e
 2253 0104 01       		.byte	0x1
 2254 0105 3F       		.uleb128 0x3f
 2255 0106 19       		.uleb128 0x19
 2256 0107 03       		.uleb128 0x3
 2257 0108 0E       		.uleb128 0xe
 2258 0109 3A       		.uleb128 0x3a
 2259 010a 0B       		.uleb128 0xb
 2260 010b 3B       		.uleb128 0x3b
 2261 010c 05       		.uleb128 0x5
 2262 010d 27       		.uleb128 0x27
 2263 010e 19       		.uleb128 0x19
 2264 010f 49       		.uleb128 0x49
 2265 0110 13       		.uleb128 0x13
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 61


 2266 0111 11       		.uleb128 0x11
 2267 0112 01       		.uleb128 0x1
 2268 0113 12       		.uleb128 0x12
 2269 0114 06       		.uleb128 0x6
 2270 0115 40       		.uleb128 0x40
 2271 0116 18       		.uleb128 0x18
 2272 0117 9742     		.uleb128 0x2117
 2273 0119 19       		.uleb128 0x19
 2274 011a 01       		.uleb128 0x1
 2275 011b 13       		.uleb128 0x13
 2276 011c 00       		.byte	0
 2277 011d 00       		.byte	0
 2278 011e 10       		.uleb128 0x10
 2279 011f 2E       		.uleb128 0x2e
 2280 0120 01       		.byte	0x1
 2281 0121 3F       		.uleb128 0x3f
 2282 0122 19       		.uleb128 0x19
 2283 0123 03       		.uleb128 0x3
 2284 0124 0E       		.uleb128 0xe
 2285 0125 3A       		.uleb128 0x3a
 2286 0126 0B       		.uleb128 0xb
 2287 0127 3B       		.uleb128 0x3b
 2288 0128 05       		.uleb128 0x5
 2289 0129 27       		.uleb128 0x27
 2290 012a 19       		.uleb128 0x19
 2291 012b 11       		.uleb128 0x11
 2292 012c 01       		.uleb128 0x1
 2293 012d 12       		.uleb128 0x12
 2294 012e 06       		.uleb128 0x6
 2295 012f 40       		.uleb128 0x40
 2296 0130 18       		.uleb128 0x18
 2297 0131 9642     		.uleb128 0x2116
 2298 0133 19       		.uleb128 0x19
 2299 0134 01       		.uleb128 0x1
 2300 0135 13       		.uleb128 0x13
 2301 0136 00       		.byte	0
 2302 0137 00       		.byte	0
 2303 0138 11       		.uleb128 0x11
 2304 0139 0F       		.uleb128 0xf
 2305 013a 00       		.byte	0
 2306 013b 0B       		.uleb128 0xb
 2307 013c 0B       		.uleb128 0xb
 2308 013d 49       		.uleb128 0x49
 2309 013e 13       		.uleb128 0x13
 2310 013f 00       		.byte	0
 2311 0140 00       		.byte	0
 2312 0141 12       		.uleb128 0x12
 2313 0142 26       		.uleb128 0x26
 2314 0143 00       		.byte	0
 2315 0144 49       		.uleb128 0x49
 2316 0145 13       		.uleb128 0x13
 2317 0146 00       		.byte	0
 2318 0147 00       		.byte	0
 2319 0148 13       		.uleb128 0x13
 2320 0149 2E       		.uleb128 0x2e
 2321 014a 00       		.byte	0
 2322 014b 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 62


 2323 014c 19       		.uleb128 0x19
 2324 014d 03       		.uleb128 0x3
 2325 014e 0E       		.uleb128 0xe
 2326 014f 3A       		.uleb128 0x3a
 2327 0150 0B       		.uleb128 0xb
 2328 0151 3B       		.uleb128 0x3b
 2329 0152 05       		.uleb128 0x5
 2330 0153 27       		.uleb128 0x27
 2331 0154 19       		.uleb128 0x19
 2332 0155 11       		.uleb128 0x11
 2333 0156 01       		.uleb128 0x1
 2334 0157 12       		.uleb128 0x12
 2335 0158 06       		.uleb128 0x6
 2336 0159 40       		.uleb128 0x40
 2337 015a 18       		.uleb128 0x18
 2338 015b 9642     		.uleb128 0x2116
 2339 015d 19       		.uleb128 0x19
 2340 015e 00       		.byte	0
 2341 015f 00       		.byte	0
 2342 0160 14       		.uleb128 0x14
 2343 0161 34       		.uleb128 0x34
 2344 0162 00       		.byte	0
 2345 0163 03       		.uleb128 0x3
 2346 0164 0E       		.uleb128 0xe
 2347 0165 3A       		.uleb128 0x3a
 2348 0166 0B       		.uleb128 0xb
 2349 0167 3B       		.uleb128 0x3b
 2350 0168 0B       		.uleb128 0xb
 2351 0169 49       		.uleb128 0x49
 2352 016a 13       		.uleb128 0x13
 2353 016b 3F       		.uleb128 0x3f
 2354 016c 19       		.uleb128 0x19
 2355 016d 02       		.uleb128 0x2
 2356 016e 18       		.uleb128 0x18
 2357 016f 00       		.byte	0
 2358 0170 00       		.byte	0
 2359 0171 15       		.uleb128 0x15
 2360 0172 01       		.uleb128 0x1
 2361 0173 01       		.byte	0x1
 2362 0174 49       		.uleb128 0x49
 2363 0175 13       		.uleb128 0x13
 2364 0176 01       		.uleb128 0x1
 2365 0177 13       		.uleb128 0x13
 2366 0178 00       		.byte	0
 2367 0179 00       		.byte	0
 2368 017a 16       		.uleb128 0x16
 2369 017b 21       		.uleb128 0x21
 2370 017c 00       		.byte	0
 2371 017d 49       		.uleb128 0x49
 2372 017e 13       		.uleb128 0x13
 2373 017f 2F       		.uleb128 0x2f
 2374 0180 0B       		.uleb128 0xb
 2375 0181 00       		.byte	0
 2376 0182 00       		.byte	0
 2377 0183 00       		.byte	0
 2378              		.section	.debug_aranges,"",%progbits
 2379 0000 D4000000 		.4byte	0xd4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 63


 2380 0004 0200     		.2byte	0x2
 2381 0006 00000000 		.4byte	.Ldebug_info0
 2382 000a 04       		.byte	0x4
 2383 000b 00       		.byte	0
 2384 000c 0000     		.2byte	0
 2385 000e 0000     		.2byte	0
 2386 0010 00000000 		.4byte	.LFB0
 2387 0014 70000000 		.4byte	.LFE0-.LFB0
 2388 0018 00000000 		.4byte	.LFB1
 2389 001c 68000000 		.4byte	.LFE1-.LFB1
 2390 0020 00000000 		.4byte	.LFB2
 2391 0024 24000000 		.4byte	.LFE2-.LFB2
 2392 0028 00000000 		.4byte	.LFB3
 2393 002c 54000000 		.4byte	.LFE3-.LFB3
 2394 0030 00000000 		.4byte	.LFB4
 2395 0034 18000000 		.4byte	.LFE4-.LFB4
 2396 0038 00000000 		.4byte	.LFB5
 2397 003c 0C000000 		.4byte	.LFE5-.LFB5
 2398 0040 00000000 		.4byte	.LFB6
 2399 0044 18000000 		.4byte	.LFE6-.LFB6
 2400 0048 00000000 		.4byte	.LFB7
 2401 004c 0C000000 		.4byte	.LFE7-.LFB7
 2402 0050 00000000 		.4byte	.LFB8
 2403 0054 20000000 		.4byte	.LFE8-.LFB8
 2404 0058 00000000 		.4byte	.LFB9
 2405 005c 20000000 		.4byte	.LFE9-.LFB9
 2406 0060 00000000 		.4byte	.LFB10
 2407 0064 3C000000 		.4byte	.LFE10-.LFB10
 2408 0068 00000000 		.4byte	.LFB11
 2409 006c 1C000000 		.4byte	.LFE11-.LFB11
 2410 0070 00000000 		.4byte	.LFB12
 2411 0074 10010000 		.4byte	.LFE12-.LFB12
 2412 0078 00000000 		.4byte	.LFB13
 2413 007c 1C000000 		.4byte	.LFE13-.LFB13
 2414 0080 00000000 		.4byte	.LFB14
 2415 0084 2C000000 		.4byte	.LFE14-.LFB14
 2416 0088 00000000 		.4byte	.LFB15
 2417 008c 6C000000 		.4byte	.LFE15-.LFB15
 2418 0090 00000000 		.4byte	.LFB16
 2419 0094 28000000 		.4byte	.LFE16-.LFB16
 2420 0098 00000000 		.4byte	.LFB17
 2421 009c 7C000000 		.4byte	.LFE17-.LFB17
 2422 00a0 00000000 		.4byte	.LFB18
 2423 00a4 3A000000 		.4byte	.LFE18-.LFB18
 2424 00a8 00000000 		.4byte	.LFB19
 2425 00ac 60000000 		.4byte	.LFE19-.LFB19
 2426 00b0 00000000 		.4byte	.LFB20
 2427 00b4 10000000 		.4byte	.LFE20-.LFB20
 2428 00b8 00000000 		.4byte	.LFB21
 2429 00bc 10000000 		.4byte	.LFE21-.LFB21
 2430 00c0 00000000 		.4byte	.LFB22
 2431 00c4 30000000 		.4byte	.LFE22-.LFB22
 2432 00c8 00000000 		.4byte	.LFB23
 2433 00cc 70000000 		.4byte	.LFE23-.LFB23
 2434 00d0 00000000 		.4byte	0
 2435 00d4 00000000 		.4byte	0
 2436              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 64


 2437              	.Ldebug_ranges0:
 2438 0000 00000000 		.4byte	.LFB0
 2439 0004 70000000 		.4byte	.LFE0
 2440 0008 00000000 		.4byte	.LFB1
 2441 000c 68000000 		.4byte	.LFE1
 2442 0010 00000000 		.4byte	.LFB2
 2443 0014 24000000 		.4byte	.LFE2
 2444 0018 00000000 		.4byte	.LFB3
 2445 001c 54000000 		.4byte	.LFE3
 2446 0020 00000000 		.4byte	.LFB4
 2447 0024 18000000 		.4byte	.LFE4
 2448 0028 00000000 		.4byte	.LFB5
 2449 002c 0C000000 		.4byte	.LFE5
 2450 0030 00000000 		.4byte	.LFB6
 2451 0034 18000000 		.4byte	.LFE6
 2452 0038 00000000 		.4byte	.LFB7
 2453 003c 0C000000 		.4byte	.LFE7
 2454 0040 00000000 		.4byte	.LFB8
 2455 0044 20000000 		.4byte	.LFE8
 2456 0048 00000000 		.4byte	.LFB9
 2457 004c 20000000 		.4byte	.LFE9
 2458 0050 00000000 		.4byte	.LFB10
 2459 0054 3C000000 		.4byte	.LFE10
 2460 0058 00000000 		.4byte	.LFB11
 2461 005c 1C000000 		.4byte	.LFE11
 2462 0060 00000000 		.4byte	.LFB12
 2463 0064 10010000 		.4byte	.LFE12
 2464 0068 00000000 		.4byte	.LFB13
 2465 006c 1C000000 		.4byte	.LFE13
 2466 0070 00000000 		.4byte	.LFB14
 2467 0074 2C000000 		.4byte	.LFE14
 2468 0078 00000000 		.4byte	.LFB15
 2469 007c 6C000000 		.4byte	.LFE15
 2470 0080 00000000 		.4byte	.LFB16
 2471 0084 28000000 		.4byte	.LFE16
 2472 0088 00000000 		.4byte	.LFB17
 2473 008c 7C000000 		.4byte	.LFE17
 2474 0090 00000000 		.4byte	.LFB18
 2475 0094 3A000000 		.4byte	.LFE18
 2476 0098 00000000 		.4byte	.LFB19
 2477 009c 60000000 		.4byte	.LFE19
 2478 00a0 00000000 		.4byte	.LFB20
 2479 00a4 10000000 		.4byte	.LFE20
 2480 00a8 00000000 		.4byte	.LFB21
 2481 00ac 10000000 		.4byte	.LFE21
 2482 00b0 00000000 		.4byte	.LFB22
 2483 00b4 30000000 		.4byte	.LFE22
 2484 00b8 00000000 		.4byte	.LFB23
 2485 00bc 70000000 		.4byte	.LFE23
 2486 00c0 00000000 		.4byte	0
 2487 00c4 00000000 		.4byte	0
 2488              		.section	.debug_line,"",%progbits
 2489              	.Ldebug_line0:
 2490 0000 88020000 		.section	.debug_str,"MS",%progbits,1
 2490      02004100 
 2490      00000201 
 2490      FB0E0D00 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 65


 2490      01010101 
 2491              	.LASF27:
 2492 0000 5350494D 		.ascii	"SPIM_SetTxInterruptMode\000"
 2492      5F536574 
 2492      5478496E 
 2492      74657272 
 2492      7570744D 
 2493              	.LASF60:
 2494 0018 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2494      43313120 
 2494      352E342E 
 2494      31203230 
 2494      31363036 
 2495 004b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2495      20726576 
 2495      6973696F 
 2495      6E203233 
 2495      37373135 
 2496 007e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2496      66756E63 
 2496      74696F6E 
 2496      2D736563 
 2496      74696F6E 
 2497              	.LASF7:
 2498 00a6 6C6F6E67 		.ascii	"long long unsigned int\000"
 2498      206C6F6E 
 2498      6720756E 
 2498      7369676E 
 2498      65642069 
 2499              	.LASF30:
 2500 00bd 746D7053 		.ascii	"tmpStatus\000"
 2500      74617475 
 2500      7300
 2501              	.LASF6:
 2502 00c7 6C6F6E67 		.ascii	"long long int\000"
 2502      206C6F6E 
 2502      6720696E 
 2502      7400
 2503              	.LASF0:
 2504 00d5 7369676E 		.ascii	"signed char\000"
 2504      65642063 
 2504      68617200 
 2505              	.LASF4:
 2506 00e1 6C6F6E67 		.ascii	"long int\000"
 2506      20696E74 
 2506      00
 2507              	.LASF36:
 2508 00ea 746D7054 		.ascii	"tmpTxBufferRead\000"
 2508      78427566 
 2508      66657252 
 2508      65616400 
 2509              	.LASF42:
 2510 00fa 5350494D 		.ascii	"SPIM_ClearRxBuffer\000"
 2510      5F436C65 
 2510      61725278 
 2510      42756666 
 2510      657200
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 66


 2511              	.LASF9:
 2512 010d 75696E74 		.ascii	"uint8\000"
 2512      3800
 2513              	.LASF12:
 2514 0113 646F7562 		.ascii	"double\000"
 2514      6C6500
 2515              	.LASF21:
 2516 011a 5350494D 		.ascii	"SPIM_Stop\000"
 2516      5F53746F 
 2516      7000
 2517              	.LASF10:
 2518 0124 75696E74 		.ascii	"uint32\000"
 2518      333200
 2519              	.LASF59:
 2520 012b 5350494D 		.ascii	"SPIM_txBufferFull\000"
 2520      5F747842 
 2520      75666665 
 2520      7246756C 
 2520      6C00
 2521              	.LASF32:
 2522 013d 5350494D 		.ascii	"SPIM_ReadRxStatus\000"
 2522      5F526561 
 2522      64527853 
 2522      74617475 
 2522      7300
 2523              	.LASF8:
 2524 014f 756E7369 		.ascii	"unsigned int\000"
 2524      676E6564 
 2524      20696E74 
 2524      00
 2525              	.LASF33:
 2526 015c 5350494D 		.ascii	"SPIM_WriteTxData\000"
 2526      5F577269 
 2526      74655478 
 2526      44617461 
 2526      00
 2527              	.LASF58:
 2528 016d 5350494D 		.ascii	"SPIM_txBufferWrite\000"
 2528      5F747842 
 2528      75666665 
 2528      72577269 
 2528      746500
 2529              	.LASF5:
 2530 0180 6C6F6E67 		.ascii	"long unsigned int\000"
 2530      20756E73 
 2530      69676E65 
 2530      6420696E 
 2530      7400
 2531              	.LASF57:
 2532 0192 5350494D 		.ascii	"SPIM_txBufferRead\000"
 2532      5F747842 
 2532      75666665 
 2532      72526561 
 2532      6400
 2533              	.LASF40:
 2534 01a4 73697A65 		.ascii	"size\000"
 2534      00
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 67


 2535              	.LASF3:
 2536 01a9 73686F72 		.ascii	"short unsigned int\000"
 2536      7420756E 
 2536      7369676E 
 2536      65642069 
 2536      6E7400
 2537              	.LASF56:
 2538 01bc 5350494D 		.ascii	"SPIM_txBuffer\000"
 2538      5F747842 
 2538      75666665 
 2538      7200
 2539              	.LASF47:
 2540 01ca 62756649 		.ascii	"bufIndex\000"
 2540      6E646578 
 2540      00
 2541              	.LASF48:
 2542 01d3 5350494D 		.ascii	"SPIM_ClearFIFO\000"
 2542      5F436C65 
 2542      61724649 
 2542      464F00
 2543              	.LASF29:
 2544 01e2 696E7453 		.ascii	"intSrc\000"
 2544      726300
 2545              	.LASF26:
 2546 01e9 5350494D 		.ascii	"SPIM_DisableRxInt\000"
 2546      5F446973 
 2546      61626C65 
 2546      5278496E 
 2546      7400
 2547              	.LASF55:
 2548 01fb 5350494D 		.ascii	"SPIM_swStatusRx\000"
 2548      5F737753 
 2548      74617475 
 2548      73527800 
 2549              	.LASF15:
 2550 020b 72656733 		.ascii	"reg32\000"
 2550      3200
 2551              	.LASF44:
 2552 0211 5350494D 		.ascii	"SPIM_PutArray\000"
 2552      5F507574 
 2552      41727261 
 2552      7900
 2553              	.LASF17:
 2554 021f 73697A65 		.ascii	"sizetype\000"
 2554      74797065 
 2554      00
 2555              	.LASF16:
 2556 0228 6C6F6E67 		.ascii	"long double\000"
 2556      20646F75 
 2556      626C6500 
 2557              	.LASF24:
 2558 0234 5350494D 		.ascii	"SPIM_EnableRxInt\000"
 2558      5F456E61 
 2558      626C6552 
 2558      78496E74 
 2558      00
 2559              	.LASF35:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 68


 2560 0245 74656D70 		.ascii	"tempStatus\000"
 2560      53746174 
 2560      757300
 2561              	.LASF41:
 2562 0250 5350494D 		.ascii	"SPIM_GetTxBufferSize\000"
 2562      5F476574 
 2562      54784275 
 2562      66666572 
 2562      53697A65 
 2563              	.LASF53:
 2564 0265 5350494D 		.ascii	"SPIM_initVar\000"
 2564      5F696E69 
 2564      74566172 
 2564      00
 2565              	.LASF11:
 2566 0272 666C6F61 		.ascii	"float\000"
 2566      7400
 2567              	.LASF37:
 2568 0278 5350494D 		.ascii	"SPIM_ReadRxData\000"
 2568      5F526561 
 2568      64527844 
 2568      61746100 
 2569              	.LASF14:
 2570 0288 72656738 		.ascii	"reg8\000"
 2570      00
 2571              	.LASF1:
 2572 028d 756E7369 		.ascii	"unsigned char\000"
 2572      676E6564 
 2572      20636861 
 2572      7200
 2573              	.LASF51:
 2574 029b 5350494D 		.ascii	"SPIM_SetInterruptMode\000"
 2574      5F536574 
 2574      496E7465 
 2574      72727570 
 2574      744D6F64 
 2575              	.LASF18:
 2576 02b1 5350494D 		.ascii	"SPIM_Init\000"
 2576      5F496E69 
 2576      7400
 2577              	.LASF2:
 2578 02bb 73686F72 		.ascii	"short int\000"
 2578      7420696E 
 2578      7400
 2579              	.LASF49:
 2580 02c5 5350494D 		.ascii	"SPIM_EnableInt\000"
 2580      5F456E61 
 2580      626C6549 
 2580      6E7400
 2581              	.LASF31:
 2582 02d4 5350494D 		.ascii	"SPIM_ReadTxStatus\000"
 2582      5F526561 
 2582      64547853 
 2582      74617475 
 2582      7300
 2583              	.LASF62:
 2584 02e6 433A5C55 		.ascii	"C:\\Users\\Admin\\Dropbox\\My PC (DESKTOP-JTCBHVV)\\"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 69


 2584      73657273 
 2584      5C41646D 
 2584      696E5C44 
 2584      726F7062 
 2585 0315 446F776E 		.ascii	"Downloads\\fw comp\\firmware_binaries_Firmware for "
 2585      6C6F6164 
 2585      735C6677 
 2585      20636F6D 
 2585      705C6669 
 2586 0346 53686F6E 		.ascii	"ShonitV2.2 PCB AI100 N_seriesV2.4_devlopment\\Desig"
 2586      69745632 
 2586      2E322050 
 2586      43422041 
 2586      49313030 
 2587 0378 6E30312E 		.ascii	"n01.cydsn\000"
 2587      63796473 
 2587      6E00
 2588              	.LASF25:
 2589 0382 5350494D 		.ascii	"SPIM_DisableTxInt\000"
 2589      5F446973 
 2589      61626C65 
 2589      5478496E 
 2589      7400
 2590              	.LASF46:
 2591 0394 62797465 		.ascii	"byteCount\000"
 2591      436F756E 
 2591      7400
 2592              	.LASF28:
 2593 039e 5350494D 		.ascii	"SPIM_SetRxInterruptMode\000"
 2593      5F536574 
 2593      5278496E 
 2593      74657272 
 2593      7570744D 
 2594              	.LASF54:
 2595 03b6 5350494D 		.ascii	"SPIM_swStatusTx\000"
 2595      5F737753 
 2595      74617475 
 2595      73547800 
 2596              	.LASF38:
 2597 03c6 72784461 		.ascii	"rxData\000"
 2597      746100
 2598              	.LASF61:
 2599 03cd 47656E65 		.ascii	"Generated_Source\\PSoC5\\SPIM.c\000"
 2599      72617465 
 2599      645F536F 
 2599      75726365 
 2599      5C50536F 
 2600              	.LASF13:
 2601 03eb 63686172 		.ascii	"char\000"
 2601      00
 2602              	.LASF20:
 2603 03f0 5350494D 		.ascii	"SPIM_Enable\000"
 2603      5F456E61 
 2603      626C6500 
 2604              	.LASF52:
 2605 03fc 5350494D 		.ascii	"SPIM_ReadStatus\000"
 2605      5F526561 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccTllslz.s 			page 70


 2605      64537461 
 2605      74757300 
 2606              	.LASF45:
 2607 040c 62756666 		.ascii	"buffer\000"
 2607      657200
 2608              	.LASF23:
 2609 0413 5350494D 		.ascii	"SPIM_EnableTxInt\000"
 2609      5F456E61 
 2609      626C6554 
 2609      78496E74 
 2609      00
 2610              	.LASF39:
 2611 0424 5350494D 		.ascii	"SPIM_GetRxBufferSize\000"
 2611      5F476574 
 2611      52784275 
 2611      66666572 
 2611      53697A65 
 2612              	.LASF19:
 2613 0439 5350494D 		.ascii	"SPIM_Start\000"
 2613      5F537461 
 2613      727400
 2614              	.LASF22:
 2615 0444 656E6162 		.ascii	"enableInterrupts\000"
 2615      6C65496E 
 2615      74657272 
 2615      75707473 
 2615      00
 2616              	.LASF43:
 2617 0455 5350494D 		.ascii	"SPIM_ClearTxBuffer\000"
 2617      5F436C65 
 2617      61725478 
 2617      42756666 
 2617      657200
 2618              	.LASF50:
 2619 0468 5350494D 		.ascii	"SPIM_DisableInt\000"
 2619      5F446973 
 2619      61626C65 
 2619      496E7400 
 2620              	.LASF34:
 2621 0478 74784461 		.ascii	"txData\000"
 2621      746100
 2622              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
