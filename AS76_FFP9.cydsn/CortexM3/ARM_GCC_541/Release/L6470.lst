ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"L6470.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	Is_Slide_On_Gripper,1,1
  20              		.comm	count,2,2
  21              		.comm	USB_received,64,4
  22              		.comm	USB_transmit,58,4
  23              		.comm	InterStage_QuadPosition,4,4
  24              		.comm	Inter_Stage_QuadPosition,4,4
  25              		.global	Time_Out_Error
  26              		.data
  27              		.type	Time_Out_Error, %object
  28              		.size	Time_Out_Error, 1
  29              	Time_Out_Error:
  30 0000 01       		.byte	1
  31              		.comm	command,4,4
  32              		.global	Error
  33              		.bss
  34              		.align	2
  35              		.type	Error, %object
  36              		.size	Error, 4
  37              	Error:
  38 0000 00000000 		.space	4
  39              		.global	X_last_position
  40              		.align	2
  41              		.type	X_last_position, %object
  42              		.size	X_last_position, 4
  43              	X_last_position:
  44 0004 00000000 		.space	4
  45              		.global	Y_last_position
  46              		.align	2
  47              		.type	Y_last_position, %object
  48              		.size	Y_last_position, 4
  49              	Y_last_position:
  50 0008 00000000 		.space	4
  51              		.global	Z_last_position
  52              		.align	2
  53              		.type	Z_last_position, %object
  54              		.size	Z_last_position, 4
  55              	Z_last_position:
  56 000c 00000000 		.space	4
  57              		.global	Position_X_Requested
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 2


  58              		.align	2
  59              		.type	Position_X_Requested, %object
  60              		.size	Position_X_Requested, 4
  61              	Position_X_Requested:
  62 0010 00000000 		.space	4
  63              		.global	Position_Y_Requested
  64              		.align	2
  65              		.type	Position_Y_Requested, %object
  66              		.size	Position_Y_Requested, 4
  67              	Position_Y_Requested:
  68 0014 00000000 		.space	4
  69              		.global	Position_Z_Requested
  70              		.align	2
  71              		.type	Position_Z_Requested, %object
  72              		.size	Position_Z_Requested, 4
  73              	Position_Z_Requested:
  74 0018 00000000 		.space	4
  75              		.global	Position_X_Move
  76              		.align	2
  77              		.type	Position_X_Move, %object
  78              		.size	Position_X_Move, 4
  79              	Position_X_Move:
  80 001c 00000000 		.space	4
  81              		.global	Position_Y_Move
  82              		.align	2
  83              		.type	Position_Y_Move, %object
  84              		.size	Position_Y_Move, 4
  85              	Position_Y_Move:
  86 0020 00000000 		.space	4
  87              		.global	Position_Z_Move
  88              		.align	2
  89              		.type	Position_Z_Move, %object
  90              		.size	Position_Z_Move, 4
  91              	Position_Z_Move:
  92 0024 00000000 		.space	4
  93              		.global	X_QuadPosition
  94              		.align	2
  95              		.type	X_QuadPosition, %object
  96              		.size	X_QuadPosition, 4
  97              	X_QuadPosition:
  98 0028 00000000 		.space	4
  99              		.global	Y_QuadPosition
 100              		.align	2
 101              		.type	Y_QuadPosition, %object
 102              		.size	Y_QuadPosition, 4
 103              	Y_QuadPosition:
 104 002c 00000000 		.space	4
 105              		.global	Z_QuadPosition
 106              		.align	2
 107              		.type	Z_QuadPosition, %object
 108              		.size	Z_QuadPosition, 4
 109              	Z_QuadPosition:
 110 0030 00000000 		.space	4
 111              		.global	No_of_X_Cycle
 112              		.align	2
 113              		.type	No_of_X_Cycle, %object
 114              		.size	No_of_X_Cycle, 4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 3


 115              	No_of_X_Cycle:
 116 0034 00000000 		.space	4
 117              		.global	No_of_Y_Cycle
 118              		.align	2
 119              		.type	No_of_Y_Cycle, %object
 120              		.size	No_of_Y_Cycle, 4
 121              	No_of_Y_Cycle:
 122 0038 00000000 		.space	4
 123              		.global	No_of_Z_Cycle
 124              		.align	2
 125              		.type	No_of_Z_Cycle, %object
 126              		.size	No_of_Z_Cycle, 4
 127              	No_of_Z_Cycle:
 128 003c 00000000 		.space	4
 129              		.global	Motor_Speed_X
 130              		.data
 131 0001 000000   		.align	2
 132              		.type	Motor_Speed_X, %object
 133              		.size	Motor_Speed_X, 4
 134              	Motor_Speed_X:
 135 0004 8A020000 		.word	650
 136              		.global	Motor_Speed_Y
 137              		.align	2
 138              		.type	Motor_Speed_Y, %object
 139              		.size	Motor_Speed_Y, 4
 140              	Motor_Speed_Y:
 141 0008 58020000 		.word	600
 142              		.global	Motor_Speed_Z
 143              		.align	2
 144              		.type	Motor_Speed_Z, %object
 145              		.size	Motor_Speed_Z, 4
 146              	Motor_Speed_Z:
 147 000c FA000000 		.word	250
 148              		.global	step_correction_loop_x
 149              		.align	2
 150              		.type	step_correction_loop_x, %object
 151              		.size	step_correction_loop_x, 4
 152              	step_correction_loop_x:
 153 0010 04000000 		.word	4
 154              		.global	step_correction_loop_y
 155              		.align	2
 156              		.type	step_correction_loop_y, %object
 157              		.size	step_correction_loop_y, 4
 158              	step_correction_loop_y:
 159 0014 04000000 		.word	4
 160              		.global	step_correction_loop_z
 161              		.align	2
 162              		.type	step_correction_loop_z, %object
 163              		.size	step_correction_loop_z, 4
 164              	step_correction_loop_z:
 165 0018 04000000 		.word	4
 166              		.global	HomeX_done
 167              		.bss
 168              		.type	HomeX_done, %object
 169              		.size	HomeX_done, 1
 170              	HomeX_done:
 171 0040 00       		.space	1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 4


 172              		.global	HomeY_done
 173              		.type	HomeY_done, %object
 174              		.size	HomeY_done, 1
 175              	HomeY_done:
 176 0041 00       		.space	1
 177              		.global	HomeZ_done
 178              		.type	HomeZ_done, %object
 179              		.size	HomeZ_done, 1
 180              	HomeZ_done:
 181 0042 00       		.space	1
 182              		.global	EncoderXnYSelect
 183 0043 00       		.align	2
 184              		.type	EncoderXnYSelect, %object
 185              		.size	EncoderXnYSelect, 4
 186              	EncoderXnYSelect:
 187 0044 00000000 		.space	4
 188              		.global	Buffer_X_QuadPosition
 189              		.align	2
 190              		.type	Buffer_X_QuadPosition, %object
 191              		.size	Buffer_X_QuadPosition, 4
 192              	Buffer_X_QuadPosition:
 193 0048 00000000 		.space	4
 194              		.global	Buffer_Y_QuadPosition
 195              		.align	2
 196              		.type	Buffer_Y_QuadPosition, %object
 197              		.size	Buffer_Y_QuadPosition, 4
 198              	Buffer_Y_QuadPosition:
 199 004c 00000000 		.space	4
 200              		.global	PWM_comare_value
 201              		.align	2
 202              		.type	PWM_comare_value, %object
 203              		.size	PWM_comare_value, 4
 204              	PWM_comare_value:
 205 0050 00000000 		.space	4
 206              		.section	.rodata
 207              		.align	2
 208              	.LC0:
 209 0000 486F6D65 		.ascii	"HomeX Command Recived  \015\012\000"
 209      5820436F 
 209      6D6D616E 
 209      64205265 
 209      63697665 
 210 001a 0000     		.align	2
 211              	.LC1:
 212 001c 585F5377 		.ascii	"X_Switch_Not_Working***********[x1]  \015\012\000"
 212      69746368 
 212      5F4E6F74 
 212      5F576F72 
 212      6B696E67 
 213              		.align	2
 214              	.LC2:
 215 0044 585F4D6F 		.ascii	"X_MotorNotWorking***********[x2]  \015\012\000"
 215      746F724E 
 215      6F74576F 
 215      726B696E 
 215      672A2A2A 
 216 0069 000000   		.align	2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 5


 217              	.LC3:
 218 006c 585F5377 		.ascii	"X_Switch_Not_Working***********[x3]  \015\012\000"
 218      69746368 
 218      5F4E6F74 
 218      5F576F72 
 218      6B696E67 
 219              		.align	2
 220              	.LC4:
 221 0094 585F4D6F 		.ascii	"X_MotorNotWorking***********[x4]  \015\012\000"
 221      746F724E 
 221      6F74576F 
 221      726B696E 
 221      672A2A2A 
 222 00b9 000000   		.align	2
 223              	.LC5:
 224 00bc 595F486F 		.ascii	"Y_Homing_Not_Done_Yet***********[x5]  \015\012\000"
 224      6D696E67 
 224      5F4E6F74 
 224      5F446F6E 
 224      655F5965 
 225 00e5 000000   		.align	2
 226              	.LC6:
 227 00e8 486F6D65 		.ascii	"HomeX executed  \015\012\000"
 227      58206578 
 227      65637574 
 227      65642020 
 227      0D0A00
 228 00fb 00       		.align	2
 229              	.LC7:
 230 00fc 486F6D65 		.ascii	"HomeX_Error***********[x6]  \015\012\000"
 230      585F4572 
 230      726F722A 
 230      2A2A2A2A 
 230      2A2A2A2A 
 231              		.section	.text.home_X,"ax",%progbits
 232              		.align	2
 233              		.global	home_X
 234              		.thumb
 235              		.thumb_func
 236              		.type	home_X, %function
 237              	home_X:
 238              	.LFB64:
 239              		.file 1 "L6470.c"
   1:L6470.c       **** 
   2:L6470.c       **** /* ========================================
   3:L6470.c       **** 
   4:L6470.c       ****    Copyright Sigtuple, 2018
   5:L6470.c       ****    All Rights Reserved
   6:L6470.c       ****    UNPUBLISHED, LICENSED SOFTWARE.
   7:L6470.c       **** 
   8:L6470.c       ****    CONFIDENTIAL AND PROPRIETARY INFORMATION
   9:L6470.c       ****    WHICH IS THE PROPERTY OF SIGTUPLE.
  10:L6470.c       **** 
  11:L6470.c       ****    ========================================
  12:L6470.c       **** */
  13:L6470.c       **** #include "L6470.h"
  14:L6470.c       **** #include "variables.h"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 6


  15:L6470.c       **** #include "project.h"
  16:L6470.c       **** #include "math.h"
  17:L6470.c       **** #include "configuration.h"
  18:L6470.c       **** #include <stdlib.h>
  19:L6470.c       **** 
  20:L6470.c       **** bool Time_Out_Error = true;
  21:L6470.c       **** unsigned int command;
  22:L6470.c       **** 
  23:L6470.c       **** int Error = 0;
  24:L6470.c       **** 
  25:L6470.c       **** int32 X_last_position  = 0;
  26:L6470.c       **** int32 Y_last_position  = 0;
  27:L6470.c       **** int32 Z_last_position  = 0;
  28:L6470.c       **** int32 Position_X_Requested = 0;
  29:L6470.c       **** int32 Position_Y_Requested = 0;
  30:L6470.c       **** int32 Position_Z_Requested = 0;
  31:L6470.c       **** int32 Position_X_Move = 0;
  32:L6470.c       **** int32 Position_Y_Move = 0;
  33:L6470.c       **** int32 Position_Z_Move = 0;
  34:L6470.c       **** volatile int32 X_QuadPosition = 0;
  35:L6470.c       **** volatile int32 Y_QuadPosition = 0;
  36:L6470.c       **** volatile int32 Z_QuadPosition = 0;
  37:L6470.c       **** int No_of_X_Cycle=0;
  38:L6470.c       **** int No_of_Y_Cycle=0;
  39:L6470.c       **** int No_of_Z_Cycle=0;
  40:L6470.c       **** unsigned int Motor_Speed_X = Default_X_Motor_Speed;
  41:L6470.c       **** unsigned int Motor_Speed_Y = Default_Y_Motor_Speed;
  42:L6470.c       **** unsigned int Motor_Speed_Z = Default_Z_Motor_Speed;
  43:L6470.c       **** int step_correction_loop_x = No_of_Execution_GoToX;
  44:L6470.c       **** int step_correction_loop_y = No_of_Execution_GoToY;
  45:L6470.c       **** int step_correction_loop_z = No_of_Execution_GoToZ;
  46:L6470.c       **** bool HomeX_done = false;
  47:L6470.c       **** bool HomeY_done = false;
  48:L6470.c       **** bool HomeZ_done = false;
  49:L6470.c       **** int EncoderXnYSelect = 0;
  50:L6470.c       **** int Buffer_X_QuadPosition = 0;
  51:L6470.c       **** int Buffer_Y_QuadPosition = 0;
  52:L6470.c       **** int PWM_comare_value = 0;
  53:L6470.c       **** 
  54:L6470.c       **** //Motor Movment Functions Start-------------------------------------------------------
  55:L6470.c       **** int home_X()
  56:L6470.c       **** {
 240              		.loc 1 56 0
 241              		.cfi_startproc
 242              		@ args = 0, pretend = 0, frame = 8
 243              		@ frame_needed = 1, uses_anonymous_args = 0
 244 0000 80B5     		push	{r7, lr}
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 7, -8
 247              		.cfi_offset 14, -4
 248 0002 82B0     		sub	sp, sp, #8
 249              		.cfi_def_cfa_offset 16
 250 0004 00AF     		add	r7, sp, #0
 251              		.cfi_def_cfa_register 7
  57:L6470.c       ****     Write_Debug_UART_Char("HomeX Command Recived  \r\n");
 252              		.loc 1 57 0
 253 0006 8148     		ldr	r0, .L17
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 7


 254 0008 FFF7FEFF 		bl	Write_Debug_UART_Char
  58:L6470.c       ****     Error = 0;
 255              		.loc 1 58 0
 256 000c 804B     		ldr	r3, .L17+4
 257 000e 0022     		movs	r2, #0
 258 0010 1A60     		str	r2, [r3]
  59:L6470.c       ****     Configure_L6470_For_X_Motor();
 259              		.loc 1 59 0
 260 0012 FFF7FEFF 		bl	Configure_L6470_For_X_Motor
  60:L6470.c       ****     X_last_position = 0;
 261              		.loc 1 60 0
 262 0016 7F4B     		ldr	r3, .L17+8
 263 0018 0022     		movs	r2, #0
 264 001a 1A60     		str	r2, [r3]
  61:L6470.c       ****     X_QuadPosition =0 ;
 265              		.loc 1 61 0
 266 001c 7E4B     		ldr	r3, .L17+12
 267 001e 0022     		movs	r2, #0
 268 0020 1A60     		str	r2, [r3]
  62:L6470.c       ****     int32 now_X_QuadPosition = X_QuadPosition;
 269              		.loc 1 62 0
 270 0022 7D4B     		ldr	r3, .L17+12
 271 0024 1B68     		ldr	r3, [r3]
 272 0026 7B60     		str	r3, [r7, #4]
  63:L6470.c       ****     Buffer_X_QuadPosition = 0;
 273              		.loc 1 63 0
 274 0028 7C4B     		ldr	r3, .L17+16
 275 002a 0022     		movs	r2, #0
 276 002c 1A60     		str	r2, [r3]
  64:L6470.c       ****     if(HomeY_done == true)
 277              		.loc 1 64 0
 278 002e 7C4B     		ldr	r3, .L17+20
 279 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 280 0032 002B     		cmp	r3, #0
 281 0034 00F0B480 		beq	.L2
  65:L6470.c       ****     {
  66:L6470.c       ****         if(check_Error('X', 'H') == 0)
 282              		.loc 1 66 0
 283 0038 4821     		movs	r1, #72
 284 003a 5820     		movs	r0, #88
 285 003c FFF7FEFF 		bl	check_Error
 286 0040 0346     		mov	r3, r0
 287 0042 002B     		cmp	r3, #0
 288 0044 40F0A480 		bne	.L3
  67:L6470.c       ****         {
  68:L6470.c       ****             Enable_Encoder_X(0);
 289              		.loc 1 68 0
 290 0048 0020     		movs	r0, #0
 291 004a FFF7FEFF 		bl	Enable_Encoder_X
  69:L6470.c       ****             if(ADC_SAR_Seq_GetResult16(0) < Proxy_Sensor_Threshold)
 292              		.loc 1 69 0
 293 004e 0020     		movs	r0, #0
 294 0050 FFF7FEFF 		bl	ADC_SAR_Seq_GetResult16
 295 0054 0346     		mov	r3, r0
 296 0056 182B     		cmp	r3, #24
 297 0058 3BDC     		bgt	.L4
  70:L6470.c       ****             {
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 8


  71:L6470.c       ****                 Move(FWD, OneRotation * 50);
 298              		.loc 1 71 0
 299 005a 7249     		ldr	r1, .L17+24
 300 005c 0120     		movs	r0, #1
 301 005e FFF7FEFF 		bl	Move
  72:L6470.c       ****                 while (Pin_BusyMotorX_Read() == 0)
 302              		.loc 1 72 0
 303 0062 0BE0     		b	.L5
 304              	.L6:
  73:L6470.c       ****                 {      
  74:L6470.c       ****                     if (ADC_SAR_Seq_GetResult16(0) > Proxy_Sensor_Threshold) 
 305              		.loc 1 74 0
 306 0064 0020     		movs	r0, #0
 307 0066 FFF7FEFF 		bl	ADC_SAR_Seq_GetResult16
 308 006a 0346     		mov	r3, r0
 309 006c 192B     		cmp	r3, #25
 310 006e 05DD     		ble	.L5
  75:L6470.c       ****                     {
  76:L6470.c       ****                         CyDelay(100);//Key debounding
 311              		.loc 1 76 0
 312 0070 6420     		movs	r0, #100
 313 0072 FFF7FEFF 		bl	CyDelay
  77:L6470.c       ****                         Data_To_Transfer(x_HARD_STOP);
 314              		.loc 1 77 0
 315 0076 B820     		movs	r0, #184
 316 0078 FFF7FEFF 		bl	Data_To_Transfer
 317              	.L5:
  72:L6470.c       ****                 {      
 318              		.loc 1 72 0
 319 007c FFF7FEFF 		bl	Pin_BusyMotorX_Read
 320 0080 0346     		mov	r3, r0
 321 0082 002B     		cmp	r3, #0
 322 0084 EED0     		beq	.L6
  78:L6470.c       ****                     }
  79:L6470.c       ****                 }
  80:L6470.c       ****                 CyDelay(100);//for stage stablization
 323              		.loc 1 80 0
 324 0086 6420     		movs	r0, #100
 325 0088 FFF7FEFF 		bl	CyDelay
  81:L6470.c       ****                 Read_All_Optical_Encoder();
 326              		.loc 1 81 0
 327 008c FFF7FEFF 		bl	Read_All_Optical_Encoder
  82:L6470.c       ****                 if(ADC_SAR_Seq_GetResult16(0) < Proxy_Sensor_Threshold)
 328              		.loc 1 82 0
 329 0090 0020     		movs	r0, #0
 330 0092 FFF7FEFF 		bl	ADC_SAR_Seq_GetResult16
 331 0096 0346     		mov	r3, r0
 332 0098 182B     		cmp	r3, #24
 333 009a 1ADC     		bgt	.L4
  83:L6470.c       ****                 {
  84:L6470.c       ****                     if(abs(now_X_QuadPosition - X_QuadPosition) >4000)
 334              		.loc 1 84 0
 335 009c 5E4B     		ldr	r3, .L17+12
 336 009e 1B68     		ldr	r3, [r3]
 337 00a0 7A68     		ldr	r2, [r7, #4]
 338 00a2 D31A     		subs	r3, r2, r3
 339 00a4 002B     		cmp	r3, #0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 9


 340 00a6 B8BF     		it	lt
 341 00a8 5B42     		rsblt	r3, r3, #0
 342 00aa B3F57A6F 		cmp	r3, #4000
 343 00ae 08DD     		ble	.L7
  85:L6470.c       ****                     {
  86:L6470.c       ****                         Error = 3;//X_Switch_Not_Working;
 344              		.loc 1 86 0
 345 00b0 574B     		ldr	r3, .L17+4
 346 00b2 0322     		movs	r2, #3
 347 00b4 1A60     		str	r2, [r3]
  87:L6470.c       ****                         Write_Debug_UART_Char("X_Switch_Not_Working***********[x1]  \r\n");
 348              		.loc 1 87 0
 349 00b6 5C48     		ldr	r0, .L17+28
 350 00b8 FFF7FEFF 		bl	Write_Debug_UART_Char
  88:L6470.c       ****                         UART_print_all_values();
 351              		.loc 1 88 0
 352 00bc FFF7FEFF 		bl	UART_print_all_values
 353 00c0 07E0     		b	.L4
 354              	.L7:
  89:L6470.c       ****                     }
  90:L6470.c       ****                     else
  91:L6470.c       ****                     {
  92:L6470.c       ****                         Error = 1;//xMotorNotWorking;
 355              		.loc 1 92 0
 356 00c2 534B     		ldr	r3, .L17+4
 357 00c4 0122     		movs	r2, #1
 358 00c6 1A60     		str	r2, [r3]
  93:L6470.c       ****                         Write_Debug_UART_Char("X_MotorNotWorking***********[x2]  \r\n");
 359              		.loc 1 93 0
 360 00c8 5848     		ldr	r0, .L17+32
 361 00ca FFF7FEFF 		bl	Write_Debug_UART_Char
  94:L6470.c       ****                         UART_print_all_values();
 362              		.loc 1 94 0
 363 00ce FFF7FEFF 		bl	UART_print_all_values
 364              	.L4:
  95:L6470.c       ****                     }
  96:L6470.c       ****                 }
  97:L6470.c       ****             }
  98:L6470.c       ****             CyDelay(200);//requred to reduce the step error after homing
 365              		.loc 1 98 0
 366 00d2 C820     		movs	r0, #200
 367 00d4 FFF7FEFF 		bl	CyDelay
  99:L6470.c       ****             now_X_QuadPosition = X_QuadPosition;
 368              		.loc 1 99 0
 369 00d8 4F4B     		ldr	r3, .L17+12
 370 00da 1B68     		ldr	r3, [r3]
 371 00dc 7B60     		str	r3, [r7, #4]
 100:L6470.c       ****             if(ADC_SAR_Seq_GetResult16(0) > Proxy_Sensor_Threshold)
 372              		.loc 1 100 0
 373 00de 0020     		movs	r0, #0
 374 00e0 FFF7FEFF 		bl	ADC_SAR_Seq_GetResult16
 375 00e4 0346     		mov	r3, r0
 376 00e6 192B     		cmp	r3, #25
 377 00e8 62DD     		ble	.L13
 101:L6470.c       ****             {
 102:L6470.c       ****                 SetParam(x_MAX_SPEED, MaxSpdCalc(50));
 378              		.loc 1 102 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 10


 379 00ea 5148     		ldr	r0, .L17+36
 380 00ec FFF7FEFF 		bl	MaxSpdCalc
 381 00f0 0346     		mov	r3, r0
 382 00f2 1946     		mov	r1, r3
 383 00f4 0720     		movs	r0, #7
 384 00f6 FFF7FEFF 		bl	SetParam
 103:L6470.c       ****                 Move(REV, OneRotation * 2);
 385              		.loc 1 103 0
 386 00fa 4FF4FA41 		mov	r1, #32000
 387 00fe 0020     		movs	r0, #0
 388 0100 FFF7FEFF 		bl	Move
 104:L6470.c       ****                 while (Pin_BusyMotorX_Read() == 0)
 389              		.loc 1 104 0
 390 0104 18E0     		b	.L9
 391              	.L10:
 105:L6470.c       ****                 {
 106:L6470.c       ****                     if (ADC_SAR_Seq_GetResult16(0) < Proxy_Sensor_Threshold)
 392              		.loc 1 106 0
 393 0106 0020     		movs	r0, #0
 394 0108 FFF7FEFF 		bl	ADC_SAR_Seq_GetResult16
 395 010c 0346     		mov	r3, r0
 396 010e 182B     		cmp	r3, #24
 397 0110 12DC     		bgt	.L9
 107:L6470.c       ****                     {
 108:L6470.c       ****                         X_last_position = 0;
 398              		.loc 1 108 0
 399 0112 404B     		ldr	r3, .L17+8
 400 0114 0022     		movs	r2, #0
 401 0116 1A60     		str	r2, [r3]
 109:L6470.c       ****                         X_QuadPosition =0 ;
 402              		.loc 1 109 0
 403 0118 3F4B     		ldr	r3, .L17+12
 404 011a 0022     		movs	r2, #0
 405 011c 1A60     		str	r2, [r3]
 110:L6470.c       ****                         QuadDec_XY_Stop();
 406              		.loc 1 110 0
 407 011e FFF7FEFF 		bl	QuadDec_XY_Stop
 111:L6470.c       ****                         QuadDec_XY_Start();
 408              		.loc 1 111 0
 409 0122 FFF7FEFF 		bl	QuadDec_XY_Start
 112:L6470.c       ****                         QuadDec_XY_SetCounter(0);
 410              		.loc 1 112 0
 411 0126 0020     		movs	r0, #0
 412 0128 FFF7FEFF 		bl	QuadDec_XY_SetCounter
 113:L6470.c       ****                         Buffer_X_QuadPosition = 0;
 413              		.loc 1 113 0
 414 012c 3B4B     		ldr	r3, .L17+16
 415 012e 0022     		movs	r2, #0
 416 0130 1A60     		str	r2, [r3]
 114:L6470.c       ****                         Data_To_Transfer(x_HARD_STOP);
 417              		.loc 1 114 0
 418 0132 B820     		movs	r0, #184
 419 0134 FFF7FEFF 		bl	Data_To_Transfer
 420              	.L9:
 104:L6470.c       ****                 {
 421              		.loc 1 104 0
 422 0138 FFF7FEFF 		bl	Pin_BusyMotorX_Read
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 11


 423 013c 0346     		mov	r3, r0
 424 013e 002B     		cmp	r3, #0
 425 0140 E1D0     		beq	.L10
 115:L6470.c       ****                     }
 116:L6470.c       ****                 }
 117:L6470.c       ****                 CyDelay(100);//for stage stablization
 426              		.loc 1 117 0
 427 0142 6420     		movs	r0, #100
 428 0144 FFF7FEFF 		bl	CyDelay
 118:L6470.c       ****                 Read_All_Optical_Encoder();
 429              		.loc 1 118 0
 430 0148 FFF7FEFF 		bl	Read_All_Optical_Encoder
 119:L6470.c       ****                 if(ADC_SAR_Seq_GetResult16(0) > Proxy_Sensor_Threshold)
 431              		.loc 1 119 0
 432 014c 0020     		movs	r0, #0
 433 014e FFF7FEFF 		bl	ADC_SAR_Seq_GetResult16
 434 0152 0346     		mov	r3, r0
 435 0154 192B     		cmp	r3, #25
 436 0156 2BDD     		ble	.L13
 120:L6470.c       ****                 {
 121:L6470.c       ****                     if(abs(now_X_QuadPosition - X_QuadPosition) > 4000)
 437              		.loc 1 121 0
 438 0158 2F4B     		ldr	r3, .L17+12
 439 015a 1B68     		ldr	r3, [r3]
 440 015c 7A68     		ldr	r2, [r7, #4]
 441 015e D31A     		subs	r3, r2, r3
 442 0160 002B     		cmp	r3, #0
 443 0162 B8BF     		it	lt
 444 0164 5B42     		rsblt	r3, r3, #0
 445 0166 B3F57A6F 		cmp	r3, #4000
 446 016a 08DD     		ble	.L11
 122:L6470.c       ****                     {
 123:L6470.c       ****                         Error = 3;//X_Switch_Not_Working;
 447              		.loc 1 123 0
 448 016c 284B     		ldr	r3, .L17+4
 449 016e 0322     		movs	r2, #3
 450 0170 1A60     		str	r2, [r3]
 124:L6470.c       ****                         Write_Debug_UART_Char("X_Switch_Not_Working***********[x3]  \r\n");
 451              		.loc 1 124 0
 452 0172 3048     		ldr	r0, .L17+40
 453 0174 FFF7FEFF 		bl	Write_Debug_UART_Char
 125:L6470.c       ****                         UART_print_all_values();
 454              		.loc 1 125 0
 455 0178 FFF7FEFF 		bl	UART_print_all_values
 456 017c 18E0     		b	.L13
 457              	.L11:
 126:L6470.c       ****                     }
 127:L6470.c       ****                     else
 128:L6470.c       ****                     {
 129:L6470.c       ****                         Error = 1;//MotorNotWorking;
 458              		.loc 1 129 0
 459 017e 244B     		ldr	r3, .L17+4
 460 0180 0122     		movs	r2, #1
 461 0182 1A60     		str	r2, [r3]
 130:L6470.c       ****                         Write_Debug_UART_Char("X_MotorNotWorking***********[x4]  \r\n");
 462              		.loc 1 130 0
 463 0184 2C48     		ldr	r0, .L17+44
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 12


 464 0186 FFF7FEFF 		bl	Write_Debug_UART_Char
 131:L6470.c       ****                         UART_print_all_values();
 465              		.loc 1 131 0
 466 018a FFF7FEFF 		bl	UART_print_all_values
 467 018e 0FE0     		b	.L13
 468              	.L3:
 132:L6470.c       ****                     }
 133:L6470.c       ****                 }
 134:L6470.c       ****             }
 135:L6470.c       ****         }
 136:L6470.c       ****         else
 137:L6470.c       ****             Error = check_Error('X', 'H');
 469              		.loc 1 137 0
 470 0190 4821     		movs	r1, #72
 471 0192 5820     		movs	r0, #88
 472 0194 FFF7FEFF 		bl	check_Error
 473 0198 0246     		mov	r2, r0
 474 019a 1D4B     		ldr	r3, .L17+4
 475 019c 1A60     		str	r2, [r3]
 476 019e 07E0     		b	.L13
 477              	.L2:
 138:L6470.c       ****     }
 139:L6470.c       ****     else
 140:L6470.c       ****     {
 141:L6470.c       ****         Error = 12;//Y_Homing_Not_Done_Yet
 478              		.loc 1 141 0
 479 01a0 1B4B     		ldr	r3, .L17+4
 480 01a2 0C22     		movs	r2, #12
 481 01a4 1A60     		str	r2, [r3]
 142:L6470.c       ****         Write_Debug_UART_Char("Y_Homing_Not_Done_Yet***********[x5]  \r\n");
 482              		.loc 1 142 0
 483 01a6 2548     		ldr	r0, .L17+48
 484 01a8 FFF7FEFF 		bl	Write_Debug_UART_Char
 143:L6470.c       ****         UART_print_all_values();
 485              		.loc 1 143 0
 486 01ac FFF7FEFF 		bl	UART_print_all_values
 487              	.L13:
 144:L6470.c       ****     }
 145:L6470.c       ****     if(Error == 0)
 488              		.loc 1 145 0
 489 01b0 174B     		ldr	r3, .L17+4
 490 01b2 1B68     		ldr	r3, [r3]
 491 01b4 002B     		cmp	r3, #0
 492 01b6 12D1     		bne	.L14
 146:L6470.c       ****     {
 147:L6470.c       ****         X_last_position = 0;
 493              		.loc 1 147 0
 494 01b8 164B     		ldr	r3, .L17+8
 495 01ba 0022     		movs	r2, #0
 496 01bc 1A60     		str	r2, [r3]
 148:L6470.c       ****         QuadDec_XY_SetCounter(0);
 497              		.loc 1 148 0
 498 01be 0020     		movs	r0, #0
 499 01c0 FFF7FEFF 		bl	QuadDec_XY_SetCounter
 149:L6470.c       ****         Buffer_X_QuadPosition = 0;
 500              		.loc 1 149 0
 501 01c4 154B     		ldr	r3, .L17+16
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 13


 502 01c6 0022     		movs	r2, #0
 503 01c8 1A60     		str	r2, [r3]
 150:L6470.c       ****         X_QuadPosition =0 ;
 504              		.loc 1 150 0
 505 01ca 134B     		ldr	r3, .L17+12
 506 01cc 0022     		movs	r2, #0
 507 01ce 1A60     		str	r2, [r3]
 151:L6470.c       ****         HomeX_done = true;
 508              		.loc 1 151 0
 509 01d0 1B4B     		ldr	r3, .L17+52
 510 01d2 0122     		movs	r2, #1
 511 01d4 1A70     		strb	r2, [r3]
 152:L6470.c       ****         Write_Debug_UART_Char("HomeX executed  \r\n");
 512              		.loc 1 152 0
 513 01d6 1B48     		ldr	r0, .L17+56
 514 01d8 FFF7FEFF 		bl	Write_Debug_UART_Char
 515 01dc 07E0     		b	.L15
 516              	.L14:
 153:L6470.c       ****     }
 154:L6470.c       ****     else
 155:L6470.c       ****     {
 156:L6470.c       ****         HomeX_done = false;
 517              		.loc 1 156 0
 518 01de 184B     		ldr	r3, .L17+52
 519 01e0 0022     		movs	r2, #0
 520 01e2 1A70     		strb	r2, [r3]
 157:L6470.c       ****         Write_Debug_UART_Char("HomeX_Error***********[x6]  \r\n");
 521              		.loc 1 157 0
 522 01e4 1848     		ldr	r0, .L17+60
 523 01e6 FFF7FEFF 		bl	Write_Debug_UART_Char
 158:L6470.c       ****         UART_print_all_values();
 524              		.loc 1 158 0
 525 01ea FFF7FEFF 		bl	UART_print_all_values
 526              	.L15:
 159:L6470.c       ****     }
 160:L6470.c       ****     disconnect_all_motor();    
 527              		.loc 1 160 0
 528 01ee FFF7FEFF 		bl	disconnect_all_motor
 161:L6470.c       ****     Buffer_X_QuadPosition = -QuadDec_XY_GetCounter();
 529              		.loc 1 161 0
 530 01f2 FFF7FEFF 		bl	QuadDec_XY_GetCounter
 531 01f6 0346     		mov	r3, r0
 532 01f8 5B42     		negs	r3, r3
 533 01fa 084A     		ldr	r2, .L17+16
 534 01fc 1360     		str	r3, [r2]
 162:L6470.c       ****     return Error;
 535              		.loc 1 162 0
 536 01fe 044B     		ldr	r3, .L17+4
 537 0200 1B68     		ldr	r3, [r3]
 163:L6470.c       **** }
 538              		.loc 1 163 0
 539 0202 1846     		mov	r0, r3
 540 0204 0837     		adds	r7, r7, #8
 541              		.cfi_def_cfa_offset 8
 542 0206 BD46     		mov	sp, r7
 543              		.cfi_def_cfa_register 13
 544              		@ sp needed
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 14


 545 0208 80BD     		pop	{r7, pc}
 546              	.L18:
 547 020a 00BF     		.align	2
 548              	.L17:
 549 020c 00000000 		.word	.LC0
 550 0210 00000000 		.word	Error
 551 0214 00000000 		.word	X_last_position
 552 0218 00000000 		.word	X_QuadPosition
 553 021c 00000000 		.word	Buffer_X_QuadPosition
 554 0220 00000000 		.word	HomeY_done
 555 0224 00350C00 		.word	800000
 556 0228 1C000000 		.word	.LC1
 557 022c 44000000 		.word	.LC2
 558 0230 00004842 		.word	1112014848
 559 0234 6C000000 		.word	.LC3
 560 0238 94000000 		.word	.LC4
 561 023c BC000000 		.word	.LC5
 562 0240 00000000 		.word	HomeX_done
 563 0244 E8000000 		.word	.LC6
 564 0248 FC000000 		.word	.LC7
 565              		.cfi_endproc
 566              	.LFE64:
 567              		.size	home_X, .-home_X
 568              		.section	.rodata
 569 011b 00       		.align	2
 570              	.LC8:
 571 011c 486F6D65 		.ascii	"HomeY Command Recived  \015\012\000"
 571      5920436F 
 571      6D6D616E 
 571      64205265 
 571      63697665 
 572 0136 0000     		.align	2
 573              	.LC9:
 574 0138 595F5377 		.ascii	"Y_Switch_Not_Working***********[y1]  \015\012\000"
 574      69746368 
 574      5F4E6F74 
 574      5F576F72 
 574      6B696E67 
 575              		.align	2
 576              	.LC10:
 577 0160 595F4D6F 		.ascii	"Y_Motor_Not_Working***********[y2]  \015\012\000"
 577      746F725F 
 577      4E6F745F 
 577      576F726B 
 577      696E672A 
 578 0187 00       		.align	2
 579              	.LC11:
 580 0188 595F5377 		.ascii	"Y_Switch_Not_Working***********[y3]  \015\012\000"
 580      69746368 
 580      5F4E6F74 
 580      5F576F72 
 580      6B696E67 
 581              		.align	2
 582              	.LC12:
 583 01b0 595F4D6F 		.ascii	"Y_Motor_Not_Working***********[y4]  \015\012\000"
 583      746F725F 
 583      4E6F745F 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 15


 583      576F726B 
 583      696E672A 
 584 01d7 00       		.align	2
 585              	.LC13:
 586 01d8 486F6D65 		.ascii	"HomeY executed  \015\012\000"
 586      59206578 
 586      65637574 
 586      65642020 
 586      0D0A00
 587 01eb 00       		.align	2
 588              	.LC14:
 589 01ec 486F6D65 		.ascii	"HomeY_Error***********[y5]  \015\012\000"
 589      595F4572 
 589      726F722A 
 589      2A2A2A2A 
 589      2A2A2A2A 
 590              		.section	.text.home_Y,"ax",%progbits
 591              		.align	2
 592              		.global	home_Y
 593              		.thumb
 594              		.thumb_func
 595              		.type	home_Y, %function
 596              	home_Y:
 597              	.LFB65:
 164:L6470.c       **** int home_Y()
 165:L6470.c       **** {
 598              		.loc 1 165 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 8
 601              		@ frame_needed = 1, uses_anonymous_args = 0
 602 0000 80B5     		push	{r7, lr}
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 7, -8
 605              		.cfi_offset 14, -4
 606 0002 82B0     		sub	sp, sp, #8
 607              		.cfi_def_cfa_offset 16
 608 0004 00AF     		add	r7, sp, #0
 609              		.cfi_def_cfa_register 7
 166:L6470.c       ****     Write_Debug_UART_Char("HomeY Command Recived  \r\n");
 610              		.loc 1 166 0
 611 0006 7A48     		ldr	r0, .L33
 612 0008 FFF7FEFF 		bl	Write_Debug_UART_Char
 167:L6470.c       ****     Error = 0;
 613              		.loc 1 167 0
 614 000c 794B     		ldr	r3, .L33+4
 615 000e 0022     		movs	r2, #0
 616 0010 1A60     		str	r2, [r3]
 168:L6470.c       ****     Configure_L6470_For_Y_Motor();
 617              		.loc 1 168 0
 618 0012 FFF7FEFF 		bl	Configure_L6470_For_Y_Motor
 169:L6470.c       ****     Y_last_position = 0;
 619              		.loc 1 169 0
 620 0016 784B     		ldr	r3, .L33+8
 621 0018 0022     		movs	r2, #0
 622 001a 1A60     		str	r2, [r3]
 170:L6470.c       ****     Y_QuadPosition =0 ;
 623              		.loc 1 170 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 16


 624 001c 774B     		ldr	r3, .L33+12
 625 001e 0022     		movs	r2, #0
 626 0020 1A60     		str	r2, [r3]
 171:L6470.c       ****     int32 now_Y_QuadPosition = Y_QuadPosition;
 627              		.loc 1 171 0
 628 0022 764B     		ldr	r3, .L33+12
 629 0024 1B68     		ldr	r3, [r3]
 630 0026 7B60     		str	r3, [r7, #4]
 172:L6470.c       ****     Buffer_Y_QuadPosition = 0;
 631              		.loc 1 172 0
 632 0028 754B     		ldr	r3, .L33+16
 633 002a 0022     		movs	r2, #0
 634 002c 1A60     		str	r2, [r3]
 173:L6470.c       ****     if(check_Error('Y','H') == 0)
 635              		.loc 1 173 0
 636 002e 4821     		movs	r1, #72
 637 0030 5920     		movs	r0, #89
 638 0032 FFF7FEFF 		bl	check_Error
 639 0036 0346     		mov	r3, r0
 640 0038 002B     		cmp	r3, #0
 641 003a 40F0A480 		bne	.L20
 174:L6470.c       ****     {
 175:L6470.c       ****         Enable_Encoder_Y(0);
 642              		.loc 1 175 0
 643 003e 0020     		movs	r0, #0
 644 0040 FFF7FEFF 		bl	Enable_Encoder_Y
 176:L6470.c       ****         if(ADC_SAR_Seq_GetResult16(1) < Proxy_Sensor_Threshold)
 645              		.loc 1 176 0
 646 0044 0120     		movs	r0, #1
 647 0046 FFF7FEFF 		bl	ADC_SAR_Seq_GetResult16
 648 004a 0346     		mov	r3, r0
 649 004c 182B     		cmp	r3, #24
 650 004e 3BDC     		bgt	.L21
 177:L6470.c       ****         {
 178:L6470.c       ****             Move(REV, OneRotation * 30);
 651              		.loc 1 178 0
 652 0050 6C49     		ldr	r1, .L33+20
 653 0052 0020     		movs	r0, #0
 654 0054 FFF7FEFF 		bl	Move
 179:L6470.c       ****             while (Pin_BusyMotorY_Read() == 0)
 655              		.loc 1 179 0
 656 0058 0BE0     		b	.L22
 657              	.L23:
 180:L6470.c       ****             {
 181:L6470.c       ****                 if (ADC_SAR_Seq_GetResult16(1) > Proxy_Sensor_Threshold)
 658              		.loc 1 181 0
 659 005a 0120     		movs	r0, #1
 660 005c FFF7FEFF 		bl	ADC_SAR_Seq_GetResult16
 661 0060 0346     		mov	r3, r0
 662 0062 192B     		cmp	r3, #25
 663 0064 05DD     		ble	.L22
 182:L6470.c       ****                 {
 183:L6470.c       ****                     CyDelay(100);//Key debounding
 664              		.loc 1 183 0
 665 0066 6420     		movs	r0, #100
 666 0068 FFF7FEFF 		bl	CyDelay
 184:L6470.c       ****                     Data_To_Transfer(x_HARD_STOP);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 17


 667              		.loc 1 184 0
 668 006c B820     		movs	r0, #184
 669 006e FFF7FEFF 		bl	Data_To_Transfer
 670              	.L22:
 179:L6470.c       ****             {
 671              		.loc 1 179 0
 672 0072 FFF7FEFF 		bl	Pin_BusyMotorY_Read
 673 0076 0346     		mov	r3, r0
 674 0078 002B     		cmp	r3, #0
 675 007a EED0     		beq	.L23
 185:L6470.c       ****                 }  
 186:L6470.c       ****             }
 187:L6470.c       ****             CyDelay(100);//for stage stablization
 676              		.loc 1 187 0
 677 007c 6420     		movs	r0, #100
 678 007e FFF7FEFF 		bl	CyDelay
 188:L6470.c       ****             Read_All_Optical_Encoder();
 679              		.loc 1 188 0
 680 0082 FFF7FEFF 		bl	Read_All_Optical_Encoder
 189:L6470.c       ****             if(ADC_SAR_Seq_GetResult16(1) < Proxy_Sensor_Threshold)
 681              		.loc 1 189 0
 682 0086 0120     		movs	r0, #1
 683 0088 FFF7FEFF 		bl	ADC_SAR_Seq_GetResult16
 684 008c 0346     		mov	r3, r0
 685 008e 182B     		cmp	r3, #24
 686 0090 1ADC     		bgt	.L21
 190:L6470.c       ****             {
 191:L6470.c       ****                 if(abs(now_Y_QuadPosition - Y_QuadPosition) > 4000)
 687              		.loc 1 191 0
 688 0092 5A4B     		ldr	r3, .L33+12
 689 0094 1B68     		ldr	r3, [r3]
 690 0096 7A68     		ldr	r2, [r7, #4]
 691 0098 D31A     		subs	r3, r2, r3
 692 009a 002B     		cmp	r3, #0
 693 009c B8BF     		it	lt
 694 009e 5B42     		rsblt	r3, r3, #0
 695 00a0 B3F57A6F 		cmp	r3, #4000
 696 00a4 08DD     		ble	.L24
 192:L6470.c       ****                 {
 193:L6470.c       ****                     Error = 9;//Y_Switch_Not_Working;
 697              		.loc 1 193 0
 698 00a6 534B     		ldr	r3, .L33+4
 699 00a8 0922     		movs	r2, #9
 700 00aa 1A60     		str	r2, [r3]
 194:L6470.c       ****                     Write_Debug_UART_Char("Y_Switch_Not_Working***********[y1]  \r\n");
 701              		.loc 1 194 0
 702 00ac 5648     		ldr	r0, .L33+24
 703 00ae FFF7FEFF 		bl	Write_Debug_UART_Char
 195:L6470.c       ****                     UART_print_all_values();
 704              		.loc 1 195 0
 705 00b2 FFF7FEFF 		bl	UART_print_all_values
 706 00b6 07E0     		b	.L21
 707              	.L24:
 196:L6470.c       ****                 }
 197:L6470.c       ****                 else
 198:L6470.c       ****                 {
 199:L6470.c       ****                     Error = 7;//Y_Motor_Not_Working;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 18


 708              		.loc 1 199 0
 709 00b8 4E4B     		ldr	r3, .L33+4
 710 00ba 0722     		movs	r2, #7
 711 00bc 1A60     		str	r2, [r3]
 200:L6470.c       ****                     Write_Debug_UART_Char("Y_Motor_Not_Working***********[y2]  \r\n");
 712              		.loc 1 200 0
 713 00be 5348     		ldr	r0, .L33+28
 714 00c0 FFF7FEFF 		bl	Write_Debug_UART_Char
 201:L6470.c       ****                     UART_print_all_values();
 715              		.loc 1 201 0
 716 00c4 FFF7FEFF 		bl	UART_print_all_values
 717              	.L21:
 202:L6470.c       ****                 }
 203:L6470.c       ****             }
 204:L6470.c       ****         }
 205:L6470.c       ****         CyDelay(200);//requred to reduce the step error after homing
 718              		.loc 1 205 0
 719 00c8 C820     		movs	r0, #200
 720 00ca FFF7FEFF 		bl	CyDelay
 206:L6470.c       ****         now_Y_QuadPosition = Y_QuadPosition;
 721              		.loc 1 206 0
 722 00ce 4B4B     		ldr	r3, .L33+12
 723 00d0 1B68     		ldr	r3, [r3]
 724 00d2 7B60     		str	r3, [r7, #4]
 207:L6470.c       ****         if(ADC_SAR_Seq_GetResult16(1) > Proxy_Sensor_Threshold)
 725              		.loc 1 207 0
 726 00d4 0120     		movs	r0, #1
 727 00d6 FFF7FEFF 		bl	ADC_SAR_Seq_GetResult16
 728 00da 0346     		mov	r3, r0
 729 00dc 192B     		cmp	r3, #25
 730 00de 59DD     		ble	.L29
 208:L6470.c       ****         {
 209:L6470.c       ****             SetParam(x_MAX_SPEED, MaxSpdCalc(50));
 731              		.loc 1 209 0
 732 00e0 4B48     		ldr	r0, .L33+32
 733 00e2 FFF7FEFF 		bl	MaxSpdCalc
 734 00e6 0346     		mov	r3, r0
 735 00e8 1946     		mov	r1, r3
 736 00ea 0720     		movs	r0, #7
 737 00ec FFF7FEFF 		bl	SetParam
 210:L6470.c       ****             Move(FWD, OneRotation * 2);
 738              		.loc 1 210 0
 739 00f0 4FF4FA41 		mov	r1, #32000
 740 00f4 0120     		movs	r0, #1
 741 00f6 FFF7FEFF 		bl	Move
 211:L6470.c       ****             while (Pin_BusyMotorY_Read() == 0)
 742              		.loc 1 211 0
 743 00fa 18E0     		b	.L26
 744              	.L27:
 212:L6470.c       ****             {
 213:L6470.c       ****                 if(ADC_SAR_Seq_GetResult16(1) < Proxy_Sensor_Threshold)
 745              		.loc 1 213 0
 746 00fc 0120     		movs	r0, #1
 747 00fe FFF7FEFF 		bl	ADC_SAR_Seq_GetResult16
 748 0102 0346     		mov	r3, r0
 749 0104 182B     		cmp	r3, #24
 750 0106 12DC     		bgt	.L26
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 19


 214:L6470.c       ****                 {
 215:L6470.c       ****                     Y_last_position = 0;
 751              		.loc 1 215 0
 752 0108 3B4B     		ldr	r3, .L33+8
 753 010a 0022     		movs	r2, #0
 754 010c 1A60     		str	r2, [r3]
 216:L6470.c       ****                     Y_QuadPosition=0;
 755              		.loc 1 216 0
 756 010e 3B4B     		ldr	r3, .L33+12
 757 0110 0022     		movs	r2, #0
 758 0112 1A60     		str	r2, [r3]
 217:L6470.c       ****                     QuadDec_XY_Stop();
 759              		.loc 1 217 0
 760 0114 FFF7FEFF 		bl	QuadDec_XY_Stop
 218:L6470.c       ****                     QuadDec_XY_Start();
 761              		.loc 1 218 0
 762 0118 FFF7FEFF 		bl	QuadDec_XY_Start
 219:L6470.c       ****                     QuadDec_XY_SetCounter(0);
 763              		.loc 1 219 0
 764 011c 0020     		movs	r0, #0
 765 011e FFF7FEFF 		bl	QuadDec_XY_SetCounter
 220:L6470.c       ****                     Buffer_Y_QuadPosition = 0;
 766              		.loc 1 220 0
 767 0122 374B     		ldr	r3, .L33+16
 768 0124 0022     		movs	r2, #0
 769 0126 1A60     		str	r2, [r3]
 221:L6470.c       ****                     Data_To_Transfer(x_HARD_STOP);
 770              		.loc 1 221 0
 771 0128 B820     		movs	r0, #184
 772 012a FFF7FEFF 		bl	Data_To_Transfer
 773              	.L26:
 211:L6470.c       ****             {
 774              		.loc 1 211 0
 775 012e FFF7FEFF 		bl	Pin_BusyMotorY_Read
 776 0132 0346     		mov	r3, r0
 777 0134 002B     		cmp	r3, #0
 778 0136 E1D0     		beq	.L27
 222:L6470.c       ****                 }
 223:L6470.c       ****             }
 224:L6470.c       ****             CyDelay(100);//for stage stablization
 779              		.loc 1 224 0
 780 0138 6420     		movs	r0, #100
 781 013a FFF7FEFF 		bl	CyDelay
 225:L6470.c       ****             Read_All_Optical_Encoder();
 782              		.loc 1 225 0
 783 013e FFF7FEFF 		bl	Read_All_Optical_Encoder
 226:L6470.c       ****             if(ADC_SAR_Seq_GetResult16(1) > Proxy_Sensor_Threshold)
 784              		.loc 1 226 0
 785 0142 0120     		movs	r0, #1
 786 0144 FFF7FEFF 		bl	ADC_SAR_Seq_GetResult16
 787 0148 0346     		mov	r3, r0
 788 014a 192B     		cmp	r3, #25
 789 014c 22DD     		ble	.L29
 227:L6470.c       ****             {
 228:L6470.c       ****                 if(abs(now_Y_QuadPosition - Y_QuadPosition) > 4000)
 790              		.loc 1 228 0
 791 014e 2B4B     		ldr	r3, .L33+12
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 20


 792 0150 1B68     		ldr	r3, [r3]
 793 0152 7A68     		ldr	r2, [r7, #4]
 794 0154 D31A     		subs	r3, r2, r3
 795 0156 002B     		cmp	r3, #0
 796 0158 B8BF     		it	lt
 797 015a 5B42     		rsblt	r3, r3, #0
 798 015c B3F57A6F 		cmp	r3, #4000
 799 0160 08DD     		ble	.L28
 229:L6470.c       ****                 {
 230:L6470.c       ****                     Error = 9;//Y_Switch_Not_Working;
 800              		.loc 1 230 0
 801 0162 244B     		ldr	r3, .L33+4
 802 0164 0922     		movs	r2, #9
 803 0166 1A60     		str	r2, [r3]
 231:L6470.c       ****                     Write_Debug_UART_Char("Y_Switch_Not_Working***********[y3]  \r\n");
 804              		.loc 1 231 0
 805 0168 2A48     		ldr	r0, .L33+36
 806 016a FFF7FEFF 		bl	Write_Debug_UART_Char
 232:L6470.c       ****                     UART_print_all_values();
 807              		.loc 1 232 0
 808 016e FFF7FEFF 		bl	UART_print_all_values
 809 0172 0FE0     		b	.L29
 810              	.L28:
 233:L6470.c       ****                 }
 234:L6470.c       ****                 else
 235:L6470.c       ****                 {
 236:L6470.c       ****                     Error = 7;//Y_Motor_Not_Working;
 811              		.loc 1 236 0
 812 0174 1F4B     		ldr	r3, .L33+4
 813 0176 0722     		movs	r2, #7
 814 0178 1A60     		str	r2, [r3]
 237:L6470.c       ****                     Write_Debug_UART_Char("Y_Motor_Not_Working***********[y4]  \r\n");
 815              		.loc 1 237 0
 816 017a 2748     		ldr	r0, .L33+40
 817 017c FFF7FEFF 		bl	Write_Debug_UART_Char
 238:L6470.c       ****                     UART_print_all_values();
 818              		.loc 1 238 0
 819 0180 FFF7FEFF 		bl	UART_print_all_values
 820 0184 06E0     		b	.L29
 821              	.L20:
 239:L6470.c       ****                 }
 240:L6470.c       ****             }
 241:L6470.c       ****         }
 242:L6470.c       ****     }
 243:L6470.c       ****     else
 244:L6470.c       ****         Error = check_Error('Y','H');
 822              		.loc 1 244 0
 823 0186 4821     		movs	r1, #72
 824 0188 5920     		movs	r0, #89
 825 018a FFF7FEFF 		bl	check_Error
 826 018e 0246     		mov	r2, r0
 827 0190 184B     		ldr	r3, .L33+4
 828 0192 1A60     		str	r2, [r3]
 829              	.L29:
 245:L6470.c       ****     if(Error == 0)
 830              		.loc 1 245 0
 831 0194 174B     		ldr	r3, .L33+4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 21


 832 0196 1B68     		ldr	r3, [r3]
 833 0198 002B     		cmp	r3, #0
 834 019a 12D1     		bne	.L30
 246:L6470.c       ****     {
 247:L6470.c       ****         Y_last_position = 0;
 835              		.loc 1 247 0
 836 019c 164B     		ldr	r3, .L33+8
 837 019e 0022     		movs	r2, #0
 838 01a0 1A60     		str	r2, [r3]
 248:L6470.c       ****         QuadDec_XY_SetCounter(0);
 839              		.loc 1 248 0
 840 01a2 0020     		movs	r0, #0
 841 01a4 FFF7FEFF 		bl	QuadDec_XY_SetCounter
 249:L6470.c       ****         Buffer_Y_QuadPosition = 0;
 842              		.loc 1 249 0
 843 01a8 154B     		ldr	r3, .L33+16
 844 01aa 0022     		movs	r2, #0
 845 01ac 1A60     		str	r2, [r3]
 250:L6470.c       ****         Y_QuadPosition =0 ;
 846              		.loc 1 250 0
 847 01ae 134B     		ldr	r3, .L33+12
 848 01b0 0022     		movs	r2, #0
 849 01b2 1A60     		str	r2, [r3]
 251:L6470.c       ****         HomeY_done = true;
 850              		.loc 1 251 0
 851 01b4 194B     		ldr	r3, .L33+44
 852 01b6 0122     		movs	r2, #1
 853 01b8 1A70     		strb	r2, [r3]
 252:L6470.c       ****         Write_Debug_UART_Char("HomeY executed  \r\n");
 854              		.loc 1 252 0
 855 01ba 1948     		ldr	r0, .L33+48
 856 01bc FFF7FEFF 		bl	Write_Debug_UART_Char
 857 01c0 07E0     		b	.L31
 858              	.L30:
 253:L6470.c       ****     }
 254:L6470.c       ****     else
 255:L6470.c       ****     {
 256:L6470.c       ****         HomeY_done = false;
 859              		.loc 1 256 0
 860 01c2 164B     		ldr	r3, .L33+44
 861 01c4 0022     		movs	r2, #0
 862 01c6 1A70     		strb	r2, [r3]
 257:L6470.c       ****         Write_Debug_UART_Char("HomeY_Error***********[y5]  \r\n");
 863              		.loc 1 257 0
 864 01c8 1648     		ldr	r0, .L33+52
 865 01ca FFF7FEFF 		bl	Write_Debug_UART_Char
 258:L6470.c       ****         UART_print_all_values();
 866              		.loc 1 258 0
 867 01ce FFF7FEFF 		bl	UART_print_all_values
 868              	.L31:
 259:L6470.c       ****     }
 260:L6470.c       ****     disconnect_all_motor();
 869              		.loc 1 260 0
 870 01d2 FFF7FEFF 		bl	disconnect_all_motor
 261:L6470.c       ****     Buffer_Y_QuadPosition = -QuadDec_XY_GetCounter();
 871              		.loc 1 261 0
 872 01d6 FFF7FEFF 		bl	QuadDec_XY_GetCounter
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 22


 873 01da 0346     		mov	r3, r0
 874 01dc 5B42     		negs	r3, r3
 875 01de 084A     		ldr	r2, .L33+16
 876 01e0 1360     		str	r3, [r2]
 262:L6470.c       ****     return Error;
 877              		.loc 1 262 0
 878 01e2 044B     		ldr	r3, .L33+4
 879 01e4 1B68     		ldr	r3, [r3]
 263:L6470.c       **** }
 880              		.loc 1 263 0
 881 01e6 1846     		mov	r0, r3
 882 01e8 0837     		adds	r7, r7, #8
 883              		.cfi_def_cfa_offset 8
 884 01ea BD46     		mov	sp, r7
 885              		.cfi_def_cfa_register 13
 886              		@ sp needed
 887 01ec 80BD     		pop	{r7, pc}
 888              	.L34:
 889 01ee 00BF     		.align	2
 890              	.L33:
 891 01f0 1C010000 		.word	.LC8
 892 01f4 00000000 		.word	Error
 893 01f8 00000000 		.word	Y_last_position
 894 01fc 00000000 		.word	Y_QuadPosition
 895 0200 00000000 		.word	Buffer_Y_QuadPosition
 896 0204 00530700 		.word	480000
 897 0208 38010000 		.word	.LC9
 898 020c 60010000 		.word	.LC10
 899 0210 00004842 		.word	1112014848
 900 0214 88010000 		.word	.LC11
 901 0218 B0010000 		.word	.LC12
 902 021c 00000000 		.word	HomeY_done
 903 0220 D8010000 		.word	.LC13
 904 0224 EC010000 		.word	.LC14
 905              		.cfi_endproc
 906              	.LFE65:
 907              		.size	home_Y, .-home_Y
 908              		.section	.rodata
 909 020b 00       		.align	2
 910              	.LC15:
 911 020c 486F6D65 		.ascii	"HomeZ Command Recived  \015\012\000"
 911      5A20436F 
 911      6D6D616E 
 911      64205265 
 911      63697665 
 912 0226 0000     		.align	2
 913              	.LC16:
 914 0228 5A5F5377 		.ascii	"Z_Switch_Not_Working***********[z1]  \015\012\000"
 914      69746368 
 914      5F4E6F74 
 914      5F576F72 
 914      6B696E67 
 915              		.align	2
 916              	.LC17:
 917 0250 5A5F4D6F 		.ascii	"Z_Motor_Not_Working***********[z2]  \015\012\000"
 917      746F725F 
 917      4E6F745F 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 23


 917      576F726B 
 917      696E672A 
 918 0277 00       		.align	2
 919              	.LC18:
 920 0278 5A5F5377 		.ascii	"Z_Switch_Not_Working***********[z3]  \015\012\000"
 920      69746368 
 920      5F4E6F74 
 920      5F576F72 
 920      6B696E67 
 921              		.align	2
 922              	.LC19:
 923 02a0 5A5F4D6F 		.ascii	"Z_Motor_Not_Working***********[z4]  \015\012\000"
 923      746F725F 
 923      4E6F745F 
 923      576F726B 
 923      696E672A 
 924 02c7 00       		.align	2
 925              	.LC20:
 926 02c8 486F6D65 		.ascii	"HomeZ executed  \015\012\000"
 926      5A206578 
 926      65637574 
 926      65642020 
 926      0D0A00
 927 02db 00       		.align	2
 928              	.LC21:
 929 02dc 486F6D65 		.ascii	"HomeZ_Error***********[z5]  \015\012\000"
 929      5A5F4572 
 929      726F722A 
 929      2A2A2A2A 
 929      2A2A2A2A 
 930              		.section	.text.home_Z,"ax",%progbits
 931              		.align	2
 932              		.global	home_Z
 933              		.thumb
 934              		.thumb_func
 935              		.type	home_Z, %function
 936              	home_Z:
 937              	.LFB66:
 264:L6470.c       **** int home_Z()
 265:L6470.c       **** {
 938              		.loc 1 265 0
 939              		.cfi_startproc
 940              		@ args = 0, pretend = 0, frame = 8
 941              		@ frame_needed = 1, uses_anonymous_args = 0
 942 0000 80B5     		push	{r7, lr}
 943              		.cfi_def_cfa_offset 8
 944              		.cfi_offset 7, -8
 945              		.cfi_offset 14, -4
 946 0002 82B0     		sub	sp, sp, #8
 947              		.cfi_def_cfa_offset 16
 948 0004 00AF     		add	r7, sp, #0
 949              		.cfi_def_cfa_register 7
 266:L6470.c       ****     Write_Debug_UART_Char("HomeZ Command Recived  \r\n");
 950              		.loc 1 266 0
 951 0006 7548     		ldr	r0, .L50
 952 0008 FFF7FEFF 		bl	Write_Debug_UART_Char
 267:L6470.c       ****     Error = 0;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 24


 953              		.loc 1 267 0
 954 000c 744B     		ldr	r3, .L50+4
 955 000e 0022     		movs	r2, #0
 956 0010 1A60     		str	r2, [r3]
 268:L6470.c       ****     Configure_L6470_For_Z_Motor();
 957              		.loc 1 268 0
 958 0012 FFF7FEFF 		bl	Configure_L6470_For_Z_Motor
 269:L6470.c       ****     QuadDec_Z_Stop();
 959              		.loc 1 269 0
 960 0016 FFF7FEFF 		bl	QuadDec_Z_Stop
 270:L6470.c       ****     QuadDec_Z_Start();
 961              		.loc 1 270 0
 962 001a FFF7FEFF 		bl	QuadDec_Z_Start
 271:L6470.c       ****     //QuadDec_XY_SetCounter(0);
 272:L6470.c       ****     Z_last_position = 0;
 963              		.loc 1 272 0
 964 001e 714B     		ldr	r3, .L50+8
 965 0020 0022     		movs	r2, #0
 966 0022 1A60     		str	r2, [r3]
 273:L6470.c       ****     Z_QuadPosition =0 ;
 967              		.loc 1 273 0
 968 0024 704B     		ldr	r3, .L50+12
 969 0026 0022     		movs	r2, #0
 970 0028 1A60     		str	r2, [r3]
 274:L6470.c       ****     int32 now_Z_QuadPosition = Z_QuadPosition;
 971              		.loc 1 274 0
 972 002a 6F4B     		ldr	r3, .L50+12
 973 002c 1B68     		ldr	r3, [r3]
 974 002e 3B60     		str	r3, [r7]
 275:L6470.c       ****     int sensor_flag = 0;
 975              		.loc 1 275 0
 976 0030 0023     		movs	r3, #0
 977 0032 7B60     		str	r3, [r7, #4]
 276:L6470.c       ****     if(check_Error('Z','H') == 0)
 978              		.loc 1 276 0
 979 0034 4821     		movs	r1, #72
 980 0036 5A20     		movs	r0, #90
 981 0038 FFF7FEFF 		bl	check_Error
 982 003c 0346     		mov	r3, r0
 983 003e 002B     		cmp	r3, #0
 984 0040 40F0A080 		bne	.L36
 277:L6470.c       ****     {
 278:L6470.c       ****         if(ADC_SAR_Seq_GetResult16(2) < Proxy_Sensor_Threshold)
 985              		.loc 1 278 0
 986 0044 0220     		movs	r0, #2
 987 0046 FFF7FEFF 		bl	ADC_SAR_Seq_GetResult16
 988 004a 0346     		mov	r3, r0
 989 004c 182B     		cmp	r3, #24
 990 004e 42DC     		bgt	.L37
 279:L6470.c       ****         {
 280:L6470.c       ****             Move(REV, OneRotation * 60); 
 991              		.loc 1 280 0
 992 0050 6649     		ldr	r1, .L50+16
 993 0052 0020     		movs	r0, #0
 994 0054 FFF7FEFF 		bl	Move
 281:L6470.c       ****             while (Pin_BusyMotorZ_Read() == 0)
 995              		.loc 1 281 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 25


 996 0058 10E0     		b	.L38
 997              	.L39:
 282:L6470.c       ****             {
 283:L6470.c       ****                 if ((ADC_SAR_Seq_GetResult16(2) > Proxy_Sensor_Threshold)  && (sensor_flag == 0))
 998              		.loc 1 283 0
 999 005a 0220     		movs	r0, #2
 1000 005c FFF7FEFF 		bl	ADC_SAR_Seq_GetResult16
 1001 0060 0346     		mov	r3, r0
 1002 0062 192B     		cmp	r3, #25
 1003 0064 0ADD     		ble	.L38
 1004              		.loc 1 283 0 is_stmt 0 discriminator 1
 1005 0066 7B68     		ldr	r3, [r7, #4]
 1006 0068 002B     		cmp	r3, #0
 1007 006a 07D1     		bne	.L38
 284:L6470.c       ****                 {
 285:L6470.c       ****                     CyDelay(100);// requred as a key debouncing
 1008              		.loc 1 285 0 is_stmt 1
 1009 006c 6420     		movs	r0, #100
 1010 006e FFF7FEFF 		bl	CyDelay
 286:L6470.c       ****                     Data_To_Transfer(x_HARD_STOP);
 1011              		.loc 1 286 0
 1012 0072 B820     		movs	r0, #184
 1013 0074 FFF7FEFF 		bl	Data_To_Transfer
 287:L6470.c       ****                     sensor_flag = 1;
 1014              		.loc 1 287 0
 1015 0078 0123     		movs	r3, #1
 1016 007a 7B60     		str	r3, [r7, #4]
 1017              	.L38:
 281:L6470.c       ****             {
 1018              		.loc 1 281 0
 1019 007c FFF7FEFF 		bl	Pin_BusyMotorZ_Read
 1020 0080 0346     		mov	r3, r0
 1021 0082 002B     		cmp	r3, #0
 1022 0084 E9D0     		beq	.L39
 288:L6470.c       ****                 }
 289:L6470.c       ****             }
 290:L6470.c       ****             CyDelay(100);//for stage stablization
 1023              		.loc 1 290 0
 1024 0086 6420     		movs	r0, #100
 1025 0088 FFF7FEFF 		bl	CyDelay
 291:L6470.c       ****             Read_All_Optical_Encoder();
 1026              		.loc 1 291 0
 1027 008c FFF7FEFF 		bl	Read_All_Optical_Encoder
 292:L6470.c       ****             if(ADC_SAR_Seq_GetResult16(2) < Proxy_Sensor_Threshold)
 1028              		.loc 1 292 0
 1029 0090 0220     		movs	r0, #2
 1030 0092 FFF7FEFF 		bl	ADC_SAR_Seq_GetResult16
 1031 0096 0346     		mov	r3, r0
 1032 0098 182B     		cmp	r3, #24
 1033 009a 1ADC     		bgt	.L40
 293:L6470.c       ****             {
 294:L6470.c       ****                 if(abs(now_Z_QuadPosition - Z_QuadPosition) > 4000)
 1034              		.loc 1 294 0
 1035 009c 524B     		ldr	r3, .L50+12
 1036 009e 1B68     		ldr	r3, [r3]
 1037 00a0 3A68     		ldr	r2, [r7]
 1038 00a2 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 26


 1039 00a4 002B     		cmp	r3, #0
 1040 00a6 B8BF     		it	lt
 1041 00a8 5B42     		rsblt	r3, r3, #0
 1042 00aa B3F57A6F 		cmp	r3, #4000
 1043 00ae 08DD     		ble	.L41
 295:L6470.c       ****                 {
 296:L6470.c       ****                     Error = 15;//Z_Switch_Not_Working;
 1044              		.loc 1 296 0
 1045 00b0 4B4B     		ldr	r3, .L50+4
 1046 00b2 0F22     		movs	r2, #15
 1047 00b4 1A60     		str	r2, [r3]
 297:L6470.c       ****                     Write_Debug_UART_Char("Z_Switch_Not_Working***********[z1]  \r\n");
 1048              		.loc 1 297 0
 1049 00b6 4E48     		ldr	r0, .L50+20
 1050 00b8 FFF7FEFF 		bl	Write_Debug_UART_Char
 298:L6470.c       ****                     UART_print_all_values();
 1051              		.loc 1 298 0
 1052 00bc FFF7FEFF 		bl	UART_print_all_values
 1053 00c0 07E0     		b	.L40
 1054              	.L41:
 299:L6470.c       ****                 }
 300:L6470.c       ****                 else
 301:L6470.c       ****                 {
 302:L6470.c       ****                     Error = 13;//Z_Motor_Not_Working;
 1055              		.loc 1 302 0
 1056 00c2 474B     		ldr	r3, .L50+4
 1057 00c4 0D22     		movs	r2, #13
 1058 00c6 1A60     		str	r2, [r3]
 303:L6470.c       ****                     Write_Debug_UART_Char("Z_Motor_Not_Working***********[z2]  \r\n");
 1059              		.loc 1 303 0
 1060 00c8 4A48     		ldr	r0, .L50+24
 1061 00ca FFF7FEFF 		bl	Write_Debug_UART_Char
 304:L6470.c       ****                     UART_print_all_values();
 1062              		.loc 1 304 0
 1063 00ce FFF7FEFF 		bl	UART_print_all_values
 1064              	.L40:
 305:L6470.c       ****                 }
 306:L6470.c       ****             }
 307:L6470.c       ****             sensor_flag = 0;
 1065              		.loc 1 307 0
 1066 00d2 0023     		movs	r3, #0
 1067 00d4 7B60     		str	r3, [r7, #4]
 1068              	.L37:
 308:L6470.c       ****         }
 309:L6470.c       ****         CyDelay(200);//requred to reduce the step error after homing
 1069              		.loc 1 309 0
 1070 00d6 C820     		movs	r0, #200
 1071 00d8 FFF7FEFF 		bl	CyDelay
 310:L6470.c       ****         now_Z_QuadPosition = Z_QuadPosition;
 1072              		.loc 1 310 0
 1073 00dc 424B     		ldr	r3, .L50+12
 1074 00de 1B68     		ldr	r3, [r3]
 1075 00e0 3B60     		str	r3, [r7]
 311:L6470.c       ****         if(ADC_SAR_Seq_GetResult16(2) > Proxy_Sensor_Threshold)
 1076              		.loc 1 311 0
 1077 00e2 0220     		movs	r0, #2
 1078 00e4 FFF7FEFF 		bl	ADC_SAR_Seq_GetResult16
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 27


 1079 00e8 0346     		mov	r3, r0
 1080 00ea 192B     		cmp	r3, #25
 1081 00ec 51DD     		ble	.L46
 312:L6470.c       ****         {
 313:L6470.c       ****             SetParam(x_MAX_SPEED, MaxSpdCalc(100));
 1082              		.loc 1 313 0
 1083 00ee 4248     		ldr	r0, .L50+28
 1084 00f0 FFF7FEFF 		bl	MaxSpdCalc
 1085 00f4 0346     		mov	r3, r0
 1086 00f6 1946     		mov	r1, r3
 1087 00f8 0720     		movs	r0, #7
 1088 00fa FFF7FEFF 		bl	SetParam
 314:L6470.c       ****             Move(FWD, OneRotation * 4); 
 1089              		.loc 1 314 0
 1090 00fe 4FF47A41 		mov	r1, #64000
 1091 0102 0120     		movs	r0, #1
 1092 0104 FFF7FEFF 		bl	Move
 315:L6470.c       ****             while (Pin_BusyMotorZ_Read() == 0)
 1093              		.loc 1 315 0
 1094 0108 10E0     		b	.L43
 1095              	.L44:
 316:L6470.c       ****             {
 317:L6470.c       ****                 if ((ADC_SAR_Seq_GetResult16(2) < Proxy_Sensor_Threshold)  && (sensor_flag == 0))
 1096              		.loc 1 317 0
 1097 010a 0220     		movs	r0, #2
 1098 010c FFF7FEFF 		bl	ADC_SAR_Seq_GetResult16
 1099 0110 0346     		mov	r3, r0
 1100 0112 182B     		cmp	r3, #24
 1101 0114 0ADC     		bgt	.L43
 1102              		.loc 1 317 0 is_stmt 0 discriminator 1
 1103 0116 7B68     		ldr	r3, [r7, #4]
 1104 0118 002B     		cmp	r3, #0
 1105 011a 07D1     		bne	.L43
 318:L6470.c       ****                 {
 319:L6470.c       ****                     QuadDec_Z_SetCounter(0);
 1106              		.loc 1 319 0 is_stmt 1
 1107 011c 0020     		movs	r0, #0
 1108 011e FFF7FEFF 		bl	QuadDec_Z_SetCounter
 320:L6470.c       ****                     Data_To_Transfer(x_HARD_STOP);
 1109              		.loc 1 320 0
 1110 0122 B820     		movs	r0, #184
 1111 0124 FFF7FEFF 		bl	Data_To_Transfer
 321:L6470.c       ****                     sensor_flag = 1;
 1112              		.loc 1 321 0
 1113 0128 0123     		movs	r3, #1
 1114 012a 7B60     		str	r3, [r7, #4]
 1115              	.L43:
 315:L6470.c       ****             {
 1116              		.loc 1 315 0
 1117 012c FFF7FEFF 		bl	Pin_BusyMotorZ_Read
 1118 0130 0346     		mov	r3, r0
 1119 0132 002B     		cmp	r3, #0
 1120 0134 E9D0     		beq	.L44
 322:L6470.c       ****                 }
 323:L6470.c       ****             }
 324:L6470.c       ****             CyDelay(100);//for stage stablization
 1121              		.loc 1 324 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 28


 1122 0136 6420     		movs	r0, #100
 1123 0138 FFF7FEFF 		bl	CyDelay
 325:L6470.c       ****             Read_All_Optical_Encoder();
 1124              		.loc 1 325 0
 1125 013c FFF7FEFF 		bl	Read_All_Optical_Encoder
 326:L6470.c       ****             if(ADC_SAR_Seq_GetResult16(2) > Proxy_Sensor_Threshold)
 1126              		.loc 1 326 0
 1127 0140 0220     		movs	r0, #2
 1128 0142 FFF7FEFF 		bl	ADC_SAR_Seq_GetResult16
 1129 0146 0346     		mov	r3, r0
 1130 0148 192B     		cmp	r3, #25
 1131 014a 22DD     		ble	.L46
 327:L6470.c       ****             {
 328:L6470.c       ****                 if(abs(now_Z_QuadPosition - Z_QuadPosition) > 4000)
 1132              		.loc 1 328 0
 1133 014c 264B     		ldr	r3, .L50+12
 1134 014e 1B68     		ldr	r3, [r3]
 1135 0150 3A68     		ldr	r2, [r7]
 1136 0152 D31A     		subs	r3, r2, r3
 1137 0154 002B     		cmp	r3, #0
 1138 0156 B8BF     		it	lt
 1139 0158 5B42     		rsblt	r3, r3, #0
 1140 015a B3F57A6F 		cmp	r3, #4000
 1141 015e 08DD     		ble	.L45
 329:L6470.c       ****                 {
 330:L6470.c       ****                     Error = 15;//Z_Switch_Not_Working;
 1142              		.loc 1 330 0
 1143 0160 1F4B     		ldr	r3, .L50+4
 1144 0162 0F22     		movs	r2, #15
 1145 0164 1A60     		str	r2, [r3]
 331:L6470.c       ****                     Write_Debug_UART_Char("Z_Switch_Not_Working***********[z3]  \r\n");
 1146              		.loc 1 331 0
 1147 0166 2548     		ldr	r0, .L50+32
 1148 0168 FFF7FEFF 		bl	Write_Debug_UART_Char
 332:L6470.c       ****                     UART_print_all_values();
 1149              		.loc 1 332 0
 1150 016c FFF7FEFF 		bl	UART_print_all_values
 1151 0170 0FE0     		b	.L46
 1152              	.L45:
 333:L6470.c       ****                 }
 334:L6470.c       ****                 else
 335:L6470.c       ****                 {
 336:L6470.c       ****                     Error = 13;//Z_Motor_Not_Working;
 1153              		.loc 1 336 0
 1154 0172 1B4B     		ldr	r3, .L50+4
 1155 0174 0D22     		movs	r2, #13
 1156 0176 1A60     		str	r2, [r3]
 337:L6470.c       ****                     Write_Debug_UART_Char("Z_Motor_Not_Working***********[z4]  \r\n");
 1157              		.loc 1 337 0
 1158 0178 2148     		ldr	r0, .L50+36
 1159 017a FFF7FEFF 		bl	Write_Debug_UART_Char
 338:L6470.c       ****                     UART_print_all_values();
 1160              		.loc 1 338 0
 1161 017e FFF7FEFF 		bl	UART_print_all_values
 1162 0182 06E0     		b	.L46
 1163              	.L36:
 339:L6470.c       ****                 }
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 29


 340:L6470.c       ****             }
 341:L6470.c       ****         }
 342:L6470.c       ****     }
 343:L6470.c       ****     else
 344:L6470.c       ****         Error = check_Error('Z','H');
 1164              		.loc 1 344 0
 1165 0184 4821     		movs	r1, #72
 1166 0186 5A20     		movs	r0, #90
 1167 0188 FFF7FEFF 		bl	check_Error
 1168 018c 0246     		mov	r2, r0
 1169 018e 144B     		ldr	r3, .L50+4
 1170 0190 1A60     		str	r2, [r3]
 1171              	.L46:
 345:L6470.c       ****     if(Error == 0)
 1172              		.loc 1 345 0
 1173 0192 134B     		ldr	r3, .L50+4
 1174 0194 1B68     		ldr	r3, [r3]
 1175 0196 002B     		cmp	r3, #0
 1176 0198 0FD1     		bne	.L47
 346:L6470.c       ****     {
 347:L6470.c       ****         Z_last_position = 0;
 1177              		.loc 1 347 0
 1178 019a 124B     		ldr	r3, .L50+8
 1179 019c 0022     		movs	r2, #0
 1180 019e 1A60     		str	r2, [r3]
 348:L6470.c       ****         QuadDec_Z_SetCounter(0);
 1181              		.loc 1 348 0
 1182 01a0 0020     		movs	r0, #0
 1183 01a2 FFF7FEFF 		bl	QuadDec_Z_SetCounter
 349:L6470.c       ****         Z_QuadPosition =0 ;
 1184              		.loc 1 349 0
 1185 01a6 104B     		ldr	r3, .L50+12
 1186 01a8 0022     		movs	r2, #0
 1187 01aa 1A60     		str	r2, [r3]
 350:L6470.c       ****         HomeZ_done = true;
 1188              		.loc 1 350 0
 1189 01ac 154B     		ldr	r3, .L50+40
 1190 01ae 0122     		movs	r2, #1
 1191 01b0 1A70     		strb	r2, [r3]
 351:L6470.c       ****         Write_Debug_UART_Char("HomeZ executed  \r\n");
 1192              		.loc 1 351 0
 1193 01b2 1548     		ldr	r0, .L50+44
 1194 01b4 FFF7FEFF 		bl	Write_Debug_UART_Char
 1195 01b8 07E0     		b	.L48
 1196              	.L47:
 352:L6470.c       ****     }
 353:L6470.c       ****     else
 354:L6470.c       ****     {
 355:L6470.c       ****         HomeZ_done = false;
 1197              		.loc 1 355 0
 1198 01ba 124B     		ldr	r3, .L50+40
 1199 01bc 0022     		movs	r2, #0
 1200 01be 1A70     		strb	r2, [r3]
 356:L6470.c       ****         Write_Debug_UART_Char("HomeZ_Error***********[z5]  \r\n");
 1201              		.loc 1 356 0
 1202 01c0 1248     		ldr	r0, .L50+48
 1203 01c2 FFF7FEFF 		bl	Write_Debug_UART_Char
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 30


 357:L6470.c       ****         UART_print_all_values();
 1204              		.loc 1 357 0
 1205 01c6 FFF7FEFF 		bl	UART_print_all_values
 1206              	.L48:
 358:L6470.c       ****     }
 359:L6470.c       ****     disconnect_all_motor();    
 1207              		.loc 1 359 0
 1208 01ca FFF7FEFF 		bl	disconnect_all_motor
 360:L6470.c       ****     return Error;
 1209              		.loc 1 360 0
 1210 01ce 044B     		ldr	r3, .L50+4
 1211 01d0 1B68     		ldr	r3, [r3]
 361:L6470.c       **** }
 1212              		.loc 1 361 0
 1213 01d2 1846     		mov	r0, r3
 1214 01d4 0837     		adds	r7, r7, #8
 1215              		.cfi_def_cfa_offset 8
 1216 01d6 BD46     		mov	sp, r7
 1217              		.cfi_def_cfa_register 13
 1218              		@ sp needed
 1219 01d8 80BD     		pop	{r7, pc}
 1220              	.L51:
 1221 01da 00BF     		.align	2
 1222              	.L50:
 1223 01dc 0C020000 		.word	.LC15
 1224 01e0 00000000 		.word	Error
 1225 01e4 00000000 		.word	Z_last_position
 1226 01e8 00000000 		.word	Z_QuadPosition
 1227 01ec 00A60E00 		.word	960000
 1228 01f0 28020000 		.word	.LC16
 1229 01f4 50020000 		.word	.LC17
 1230 01f8 0000C842 		.word	1120403456
 1231 01fc 78020000 		.word	.LC18
 1232 0200 A0020000 		.word	.LC19
 1233 0204 00000000 		.word	HomeZ_done
 1234 0208 C8020000 		.word	.LC20
 1235 020c DC020000 		.word	.LC21
 1236              		.cfi_endproc
 1237              	.LFE66:
 1238              		.size	home_Z, .-home_Z
 1239              		.section	.rodata
 1240 02fb 00       		.align	2
 1241              	.LC22:
 1242 02fc 476F746F 		.ascii	"GotoX Command Recived--->\000"
 1242      5820436F 
 1242      6D6D616E 
 1242      64205265 
 1242      63697665 
 1243 0316 0000     		.align	2
 1244              	.LC23:
 1245 0318 20200D0A 		.ascii	"  \015\012\000"
 1245      00
 1246 031d 000000   		.align	2
 1247              	.LC24:
 1248 0320 585F4D6F 		.ascii	"X_Motor_Malfunction**********[x9]  \015\012\000"
 1248      746F725F 
 1248      4D616C66 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 31


 1248      756E6374 
 1248      696F6E2A 
 1249 0346 0000     		.align	2
 1250              	.LC25:
 1251 0348 45697468 		.ascii	"Either_X_Encoder_or_X_Motor_Not_Working**********[x"
 1251      65725F58 
 1251      5F456E63 
 1251      6F646572 
 1251      5F6F725F 
 1252 037b 375D2020 		.ascii	"7]  \015\012\000"
 1252      0D0A00
 1253 0382 0000     		.align	2
 1254              	.LC26:
 1255 0384 0D0A00   		.ascii	"\015\012\000"
 1256 0387 00       		.align	2
 1257              	.LC27:
 1258 0388 58204572 		.ascii	"X Error: \000"
 1258      726F723A 
 1258      2000
 1259 0392 0000     		.align	2
 1260              	.LC28:
 1261 0394 52657175 		.ascii	"Requested_X_Step_Exceeding_The_Limit***********[x8]"
 1261      65737465 
 1261      645F585F 
 1261      53746570 
 1261      5F457863 
 1262 03c7 20200D0A 		.ascii	"  \015\012\000"
 1262      00
 1263              		.section	.text.goTo_X,"ax",%progbits
 1264              		.align	2
 1265              		.global	goTo_X
 1266              		.thumb
 1267              		.thumb_func
 1268              		.type	goTo_X, %function
 1269              	goTo_X:
 1270              	.LFB67:
 362:L6470.c       **** int goTo_X(int32 Position_X_Requested)
 363:L6470.c       **** {   
 1271              		.loc 1 363 0
 1272              		.cfi_startproc
 1273              		@ args = 0, pretend = 0, frame = 8
 1274              		@ frame_needed = 1, uses_anonymous_args = 0
 1275 0000 80B5     		push	{r7, lr}
 1276              		.cfi_def_cfa_offset 8
 1277              		.cfi_offset 7, -8
 1278              		.cfi_offset 14, -4
 1279 0002 82B0     		sub	sp, sp, #8
 1280              		.cfi_def_cfa_offset 16
 1281 0004 00AF     		add	r7, sp, #0
 1282              		.cfi_def_cfa_register 7
 1283 0006 7860     		str	r0, [r7, #4]
 364:L6470.c       ****     Enable_Encoder_X(-Buffer_X_QuadPosition);
 1284              		.loc 1 364 0
 1285 0008 644B     		ldr	r3, .L70
 1286 000a 1B68     		ldr	r3, [r3]
 1287 000c 5B42     		negs	r3, r3
 1288 000e 1846     		mov	r0, r3
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 32


 1289 0010 FFF7FEFF 		bl	Enable_Encoder_X
 365:L6470.c       ****     Error = 0;
 1290              		.loc 1 365 0
 1291 0014 624B     		ldr	r3, .L70+4
 1292 0016 0022     		movs	r2, #0
 1293 0018 1A60     		str	r2, [r3]
 366:L6470.c       ****     Write_Debug_UART_Char("GotoX Command Recived--->");
 1294              		.loc 1 366 0
 1295 001a 6248     		ldr	r0, .L70+8
 1296 001c FFF7FEFF 		bl	Write_Debug_UART_Char
 367:L6470.c       ****     Position_X_Requested = (int)Position_X_Requested;
 368:L6470.c       ****     Write_Debug_UART_Int(Position_X_Requested);
 1297              		.loc 1 368 0
 1298 0020 7868     		ldr	r0, [r7, #4]
 1299 0022 FFF7FEFF 		bl	Write_Debug_UART_Int
 369:L6470.c       ****     Write_Debug_UART_Char("  \r\n");
 1300              		.loc 1 369 0
 1301 0026 6048     		ldr	r0, .L70+12
 1302 0028 FFF7FEFF 		bl	Write_Debug_UART_Char
 370:L6470.c       ****     if(Position_X_Requested <= X_Step_Limit)
 1303              		.loc 1 370 0
 1304 002c 7B68     		ldr	r3, [r7, #4]
 1305 002e 5F4A     		ldr	r2, .L70+16
 1306 0030 9342     		cmp	r3, r2
 1307 0032 00F39E80 		bgt	.L53
 371:L6470.c       ****     {
 372:L6470.c       ****         Configure_L6470_For_X_Motor();
 1308              		.loc 1 372 0
 1309 0036 FFF7FEFF 		bl	Configure_L6470_For_X_Motor
 373:L6470.c       ****         if(check_Error('X', 'G') == 0)
 1310              		.loc 1 373 0
 1311 003a 4721     		movs	r1, #71
 1312 003c 5820     		movs	r0, #88
 1313 003e FFF7FEFF 		bl	check_Error
 1314 0042 0346     		mov	r3, r0
 1315 0044 002B     		cmp	r3, #0
 1316 0046 40F08C80 		bne	.L54
 374:L6470.c       ****         {
 375:L6470.c       ****             if(if_all_homing_done())
 1317              		.loc 1 375 0
 1318 004a FFF7FEFF 		bl	if_all_homing_done
 1319 004e 0346     		mov	r3, r0
 1320 0050 002B     		cmp	r3, #0
 1321 0052 00F09680 		beq	.L67
 376:L6470.c       ****             {
 377:L6470.c       ****                 for(No_of_X_Cycle=0;No_of_X_Cycle < step_correction_loop_x;No_of_X_Cycle++)
 1322              		.loc 1 377 0
 1323 0056 564B     		ldr	r3, .L70+20
 1324 0058 0022     		movs	r2, #0
 1325 005a 1A60     		str	r2, [r3]
 1326 005c 68E0     		b	.L56
 1327              	.L65:
 378:L6470.c       ****                 {
 379:L6470.c       ****                     Read_All_Optical_Encoder();
 1328              		.loc 1 379 0
 1329 005e FFF7FEFF 		bl	Read_All_Optical_Encoder
 380:L6470.c       ****                     Position_X_Move = Position_X_Requested - X_QuadPosition;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 33


 1330              		.loc 1 380 0
 1331 0062 544B     		ldr	r3, .L70+24
 1332 0064 1B68     		ldr	r3, [r3]
 1333 0066 7A68     		ldr	r2, [r7, #4]
 1334 0068 D31A     		subs	r3, r2, r3
 1335 006a 534A     		ldr	r2, .L70+28
 1336 006c 1360     		str	r3, [r2]
 381:L6470.c       ****                     if(is_X_Step_Correct(No_of_X_Cycle))
 1337              		.loc 1 381 0
 1338 006e 504B     		ldr	r3, .L70+20
 1339 0070 1B68     		ldr	r3, [r3]
 1340 0072 1846     		mov	r0, r3
 1341 0074 FFF7FEFF 		bl	is_X_Step_Correct
 1342 0078 0346     		mov	r3, r0
 1343 007a 002B     		cmp	r3, #0
 1344 007c 5FD0     		beq	.L69
 382:L6470.c       ****                     {
 383:L6470.c       ****                         if (Position_X_Move > 0)                      // check if movment will be i
 1345              		.loc 1 383 0
 1346 007e 4E4B     		ldr	r3, .L70+28
 1347 0080 1B68     		ldr	r3, [r3]
 1348 0082 002B     		cmp	r3, #0
 1349 0084 05DD     		ble	.L58
 384:L6470.c       ****                             Move(REV, (Position_X_Move));
 1350              		.loc 1 384 0
 1351 0086 4C4B     		ldr	r3, .L70+28
 1352 0088 1B68     		ldr	r3, [r3]
 1353 008a 1946     		mov	r1, r3
 1354 008c 0020     		movs	r0, #0
 1355 008e FFF7FEFF 		bl	Move
 1356              	.L58:
 385:L6470.c       ****                         if (Position_X_Move < 0)                      // check if movment will be i
 1357              		.loc 1 385 0
 1358 0092 494B     		ldr	r3, .L70+28
 1359 0094 1B68     		ldr	r3, [r3]
 1360 0096 002B     		cmp	r3, #0
 1361 0098 17DA     		bge	.L60
 386:L6470.c       ****                             Move(FWD, -(Position_X_Move));
 1362              		.loc 1 386 0
 1363 009a 474B     		ldr	r3, .L70+28
 1364 009c 1B68     		ldr	r3, [r3]
 1365 009e 5B42     		negs	r3, r3
 1366 00a0 1946     		mov	r1, r3
 1367 00a2 0120     		movs	r0, #1
 1368 00a4 FFF7FEFF 		bl	Move
 387:L6470.c       ****                         while (Pin_BusyMotorX_Read() == 0)
 1369              		.loc 1 387 0
 1370 00a8 0FE0     		b	.L60
 1371              	.L61:
 388:L6470.c       ****                         {
 389:L6470.c       ****                             check_Error('X', 'G');
 1372              		.loc 1 389 0
 1373 00aa 4721     		movs	r1, #71
 1374 00ac 5820     		movs	r0, #88
 1375 00ae FFF7FEFF 		bl	check_Error
 390:L6470.c       ****                             Read_All_Optical_Encoder();
 1376              		.loc 1 390 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 34


 1377 00b2 FFF7FEFF 		bl	Read_All_Optical_Encoder
 391:L6470.c       ****                             if(X_QuadPosition > (X_Step_Limit + 100))// to avoid slide brakage, 100
 1378              		.loc 1 391 0
 1379 00b6 3F4B     		ldr	r3, .L70+24
 1380 00b8 1B68     		ldr	r3, [r3]
 1381 00ba 404A     		ldr	r2, .L70+32
 1382 00bc 9342     		cmp	r3, r2
 1383 00be 04DD     		ble	.L60
 392:L6470.c       ****                             {    
 393:L6470.c       ****                                 Reset_All_L6470_Motor();
 1384              		.loc 1 393 0
 1385 00c0 FFF7FEFF 		bl	Reset_All_L6470_Motor
 394:L6470.c       ****                                 Write_Debug_UART_Char("X_Motor_Malfunction**********[x9]  \r\n");
 1386              		.loc 1 394 0
 1387 00c4 3E48     		ldr	r0, .L70+36
 1388 00c6 FFF7FEFF 		bl	Write_Debug_UART_Char
 1389              	.L60:
 387:L6470.c       ****                         {
 1390              		.loc 1 387 0
 1391 00ca FFF7FEFF 		bl	Pin_BusyMotorX_Read
 1392 00ce 0346     		mov	r3, r0
 1393 00d0 002B     		cmp	r3, #0
 1394 00d2 EAD0     		beq	.L61
 395:L6470.c       ****                             }
 396:L6470.c       ****                         }
 397:L6470.c       ****                         Read_All_Optical_Encoder();
 1395              		.loc 1 397 0
 1396 00d4 FFF7FEFF 		bl	Read_All_Optical_Encoder
 398:L6470.c       ****                         Write_Debug_UART_Int(X_QuadPosition);
 1397              		.loc 1 398 0
 1398 00d8 364B     		ldr	r3, .L70+24
 1399 00da 1B68     		ldr	r3, [r3]
 1400 00dc 1846     		mov	r0, r3
 1401 00de FFF7FEFF 		bl	Write_Debug_UART_Int
 399:L6470.c       ****                         if(abs(Position_X_Requested - X_QuadPosition) > X_max_error)
 1402              		.loc 1 399 0
 1403 00e2 344B     		ldr	r3, .L70+24
 1404 00e4 1B68     		ldr	r3, [r3]
 1405 00e6 7A68     		ldr	r2, [r7, #4]
 1406 00e8 D31A     		subs	r3, r2, r3
 1407 00ea 002B     		cmp	r3, #0
 1408 00ec B8BF     		it	lt
 1409 00ee 5B42     		rsblt	r3, r3, #0
 1410 00f0 B3F57A6F 		cmp	r3, #4000
 1411 00f4 07DD     		ble	.L62
 400:L6470.c       ****                         {
 401:L6470.c       ****                             Error = 2;//X_Encoder_Not_Working
 1412              		.loc 1 401 0
 1413 00f6 2A4B     		ldr	r3, .L70+4
 1414 00f8 0222     		movs	r2, #2
 1415 00fa 1A60     		str	r2, [r3]
 402:L6470.c       ****                             UART_print_all_values();
 1416              		.loc 1 402 0
 1417 00fc FFF7FEFF 		bl	UART_print_all_values
 403:L6470.c       ****                             Write_Debug_UART_Char("Either_X_Encoder_or_X_Motor_Not_Working*********
 1418              		.loc 1 403 0
 1419 0100 3048     		ldr	r0, .L70+40
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 35


 1420 0102 FFF7FEFF 		bl	Write_Debug_UART_Char
 1421              	.L62:
 404:L6470.c       ****                         }
 405:L6470.c       ****                         X_last_position = Position_X_Requested;
 1422              		.loc 1 405 0
 1423 0106 304A     		ldr	r2, .L70+44
 1424 0108 7B68     		ldr	r3, [r7, #4]
 1425 010a 1360     		str	r3, [r2]
 406:L6470.c       ****                         if((abs(Position_X_Requested - X_QuadPosition) < X_max_error_After_Correcti
 1426              		.loc 1 406 0
 1427 010c 294B     		ldr	r3, .L70+24
 1428 010e 1B68     		ldr	r3, [r3]
 1429 0110 7A68     		ldr	r2, [r7, #4]
 1430 0112 D31A     		subs	r3, r2, r3
 1431 0114 002B     		cmp	r3, #0
 1432 0116 B8BF     		it	lt
 1433 0118 5B42     		rsblt	r3, r3, #0
 1434 011a 092B     		cmp	r3, #9
 1435 011c 10DD     		ble	.L63
 1436              		.loc 1 406 0 is_stmt 0 discriminator 1
 1437 011e 204B     		ldr	r3, .L70+4
 1438 0120 1B68     		ldr	r3, [r3]
 1439 0122 002B     		cmp	r3, #0
 1440 0124 0CD1     		bne	.L63
 377:L6470.c       ****                 {
 1441              		.loc 1 377 0 is_stmt 1 discriminator 2
 1442 0126 224B     		ldr	r3, .L70+20
 1443 0128 1B68     		ldr	r3, [r3]
 1444 012a 0133     		adds	r3, r3, #1
 1445 012c 204A     		ldr	r2, .L70+20
 1446 012e 1360     		str	r3, [r2]
 1447              	.L56:
 377:L6470.c       ****                 {
 1448              		.loc 1 377 0 is_stmt 0 discriminator 1
 1449 0130 1F4B     		ldr	r3, .L70+20
 1450 0132 1A68     		ldr	r2, [r3]
 1451 0134 254B     		ldr	r3, .L70+48
 1452 0136 1B68     		ldr	r3, [r3]
 1453 0138 9A42     		cmp	r2, r3
 1454 013a 90DB     		blt	.L65
 1455 013c 00E0     		b	.L63
 1456              	.L69:
 407:L6470.c       ****                             break;                            
 408:L6470.c       ****                     }
 409:L6470.c       ****                     else
 410:L6470.c       ****                         break;
 1457              		.loc 1 410 0 is_stmt 1
 1458 013e 00BF     		nop
 1459              	.L63:
 411:L6470.c       ****                 }
 412:L6470.c       ****                 Write_Debug_UART_Char("\r\n");
 1460              		.loc 1 412 0
 1461 0140 2348     		ldr	r0, .L70+52
 1462 0142 FFF7FEFF 		bl	Write_Debug_UART_Char
 413:L6470.c       ****                 Write_Debug_UART_Char("X Error: ");
 1463              		.loc 1 413 0
 1464 0146 2348     		ldr	r0, .L70+56
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 36


 1465 0148 FFF7FEFF 		bl	Write_Debug_UART_Char
 414:L6470.c       ****                 Write_Debug_UART_Int(Position_X_Requested - X_QuadPosition);
 1466              		.loc 1 414 0
 1467 014c 194B     		ldr	r3, .L70+24
 1468 014e 1B68     		ldr	r3, [r3]
 1469 0150 7A68     		ldr	r2, [r7, #4]
 1470 0152 D31A     		subs	r3, r2, r3
 1471 0154 1846     		mov	r0, r3
 1472 0156 FFF7FEFF 		bl	Write_Debug_UART_Int
 415:L6470.c       ****                 Write_Debug_UART_Char("\r\n");
 1473              		.loc 1 415 0
 1474 015a 1D48     		ldr	r0, .L70+52
 1475 015c FFF7FEFF 		bl	Write_Debug_UART_Char
 1476 0160 0FE0     		b	.L67
 1477              	.L54:
 416:L6470.c       ****             }
 417:L6470.c       ****         }
 418:L6470.c       ****         else
 419:L6470.c       ****             Error = check_Error('Z','G');
 1478              		.loc 1 419 0
 1479 0162 4721     		movs	r1, #71
 1480 0164 5A20     		movs	r0, #90
 1481 0166 FFF7FEFF 		bl	check_Error
 1482 016a 0246     		mov	r2, r0
 1483 016c 0C4B     		ldr	r3, .L70+4
 1484 016e 1A60     		str	r2, [r3]
 1485 0170 07E0     		b	.L67
 1486              	.L53:
 420:L6470.c       ****     }
 421:L6470.c       ****     else
 422:L6470.c       ****     {
 423:L6470.c       ****         Error = 5;//Requested_X_Step_Exceeding_The_Limit
 1487              		.loc 1 423 0
 1488 0172 0B4B     		ldr	r3, .L70+4
 1489 0174 0522     		movs	r2, #5
 1490 0176 1A60     		str	r2, [r3]
 424:L6470.c       ****         Write_Debug_UART_Char("Requested_X_Step_Exceeding_The_Limit***********[x8]  \r\n");
 1491              		.loc 1 424 0
 1492 0178 1748     		ldr	r0, .L70+60
 1493 017a FFF7FEFF 		bl	Write_Debug_UART_Char
 425:L6470.c       ****         UART_print_all_values();
 1494              		.loc 1 425 0
 1495 017e FFF7FEFF 		bl	UART_print_all_values
 1496              	.L67:
 426:L6470.c       ****     }
 427:L6470.c       ****     //Timeout_Stop();
 428:L6470.c       ****     Buffer_X_QuadPosition = X_QuadPosition;
 1497              		.loc 1 428 0
 1498 0182 0C4B     		ldr	r3, .L70+24
 1499 0184 1B68     		ldr	r3, [r3]
 1500 0186 054A     		ldr	r2, .L70
 1501 0188 1360     		str	r3, [r2]
 429:L6470.c       ****     disconnect_all_motor();
 1502              		.loc 1 429 0
 1503 018a FFF7FEFF 		bl	disconnect_all_motor
 430:L6470.c       ****     return Error;
 1504              		.loc 1 430 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 37


 1505 018e 044B     		ldr	r3, .L70+4
 1506 0190 1B68     		ldr	r3, [r3]
 431:L6470.c       **** }
 1507              		.loc 1 431 0
 1508 0192 1846     		mov	r0, r3
 1509 0194 0837     		adds	r7, r7, #8
 1510              		.cfi_def_cfa_offset 8
 1511 0196 BD46     		mov	sp, r7
 1512              		.cfi_def_cfa_register 13
 1513              		@ sp needed
 1514 0198 80BD     		pop	{r7, pc}
 1515              	.L71:
 1516 019a 00BF     		.align	2
 1517              	.L70:
 1518 019c 00000000 		.word	Buffer_X_QuadPosition
 1519 01a0 00000000 		.word	Error
 1520 01a4 FC020000 		.word	.LC22
 1521 01a8 18030000 		.word	.LC23
 1522 01ac 10EB0900 		.word	650000
 1523 01b0 00000000 		.word	No_of_X_Cycle
 1524 01b4 00000000 		.word	X_QuadPosition
 1525 01b8 00000000 		.word	Position_X_Move
 1526 01bc 74EB0900 		.word	650100
 1527 01c0 20030000 		.word	.LC24
 1528 01c4 48030000 		.word	.LC25
 1529 01c8 00000000 		.word	X_last_position
 1530 01cc 00000000 		.word	step_correction_loop_x
 1531 01d0 84030000 		.word	.LC26
 1532 01d4 88030000 		.word	.LC27
 1533 01d8 94030000 		.word	.LC28
 1534              		.cfi_endproc
 1535              	.LFE67:
 1536              		.size	goTo_X, .-goTo_X
 1537              		.section	.rodata
 1538              		.align	2
 1539              	.LC29:
 1540 03cc 476F746F 		.ascii	"GotoY Command Recived--->\000"
 1540      5920436F 
 1540      6D6D616E 
 1540      64205265 
 1540      63697665 
 1541 03e6 0000     		.align	2
 1542              	.LC30:
 1543 03e8 595F4D6F 		.ascii	"Y_Motor_Malfunction**********[y9]  \015\012\000"
 1543      746F725F 
 1543      4D616C66 
 1543      756E6374 
 1543      696F6E2A 
 1544 040e 0000     		.align	2
 1545              	.LC31:
 1546 0410 45697468 		.ascii	"Either_Y_Encoder_or_Y_Motor_Not_Working***********["
 1546      65725F59 
 1546      5F456E63 
 1546      6F646572 
 1546      5F6F725F 
 1547 0443 79365D20 		.ascii	"y6]  \015\012\000"
 1547      200D0A00 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 38


 1548 044b 00       		.align	2
 1549              	.LC32:
 1550 044c 59204572 		.ascii	"Y Error: \000"
 1550      726F723A 
 1550      2000
 1551 0456 0000     		.align	2
 1552              	.LC33:
 1553 0458 52657175 		.ascii	"Requested_Y_Step_Exceeding_The_Limit***********[y7]"
 1553      65737465 
 1553      645F595F 
 1553      53746570 
 1553      5F457863 
 1554 048b 20200D0A 		.ascii	"  \015\012\000"
 1554      00
 1555              		.section	.text.goTo_Y,"ax",%progbits
 1556              		.align	2
 1557              		.global	goTo_Y
 1558              		.thumb
 1559              		.thumb_func
 1560              		.type	goTo_Y, %function
 1561              	goTo_Y:
 1562              	.LFB68:
 432:L6470.c       **** int goTo_Y(int32 Position_Y_Requested)
 433:L6470.c       **** {   
 1563              		.loc 1 433 0
 1564              		.cfi_startproc
 1565              		@ args = 0, pretend = 0, frame = 8
 1566              		@ frame_needed = 1, uses_anonymous_args = 0
 1567 0000 80B5     		push	{r7, lr}
 1568              		.cfi_def_cfa_offset 8
 1569              		.cfi_offset 7, -8
 1570              		.cfi_offset 14, -4
 1571 0002 82B0     		sub	sp, sp, #8
 1572              		.cfi_def_cfa_offset 16
 1573 0004 00AF     		add	r7, sp, #0
 1574              		.cfi_def_cfa_register 7
 1575 0006 7860     		str	r0, [r7, #4]
 434:L6470.c       ****     Enable_Encoder_Y(-Buffer_Y_QuadPosition);
 1576              		.loc 1 434 0
 1577 0008 694B     		ldr	r3, .L90
 1578 000a 1B68     		ldr	r3, [r3]
 1579 000c 5B42     		negs	r3, r3
 1580 000e 1846     		mov	r0, r3
 1581 0010 FFF7FEFF 		bl	Enable_Encoder_Y
 435:L6470.c       ****     Error = 0;
 1582              		.loc 1 435 0
 1583 0014 674B     		ldr	r3, .L90+4
 1584 0016 0022     		movs	r2, #0
 1585 0018 1A60     		str	r2, [r3]
 436:L6470.c       ****     Write_Debug_UART_Char("GotoY Command Recived--->");
 1586              		.loc 1 436 0
 1587 001a 6748     		ldr	r0, .L90+8
 1588 001c FFF7FEFF 		bl	Write_Debug_UART_Char
 437:L6470.c       ****     Position_Y_Requested = (int)Position_Y_Requested;
 438:L6470.c       ****     Write_Debug_UART_Int(Position_Y_Requested);
 1589              		.loc 1 438 0
 1590 0020 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 39


 1591 0022 FFF7FEFF 		bl	Write_Debug_UART_Int
 439:L6470.c       ****     Write_Debug_UART_Char("  \r\n");
 1592              		.loc 1 439 0
 1593 0026 6548     		ldr	r0, .L90+12
 1594 0028 FFF7FEFF 		bl	Write_Debug_UART_Char
 440:L6470.c       ****     if(Position_Y_Requested <= Y_Step_Limit)
 1595              		.loc 1 440 0
 1596 002c 7B68     		ldr	r3, [r7, #4]
 1597 002e 644A     		ldr	r2, .L90+16
 1598 0030 9342     		cmp	r3, r2
 1599 0032 00F3A880 		bgt	.L73
 441:L6470.c       ****     {
 442:L6470.c       ****         Configure_L6470_For_Y_Motor();
 1600              		.loc 1 442 0
 1601 0036 FFF7FEFF 		bl	Configure_L6470_For_Y_Motor
 443:L6470.c       ****         if(check_Error('Y','G') == 0)
 1602              		.loc 1 443 0
 1603 003a 4721     		movs	r1, #71
 1604 003c 5920     		movs	r0, #89
 1605 003e FFF7FEFF 		bl	check_Error
 1606 0042 0346     		mov	r3, r0
 1607 0044 002B     		cmp	r3, #0
 1608 0046 40F09680 		bne	.L74
 444:L6470.c       ****         {
 445:L6470.c       ****             if(if_all_homing_done())
 1609              		.loc 1 445 0
 1610 004a FFF7FEFF 		bl	if_all_homing_done
 1611 004e 0346     		mov	r3, r0
 1612 0050 002B     		cmp	r3, #0
 1613 0052 00F0A080 		beq	.L87
 446:L6470.c       ****             {
 447:L6470.c       ****                 for(No_of_Y_Cycle=0;No_of_Y_Cycle < step_correction_loop_y;No_of_Y_Cycle++)
 1614              		.loc 1 447 0
 1615 0056 5B4B     		ldr	r3, .L90+20
 1616 0058 0022     		movs	r2, #0
 1617 005a 1A60     		str	r2, [r3]
 1618 005c 72E0     		b	.L76
 1619              	.L85:
 448:L6470.c       ****                 {
 449:L6470.c       ****                     Read_All_Optical_Encoder();
 1620              		.loc 1 449 0
 1621 005e FFF7FEFF 		bl	Read_All_Optical_Encoder
 450:L6470.c       ****                     Position_Y_Move = Position_Y_Requested - Y_QuadPosition;
 1622              		.loc 1 450 0
 1623 0062 594B     		ldr	r3, .L90+24
 1624 0064 1B68     		ldr	r3, [r3]
 1625 0066 7A68     		ldr	r2, [r7, #4]
 1626 0068 D31A     		subs	r3, r2, r3
 1627 006a 584A     		ldr	r2, .L90+28
 1628 006c 1360     		str	r3, [r2]
 451:L6470.c       ****                     if(is_Y_Step_Correct(No_of_Y_Cycle))
 1629              		.loc 1 451 0
 1630 006e 554B     		ldr	r3, .L90+20
 1631 0070 1B68     		ldr	r3, [r3]
 1632 0072 1846     		mov	r0, r3
 1633 0074 FFF7FEFF 		bl	is_Y_Step_Correct
 1634 0078 0346     		mov	r3, r0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 40


 1635 007a 002B     		cmp	r3, #0
 1636 007c 69D0     		beq	.L89
 452:L6470.c       ****                     {
 453:L6470.c       ****                         if (Position_Y_Move > 0)                       // check if movment will be 
 1637              		.loc 1 453 0
 1638 007e 534B     		ldr	r3, .L90+28
 1639 0080 1B68     		ldr	r3, [r3]
 1640 0082 002B     		cmp	r3, #0
 1641 0084 05DD     		ble	.L78
 454:L6470.c       ****                             Move(FWD, Position_Y_Move);
 1642              		.loc 1 454 0
 1643 0086 514B     		ldr	r3, .L90+28
 1644 0088 1B68     		ldr	r3, [r3]
 1645 008a 1946     		mov	r1, r3
 1646 008c 0120     		movs	r0, #1
 1647 008e FFF7FEFF 		bl	Move
 1648              	.L78:
 455:L6470.c       ****                         if (Position_Y_Move < 0)                       // check if movment will be 
 1649              		.loc 1 455 0
 1650 0092 4E4B     		ldr	r3, .L90+28
 1651 0094 1B68     		ldr	r3, [r3]
 1652 0096 002B     		cmp	r3, #0
 1653 0098 17DA     		bge	.L80
 456:L6470.c       ****                             Move(REV, -(Position_Y_Move));
 1654              		.loc 1 456 0
 1655 009a 4C4B     		ldr	r3, .L90+28
 1656 009c 1B68     		ldr	r3, [r3]
 1657 009e 5B42     		negs	r3, r3
 1658 00a0 1946     		mov	r1, r3
 1659 00a2 0020     		movs	r0, #0
 1660 00a4 FFF7FEFF 		bl	Move
 457:L6470.c       ****                         while (Pin_BusyMotorY_Read() == 0)
 1661              		.loc 1 457 0
 1662 00a8 0FE0     		b	.L80
 1663              	.L81:
 458:L6470.c       ****                         {
 459:L6470.c       ****                             check_Error('Y','G');
 1664              		.loc 1 459 0
 1665 00aa 4721     		movs	r1, #71
 1666 00ac 5920     		movs	r0, #89
 1667 00ae FFF7FEFF 		bl	check_Error
 460:L6470.c       ****                             Read_All_Optical_Encoder();
 1668              		.loc 1 460 0
 1669 00b2 FFF7FEFF 		bl	Read_All_Optical_Encoder
 461:L6470.c       ****                             if(Y_QuadPosition > (Y_Step_Limit + 100))// to avoid slide brakage, 100
 1670              		.loc 1 461 0
 1671 00b6 444B     		ldr	r3, .L90+24
 1672 00b8 1B68     		ldr	r3, [r3]
 1673 00ba 454A     		ldr	r2, .L90+32
 1674 00bc 9342     		cmp	r3, r2
 1675 00be 04DD     		ble	.L80
 462:L6470.c       ****                             {    
 463:L6470.c       ****                                 Reset_All_L6470_Motor();
 1676              		.loc 1 463 0
 1677 00c0 FFF7FEFF 		bl	Reset_All_L6470_Motor
 464:L6470.c       ****                                 Write_Debug_UART_Char("Y_Motor_Malfunction**********[y9]  \r\n");
 1678              		.loc 1 464 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 41


 1679 00c4 4348     		ldr	r0, .L90+36
 1680 00c6 FFF7FEFF 		bl	Write_Debug_UART_Char
 1681              	.L80:
 457:L6470.c       ****                         {
 1682              		.loc 1 457 0
 1683 00ca FFF7FEFF 		bl	Pin_BusyMotorY_Read
 1684 00ce 0346     		mov	r3, r0
 1685 00d0 002B     		cmp	r3, #0
 1686 00d2 EAD0     		beq	.L81
 465:L6470.c       ****                             }
 466:L6470.c       ****                         }
 467:L6470.c       ****                         Read_All_Optical_Encoder();
 1687              		.loc 1 467 0
 1688 00d4 FFF7FEFF 		bl	Read_All_Optical_Encoder
 468:L6470.c       ****                         Write_Debug_UART_Int(Y_QuadPosition);
 1689              		.loc 1 468 0
 1690 00d8 3B4B     		ldr	r3, .L90+24
 1691 00da 1B68     		ldr	r3, [r3]
 1692 00dc 1846     		mov	r0, r3
 1693 00de FFF7FEFF 		bl	Write_Debug_UART_Int
 469:L6470.c       ****                         if(abs(Position_Y_Requested - Y_QuadPosition) > Y_max_error)
 1694              		.loc 1 469 0
 1695 00e2 394B     		ldr	r3, .L90+24
 1696 00e4 1B68     		ldr	r3, [r3]
 1697 00e6 7A68     		ldr	r2, [r7, #4]
 1698 00e8 D31A     		subs	r3, r2, r3
 1699 00ea 002B     		cmp	r3, #0
 1700 00ec B8BF     		it	lt
 1701 00ee 5B42     		rsblt	r3, r3, #0
 1702 00f0 B3F57A6F 		cmp	r3, #4000
 1703 00f4 07DD     		ble	.L82
 470:L6470.c       ****                         {
 471:L6470.c       ****                             Error = 8;//Y_Encoder_Not_Working;
 1704              		.loc 1 471 0
 1705 00f6 2F4B     		ldr	r3, .L90+4
 1706 00f8 0822     		movs	r2, #8
 1707 00fa 1A60     		str	r2, [r3]
 472:L6470.c       ****                             Write_Debug_UART_Char("Either_Y_Encoder_or_Y_Motor_Not_Working*********
 1708              		.loc 1 472 0
 1709 00fc 3648     		ldr	r0, .L90+40
 1710 00fe FFF7FEFF 		bl	Write_Debug_UART_Char
 473:L6470.c       ****                             UART_print_all_values();
 1711              		.loc 1 473 0
 1712 0102 FFF7FEFF 		bl	UART_print_all_values
 1713              	.L82:
 474:L6470.c       ****                         }
 475:L6470.c       ****                         Y_last_position = Position_Y_Requested;
 1714              		.loc 1 475 0
 1715 0106 354A     		ldr	r2, .L90+44
 1716 0108 7B68     		ldr	r3, [r7, #4]
 1717 010a 1360     		str	r3, [r2]
 476:L6470.c       ****                         if(((abs(Position_Y_Requested-Y_QuadPosition)<Y_max_error_After_Correction)
 1718              		.loc 1 476 0
 1719 010c 2E4B     		ldr	r3, .L90+24
 1720 010e 1B68     		ldr	r3, [r3]
 1721 0110 7A68     		ldr	r2, [r7, #4]
 1722 0112 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 42


 1723 0114 002B     		cmp	r3, #0
 1724 0116 B8BF     		it	lt
 1725 0118 5B42     		rsblt	r3, r3, #0
 1726 011a 092B     		cmp	r3, #9
 1727 011c 1ADD     		ble	.L83
 1728              		.loc 1 476 0 is_stmt 0 discriminator 1
 1729 011e 254B     		ldr	r3, .L90+4
 1730 0120 1B68     		ldr	r3, [r3]
 1731 0122 002B     		cmp	r3, #0
 1732 0124 16D1     		bne	.L83
 1733              		.loc 1 476 0 discriminator 2
 1734 0126 284B     		ldr	r3, .L90+24
 1735 0128 1B68     		ldr	r3, [r3]
 1736 012a 7A68     		ldr	r2, [r7, #4]
 1737 012c D31A     		subs	r3, r2, r3
 1738 012e 002B     		cmp	r3, #0
 1739 0130 B8BF     		it	lt
 1740 0132 5B42     		rsblt	r3, r3, #0
 1741 0134 B3F57A6F 		cmp	r3, #4000
 1742 0138 0CDC     		bgt	.L83
 447:L6470.c       ****                 {
 1743              		.loc 1 447 0 is_stmt 1 discriminator 2
 1744 013a 224B     		ldr	r3, .L90+20
 1745 013c 1B68     		ldr	r3, [r3]
 1746 013e 0133     		adds	r3, r3, #1
 1747 0140 204A     		ldr	r2, .L90+20
 1748 0142 1360     		str	r3, [r2]
 1749              	.L76:
 447:L6470.c       ****                 {
 1750              		.loc 1 447 0 is_stmt 0 discriminator 1
 1751 0144 1F4B     		ldr	r3, .L90+20
 1752 0146 1A68     		ldr	r2, [r3]
 1753 0148 254B     		ldr	r3, .L90+48
 1754 014a 1B68     		ldr	r3, [r3]
 1755 014c 9A42     		cmp	r2, r3
 1756 014e 86DB     		blt	.L85
 1757 0150 00E0     		b	.L83
 1758              	.L89:
 477:L6470.c       ****                             break;  
 478:L6470.c       ****                     }
 479:L6470.c       ****                     else
 480:L6470.c       ****                         break;
 1759              		.loc 1 480 0 is_stmt 1
 1760 0152 00BF     		nop
 1761              	.L83:
 481:L6470.c       ****                 }
 482:L6470.c       ****                 Write_Debug_UART_Char("\r\n");
 1762              		.loc 1 482 0
 1763 0154 2348     		ldr	r0, .L90+52
 1764 0156 FFF7FEFF 		bl	Write_Debug_UART_Char
 483:L6470.c       ****                 Write_Debug_UART_Char("Y Error: ");
 1765              		.loc 1 483 0
 1766 015a 2348     		ldr	r0, .L90+56
 1767 015c FFF7FEFF 		bl	Write_Debug_UART_Char
 484:L6470.c       ****                 Write_Debug_UART_Int(Position_Y_Requested-Y_QuadPosition);
 1768              		.loc 1 484 0
 1769 0160 194B     		ldr	r3, .L90+24
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 43


 1770 0162 1B68     		ldr	r3, [r3]
 1771 0164 7A68     		ldr	r2, [r7, #4]
 1772 0166 D31A     		subs	r3, r2, r3
 1773 0168 1846     		mov	r0, r3
 1774 016a FFF7FEFF 		bl	Write_Debug_UART_Int
 485:L6470.c       ****                 Write_Debug_UART_Char("\r\n");
 1775              		.loc 1 485 0
 1776 016e 1D48     		ldr	r0, .L90+52
 1777 0170 FFF7FEFF 		bl	Write_Debug_UART_Char
 1778 0174 0FE0     		b	.L87
 1779              	.L74:
 486:L6470.c       ****             }
 487:L6470.c       ****         }
 488:L6470.c       ****         else
 489:L6470.c       ****             Error = check_Error('Y','G');
 1780              		.loc 1 489 0
 1781 0176 4721     		movs	r1, #71
 1782 0178 5920     		movs	r0, #89
 1783 017a FFF7FEFF 		bl	check_Error
 1784 017e 0246     		mov	r2, r0
 1785 0180 0C4B     		ldr	r3, .L90+4
 1786 0182 1A60     		str	r2, [r3]
 1787 0184 07E0     		b	.L87
 1788              	.L73:
 490:L6470.c       ****     }
 491:L6470.c       ****     else
 492:L6470.c       ****     {
 493:L6470.c       ****         Error = 11;//Requested_Y_Step_Exceeding_The_Limit
 1789              		.loc 1 493 0
 1790 0186 0B4B     		ldr	r3, .L90+4
 1791 0188 0B22     		movs	r2, #11
 1792 018a 1A60     		str	r2, [r3]
 494:L6470.c       ****         Write_Debug_UART_Char("Requested_Y_Step_Exceeding_The_Limit***********[y7]  \r\n");
 1793              		.loc 1 494 0
 1794 018c 1748     		ldr	r0, .L90+60
 1795 018e FFF7FEFF 		bl	Write_Debug_UART_Char
 495:L6470.c       ****         UART_print_all_values();
 1796              		.loc 1 495 0
 1797 0192 FFF7FEFF 		bl	UART_print_all_values
 1798              	.L87:
 496:L6470.c       ****     }
 497:L6470.c       ****     //Timeout_Stop();
 498:L6470.c       ****     disconnect_all_motor();
 1799              		.loc 1 498 0
 1800 0196 FFF7FEFF 		bl	disconnect_all_motor
 499:L6470.c       ****     Buffer_Y_QuadPosition = Y_QuadPosition;
 1801              		.loc 1 499 0
 1802 019a 0B4B     		ldr	r3, .L90+24
 1803 019c 1B68     		ldr	r3, [r3]
 1804 019e 044A     		ldr	r2, .L90
 1805 01a0 1360     		str	r3, [r2]
 500:L6470.c       ****     return Error;
 1806              		.loc 1 500 0
 1807 01a2 044B     		ldr	r3, .L90+4
 1808 01a4 1B68     		ldr	r3, [r3]
 501:L6470.c       **** }
 1809              		.loc 1 501 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 44


 1810 01a6 1846     		mov	r0, r3
 1811 01a8 0837     		adds	r7, r7, #8
 1812              		.cfi_def_cfa_offset 8
 1813 01aa BD46     		mov	sp, r7
 1814              		.cfi_def_cfa_register 13
 1815              		@ sp needed
 1816 01ac 80BD     		pop	{r7, pc}
 1817              	.L91:
 1818 01ae 00BF     		.align	2
 1819              	.L90:
 1820 01b0 00000000 		.word	Buffer_Y_QuadPosition
 1821 01b4 00000000 		.word	Error
 1822 01b8 CC030000 		.word	.LC29
 1823 01bc 18030000 		.word	.LC23
 1824 01c0 A0680600 		.word	420000
 1825 01c4 00000000 		.word	No_of_Y_Cycle
 1826 01c8 00000000 		.word	Y_QuadPosition
 1827 01cc 00000000 		.word	Position_Y_Move
 1828 01d0 04690600 		.word	420100
 1829 01d4 E8030000 		.word	.LC30
 1830 01d8 10040000 		.word	.LC31
 1831 01dc 00000000 		.word	Y_last_position
 1832 01e0 00000000 		.word	step_correction_loop_y
 1833 01e4 84030000 		.word	.LC26
 1834 01e8 4C040000 		.word	.LC32
 1835 01ec 58040000 		.word	.LC33
 1836              		.cfi_endproc
 1837              	.LFE68:
 1838              		.size	goTo_Y, .-goTo_Y
 1839              		.section	.rodata
 1840              		.align	2
 1841              	.LC34:
 1842 0490 476F746F 		.ascii	"GotoZ Command Recived--->\000"
 1842      5A20436F 
 1842      6D6D616E 
 1842      64205265 
 1842      63697665 
 1843 04aa 0000     		.align	2
 1844              	.LC35:
 1845 04ac 5A5F4D6F 		.ascii	"Z_Motor_Malfunction**********[z9]  \015\012\000"
 1845      746F725F 
 1845      4D616C66 
 1845      756E6374 
 1845      696F6E2A 
 1846 04d2 0000     		.align	2
 1847              	.LC36:
 1848 04d4 45697468 		.ascii	"Either_Z_Encoder_or_Z_Motor_Not_Working**********[z"
 1848      65725F5A 
 1848      5F456E63 
 1848      6F646572 
 1848      5F6F725F 
 1849 0507 365D2020 		.ascii	"6]  \015\012\000"
 1849      0D0A00
 1850 050e 0000     		.align	2
 1851              	.LC37:
 1852 0510 5A204572 		.ascii	"Z Error: \000"
 1852      726F723A 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 45


 1852      2000
 1853 051a 0000     		.align	2
 1854              	.LC38:
 1855 051c 52657175 		.ascii	"Requested_Z_Step_Exceeding_The_Limit***********[z7]"
 1855      65737465 
 1855      645F5A5F 
 1855      53746570 
 1855      5F457863 
 1856 054f 200D0A00 		.ascii	" \015\012\000"
 1857              		.section	.text.goTo_Z,"ax",%progbits
 1858              		.align	2
 1859              		.global	goTo_Z
 1860              		.thumb
 1861              		.thumb_func
 1862              		.type	goTo_Z, %function
 1863              	goTo_Z:
 1864              	.LFB69:
 502:L6470.c       **** int goTo_Z(int32 Position_Z_Requested)
 503:L6470.c       **** {
 1865              		.loc 1 503 0
 1866              		.cfi_startproc
 1867              		@ args = 0, pretend = 0, frame = 8
 1868              		@ frame_needed = 1, uses_anonymous_args = 0
 1869 0000 80B5     		push	{r7, lr}
 1870              		.cfi_def_cfa_offset 8
 1871              		.cfi_offset 7, -8
 1872              		.cfi_offset 14, -4
 1873 0002 82B0     		sub	sp, sp, #8
 1874              		.cfi_def_cfa_offset 16
 1875 0004 00AF     		add	r7, sp, #0
 1876              		.cfi_def_cfa_register 7
 1877 0006 7860     		str	r0, [r7, #4]
 504:L6470.c       ****     Error = 0;
 1878              		.loc 1 504 0
 1879 0008 664B     		ldr	r3, .L110
 1880 000a 0022     		movs	r2, #0
 1881 000c 1A60     		str	r2, [r3]
 505:L6470.c       ****     Write_Debug_UART_Char("GotoZ Command Recived--->");
 1882              		.loc 1 505 0
 1883 000e 6648     		ldr	r0, .L110+4
 1884 0010 FFF7FEFF 		bl	Write_Debug_UART_Char
 506:L6470.c       ****     Position_Z_Requested = (int)Position_Z_Requested;
 507:L6470.c       ****     Write_Debug_UART_Int(Position_Z_Requested);
 1885              		.loc 1 507 0
 1886 0014 7868     		ldr	r0, [r7, #4]
 1887 0016 FFF7FEFF 		bl	Write_Debug_UART_Int
 508:L6470.c       ****     Write_Debug_UART_Char("  \r\n");
 1888              		.loc 1 508 0
 1889 001a 6448     		ldr	r0, .L110+8
 1890 001c FFF7FEFF 		bl	Write_Debug_UART_Char
 509:L6470.c       ****     Read_All_Optical_Encoder();
 1891              		.loc 1 509 0
 1892 0020 FFF7FEFF 		bl	Read_All_Optical_Encoder
 510:L6470.c       ****     if(Position_Z_Requested <= Z_Step_Limit)
 1893              		.loc 1 510 0
 1894 0024 7B68     		ldr	r3, [r7, #4]
 1895 0026 4DF6C022 		movw	r2, #56000
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 46


 1896 002a 9342     		cmp	r3, r2
 1897 002c 00F3A980 		bgt	.L93
 511:L6470.c       ****     {
 512:L6470.c       ****         Configure_L6470_For_Z_Motor();
 1898              		.loc 1 512 0
 1899 0030 FFF7FEFF 		bl	Configure_L6470_For_Z_Motor
 513:L6470.c       ****         if(check_Error('Z','G') == 0)
 1900              		.loc 1 513 0
 1901 0034 4721     		movs	r1, #71
 1902 0036 5A20     		movs	r0, #90
 1903 0038 FFF7FEFF 		bl	check_Error
 1904 003c 0346     		mov	r3, r0
 1905 003e 002B     		cmp	r3, #0
 1906 0040 40F09780 		bne	.L94
 514:L6470.c       ****         {
 515:L6470.c       ****             if(if_all_homing_done())
 1907              		.loc 1 515 0
 1908 0044 FFF7FEFF 		bl	if_all_homing_done
 1909 0048 0346     		mov	r3, r0
 1910 004a 002B     		cmp	r3, #0
 1911 004c 00F0A180 		beq	.L107
 516:L6470.c       ****             {
 517:L6470.c       ****                 for(No_of_Z_Cycle=0; No_of_Z_Cycle < step_correction_loop_z; No_of_Z_Cycle++)//for 
 1912              		.loc 1 517 0
 1913 0050 574B     		ldr	r3, .L110+12
 1914 0052 0022     		movs	r2, #0
 1915 0054 1A60     		str	r2, [r3]
 1916 0056 73E0     		b	.L96
 1917              	.L105:
 518:L6470.c       ****                 {
 519:L6470.c       ****                     Read_All_Optical_Encoder();
 1918              		.loc 1 519 0
 1919 0058 FFF7FEFF 		bl	Read_All_Optical_Encoder
 520:L6470.c       ****                     Position_Z_Move = Position_Z_Requested - Z_QuadPosition;
 1920              		.loc 1 520 0
 1921 005c 554B     		ldr	r3, .L110+16
 1922 005e 1B68     		ldr	r3, [r3]
 1923 0060 7A68     		ldr	r2, [r7, #4]
 1924 0062 D31A     		subs	r3, r2, r3
 1925 0064 544A     		ldr	r2, .L110+20
 1926 0066 1360     		str	r3, [r2]
 521:L6470.c       ****                     if (is_Z_Step_Correct(No_of_Z_Cycle))
 1927              		.loc 1 521 0
 1928 0068 514B     		ldr	r3, .L110+12
 1929 006a 1B68     		ldr	r3, [r3]
 1930 006c 1846     		mov	r0, r3
 1931 006e FFF7FEFF 		bl	is_Z_Step_Correct
 1932 0072 0346     		mov	r3, r0
 1933 0074 002B     		cmp	r3, #0
 1934 0076 6AD0     		beq	.L109
 522:L6470.c       ****                     {
 523:L6470.c       ****                         if (Position_Z_Move > 0)                  // check if movment will be in in
 1935              		.loc 1 523 0
 1936 0078 4F4B     		ldr	r3, .L110+20
 1937 007a 1B68     		ldr	r3, [r3]
 1938 007c 002B     		cmp	r3, #0
 1939 007e 05DD     		ble	.L98
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 47


 524:L6470.c       ****                             Move(FWD, Position_Z_Move);
 1940              		.loc 1 524 0
 1941 0080 4D4B     		ldr	r3, .L110+20
 1942 0082 1B68     		ldr	r3, [r3]
 1943 0084 1946     		mov	r1, r3
 1944 0086 0120     		movs	r0, #1
 1945 0088 FFF7FEFF 		bl	Move
 1946              	.L98:
 525:L6470.c       ****                         if (Position_Z_Move < 0)
 1947              		.loc 1 525 0
 1948 008c 4A4B     		ldr	r3, .L110+20
 1949 008e 1B68     		ldr	r3, [r3]
 1950 0090 002B     		cmp	r3, #0
 1951 0092 18DA     		bge	.L100
 526:L6470.c       ****                             Move(REV, -Position_Z_Move);
 1952              		.loc 1 526 0
 1953 0094 484B     		ldr	r3, .L110+20
 1954 0096 1B68     		ldr	r3, [r3]
 1955 0098 5B42     		negs	r3, r3
 1956 009a 1946     		mov	r1, r3
 1957 009c 0020     		movs	r0, #0
 1958 009e FFF7FEFF 		bl	Move
 527:L6470.c       ****                         while (Pin_BusyMotorZ_Read() == 0)
 1959              		.loc 1 527 0
 1960 00a2 10E0     		b	.L100
 1961              	.L101:
 528:L6470.c       ****                         {
 529:L6470.c       ****                             check_Error('Z','G');
 1962              		.loc 1 529 0
 1963 00a4 4721     		movs	r1, #71
 1964 00a6 5A20     		movs	r0, #90
 1965 00a8 FFF7FEFF 		bl	check_Error
 530:L6470.c       ****                             Read_All_Optical_Encoder();
 1966              		.loc 1 530 0
 1967 00ac FFF7FEFF 		bl	Read_All_Optical_Encoder
 531:L6470.c       ****                             if(Z_QuadPosition > (Z_Step_Limit + 100))// to avoid slide brakage, 100
 1968              		.loc 1 531 0
 1969 00b0 404B     		ldr	r3, .L110+16
 1970 00b2 1B68     		ldr	r3, [r3]
 1971 00b4 4DF62432 		movw	r2, #56100
 1972 00b8 9342     		cmp	r3, r2
 1973 00ba 04DD     		ble	.L100
 532:L6470.c       ****                             {
 533:L6470.c       ****                                 Reset_All_L6470_Motor();
 1974              		.loc 1 533 0
 1975 00bc FFF7FEFF 		bl	Reset_All_L6470_Motor
 534:L6470.c       ****                                 Write_Debug_UART_Char("Z_Motor_Malfunction**********[z9]  \r\n");  
 1976              		.loc 1 534 0
 1977 00c0 3E48     		ldr	r0, .L110+24
 1978 00c2 FFF7FEFF 		bl	Write_Debug_UART_Char
 1979              	.L100:
 527:L6470.c       ****                         {
 1980              		.loc 1 527 0
 1981 00c6 FFF7FEFF 		bl	Pin_BusyMotorZ_Read
 1982 00ca 0346     		mov	r3, r0
 1983 00cc 002B     		cmp	r3, #0
 1984 00ce E9D0     		beq	.L101
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 48


 535:L6470.c       ****                             }
 536:L6470.c       ****                         }
 537:L6470.c       ****                         Read_All_Optical_Encoder();
 1985              		.loc 1 537 0
 1986 00d0 FFF7FEFF 		bl	Read_All_Optical_Encoder
 538:L6470.c       ****                         Write_Debug_UART_Int(Z_QuadPosition);
 1987              		.loc 1 538 0
 1988 00d4 374B     		ldr	r3, .L110+16
 1989 00d6 1B68     		ldr	r3, [r3]
 1990 00d8 1846     		mov	r0, r3
 1991 00da FFF7FEFF 		bl	Write_Debug_UART_Int
 539:L6470.c       ****                         if(abs(Position_Z_Requested - Z_QuadPosition) > Z_max_error)
 1992              		.loc 1 539 0
 1993 00de 354B     		ldr	r3, .L110+16
 1994 00e0 1B68     		ldr	r3, [r3]
 1995 00e2 7A68     		ldr	r2, [r7, #4]
 1996 00e4 D31A     		subs	r3, r2, r3
 1997 00e6 002B     		cmp	r3, #0
 1998 00e8 B8BF     		it	lt
 1999 00ea 5B42     		rsblt	r3, r3, #0
 2000 00ec B3F57A6F 		cmp	r3, #4000
 2001 00f0 07DD     		ble	.L102
 540:L6470.c       ****                         {
 541:L6470.c       ****                             Error = 14;//Z_Encoder_Not_Working
 2002              		.loc 1 541 0
 2003 00f2 2C4B     		ldr	r3, .L110
 2004 00f4 0E22     		movs	r2, #14
 2005 00f6 1A60     		str	r2, [r3]
 542:L6470.c       ****                             Write_Debug_UART_Char("Either_Z_Encoder_or_Z_Motor_Not_Working*********
 2006              		.loc 1 542 0
 2007 00f8 3148     		ldr	r0, .L110+28
 2008 00fa FFF7FEFF 		bl	Write_Debug_UART_Char
 543:L6470.c       ****                             UART_print_all_values();
 2009              		.loc 1 543 0
 2010 00fe FFF7FEFF 		bl	UART_print_all_values
 2011              	.L102:
 544:L6470.c       ****                         }
 545:L6470.c       ****                         Z_last_position = Position_Z_Requested;
 2012              		.loc 1 545 0
 2013 0102 304A     		ldr	r2, .L110+32
 2014 0104 7B68     		ldr	r3, [r7, #4]
 2015 0106 1360     		str	r3, [r2]
 546:L6470.c       ****                         if(((abs(Position_Z_Requested-Z_QuadPosition)<Z_max_error_After_Correction)
 2016              		.loc 1 546 0
 2017 0108 2A4B     		ldr	r3, .L110+16
 2018 010a 1B68     		ldr	r3, [r3]
 2019 010c 7A68     		ldr	r2, [r7, #4]
 2020 010e D31A     		subs	r3, r2, r3
 2021 0110 002B     		cmp	r3, #0
 2022 0112 B8BF     		it	lt
 2023 0114 5B42     		rsblt	r3, r3, #0
 2024 0116 042B     		cmp	r3, #4
 2025 0118 1ADD     		ble	.L103
 2026              		.loc 1 546 0 is_stmt 0 discriminator 1
 2027 011a 224B     		ldr	r3, .L110
 2028 011c 1B68     		ldr	r3, [r3]
 2029 011e 002B     		cmp	r3, #0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 49


 2030 0120 16D1     		bne	.L103
 2031              		.loc 1 546 0 discriminator 2
 2032 0122 244B     		ldr	r3, .L110+16
 2033 0124 1B68     		ldr	r3, [r3]
 2034 0126 7A68     		ldr	r2, [r7, #4]
 2035 0128 D31A     		subs	r3, r2, r3
 2036 012a 002B     		cmp	r3, #0
 2037 012c B8BF     		it	lt
 2038 012e 5B42     		rsblt	r3, r3, #0
 2039 0130 B3F57A6F 		cmp	r3, #4000
 2040 0134 0CDC     		bgt	.L103
 517:L6470.c       ****                 {
 2041              		.loc 1 517 0 is_stmt 1 discriminator 2
 2042 0136 1E4B     		ldr	r3, .L110+12
 2043 0138 1B68     		ldr	r3, [r3]
 2044 013a 0133     		adds	r3, r3, #1
 2045 013c 1C4A     		ldr	r2, .L110+12
 2046 013e 1360     		str	r3, [r2]
 2047              	.L96:
 517:L6470.c       ****                 {
 2048              		.loc 1 517 0 is_stmt 0 discriminator 1
 2049 0140 1B4B     		ldr	r3, .L110+12
 2050 0142 1A68     		ldr	r2, [r3]
 2051 0144 204B     		ldr	r3, .L110+36
 2052 0146 1B68     		ldr	r3, [r3]
 2053 0148 9A42     		cmp	r2, r3
 2054 014a 85DB     		blt	.L105
 2055 014c 00E0     		b	.L103
 2056              	.L109:
 547:L6470.c       ****                             break;                            
 548:L6470.c       ****                     }        
 549:L6470.c       ****                     else
 550:L6470.c       ****                         break;
 2057              		.loc 1 550 0 is_stmt 1
 2058 014e 00BF     		nop
 2059              	.L103:
 551:L6470.c       ****                 }
 552:L6470.c       ****                 Write_Debug_UART_Char("\r\n");
 2060              		.loc 1 552 0
 2061 0150 1E48     		ldr	r0, .L110+40
 2062 0152 FFF7FEFF 		bl	Write_Debug_UART_Char
 553:L6470.c       ****                 Write_Debug_UART_Char("Z Error: ");
 2063              		.loc 1 553 0
 2064 0156 1E48     		ldr	r0, .L110+44
 2065 0158 FFF7FEFF 		bl	Write_Debug_UART_Char
 554:L6470.c       ****                 Write_Debug_UART_Int(Position_Z_Requested-Z_QuadPosition);
 2066              		.loc 1 554 0
 2067 015c 154B     		ldr	r3, .L110+16
 2068 015e 1B68     		ldr	r3, [r3]
 2069 0160 7A68     		ldr	r2, [r7, #4]
 2070 0162 D31A     		subs	r3, r2, r3
 2071 0164 1846     		mov	r0, r3
 2072 0166 FFF7FEFF 		bl	Write_Debug_UART_Int
 555:L6470.c       ****                 Write_Debug_UART_Char("\r\n");
 2073              		.loc 1 555 0
 2074 016a 1848     		ldr	r0, .L110+40
 2075 016c FFF7FEFF 		bl	Write_Debug_UART_Char
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 50


 2076 0170 0FE0     		b	.L107
 2077              	.L94:
 556:L6470.c       ****             }
 557:L6470.c       ****         }
 558:L6470.c       ****         else
 559:L6470.c       ****             Error = check_Error('Z','G');
 2078              		.loc 1 559 0
 2079 0172 4721     		movs	r1, #71
 2080 0174 5A20     		movs	r0, #90
 2081 0176 FFF7FEFF 		bl	check_Error
 2082 017a 0246     		mov	r2, r0
 2083 017c 094B     		ldr	r3, .L110
 2084 017e 1A60     		str	r2, [r3]
 2085 0180 07E0     		b	.L107
 2086              	.L93:
 560:L6470.c       ****     }
 561:L6470.c       ****     else
 562:L6470.c       ****     {
 563:L6470.c       ****         Error = 17;//Requested_Z_Step_Exceeding_The_Limit
 2087              		.loc 1 563 0
 2088 0182 084B     		ldr	r3, .L110
 2089 0184 1122     		movs	r2, #17
 2090 0186 1A60     		str	r2, [r3]
 564:L6470.c       ****         Write_Debug_UART_Char("Requested_Z_Step_Exceeding_The_Limit***********[z7] \r\n");
 2091              		.loc 1 564 0
 2092 0188 1248     		ldr	r0, .L110+48
 2093 018a FFF7FEFF 		bl	Write_Debug_UART_Char
 565:L6470.c       ****         UART_print_all_values();
 2094              		.loc 1 565 0
 2095 018e FFF7FEFF 		bl	UART_print_all_values
 2096              	.L107:
 566:L6470.c       ****     }
 567:L6470.c       ****     disconnect_all_motor();
 2097              		.loc 1 567 0
 2098 0192 FFF7FEFF 		bl	disconnect_all_motor
 568:L6470.c       ****     return Error;
 2099              		.loc 1 568 0
 2100 0196 034B     		ldr	r3, .L110
 2101 0198 1B68     		ldr	r3, [r3]
 569:L6470.c       **** }
 2102              		.loc 1 569 0
 2103 019a 1846     		mov	r0, r3
 2104 019c 0837     		adds	r7, r7, #8
 2105              		.cfi_def_cfa_offset 8
 2106 019e BD46     		mov	sp, r7
 2107              		.cfi_def_cfa_register 13
 2108              		@ sp needed
 2109 01a0 80BD     		pop	{r7, pc}
 2110              	.L111:
 2111 01a2 00BF     		.align	2
 2112              	.L110:
 2113 01a4 00000000 		.word	Error
 2114 01a8 90040000 		.word	.LC34
 2115 01ac 18030000 		.word	.LC23
 2116 01b0 00000000 		.word	No_of_Z_Cycle
 2117 01b4 00000000 		.word	Z_QuadPosition
 2118 01b8 00000000 		.word	Position_Z_Move
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 51


 2119 01bc AC040000 		.word	.LC35
 2120 01c0 D4040000 		.word	.LC36
 2121 01c4 00000000 		.word	Z_last_position
 2122 01c8 00000000 		.word	step_correction_loop_z
 2123 01cc 84030000 		.word	.LC26
 2124 01d0 10050000 		.word	.LC37
 2125 01d4 1C050000 		.word	.LC38
 2126              		.cfi_endproc
 2127              	.LFE69:
 2128              		.size	goTo_Z, .-goTo_Z
 2129              		.section	.rodata
 2130 0553 00       		.align	2
 2131              	.LC39:
 2132 0554 4552524F 		.ascii	"ERROR Wrong Position Requested**********[x8]  \015\012"
 2132      52205772 
 2132      6F6E6720 
 2132      506F7369 
 2132      74696F6E 
 2133 0584 00       		.ascii	"\000"
 2134 0585 000000   		.align	2
 2135              	.LC40:
 2136 0588 4552524F 		.ascii	"ERROR Wrong Position Requested**********[x9]  \015\012"
 2136      52205772 
 2136      6F6E6720 
 2136      506F7369 
 2136      74696F6E 
 2137 05b8 00       		.ascii	"\000"
 2138 05b9 000000   		.align	2
 2139              	.LC41:
 2140 05bc 585F456E 		.ascii	"X_Encoder_Not_Working**********[x10]  \015\012\000"
 2140      636F6465 
 2140      725F4E6F 
 2140      745F576F 
 2140      726B696E 
 2141              		.section	.text.is_X_Step_Correct,"ax",%progbits
 2142              		.align	2
 2143              		.global	is_X_Step_Correct
 2144              		.thumb
 2145              		.thumb_func
 2146              		.type	is_X_Step_Correct, %function
 2147              	is_X_Step_Correct:
 2148              	.LFB70:
 570:L6470.c       **** bool is_X_Step_Correct(int No_of_executions)
 571:L6470.c       **** {
 2149              		.loc 1 571 0
 2150              		.cfi_startproc
 2151              		@ args = 0, pretend = 0, frame = 8
 2152              		@ frame_needed = 1, uses_anonymous_args = 0
 2153 0000 80B5     		push	{r7, lr}
 2154              		.cfi_def_cfa_offset 8
 2155              		.cfi_offset 7, -8
 2156              		.cfi_offset 14, -4
 2157 0002 82B0     		sub	sp, sp, #8
 2158              		.cfi_def_cfa_offset 16
 2159 0004 00AF     		add	r7, sp, #0
 2160              		.cfi_def_cfa_register 7
 2161 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 52


 572:L6470.c       ****     Read_All_Optical_Encoder();
 2162              		.loc 1 572 0
 2163 0008 FFF7FEFF 		bl	Read_All_Optical_Encoder
 573:L6470.c       ****     if(X_QuadPosition > -2000)//to check if encoder connecter is floating
 2164              		.loc 1 573 0
 2165 000c 364B     		ldr	r3, .L123
 2166 000e 1B68     		ldr	r3, [r3]
 2167 0010 13F5FA6F 		cmn	r3, #2000
 2168 0014 5ADD     		ble	.L113
 574:L6470.c       ****     {
 575:L6470.c       ****         if(((Position_X_Move < X_max_error)||(No_of_executions==0))&&(((abs(X_QuadPosition - X_last
 2169              		.loc 1 575 0
 2170 0016 354B     		ldr	r3, .L123+4
 2171 0018 1B68     		ldr	r3, [r3]
 2172 001a B3F57A6F 		cmp	r3, #4000
 2173 001e 02DB     		blt	.L114
 2174              		.loc 1 575 0 is_stmt 0 discriminator 2
 2175 0020 7B68     		ldr	r3, [r7, #4]
 2176 0022 002B     		cmp	r3, #0
 2177 0024 5CD1     		bne	.L115
 2178              	.L114:
 2179              		.loc 1 575 0 discriminator 3
 2180 0026 304B     		ldr	r3, .L123
 2181 0028 1A68     		ldr	r2, [r3]
 2182 002a 314B     		ldr	r3, .L123+8
 2183 002c 1B68     		ldr	r3, [r3]
 2184 002e D31A     		subs	r3, r2, r3
 2185 0030 002B     		cmp	r3, #0
 2186 0032 B8BF     		it	lt
 2187 0034 5B42     		rsblt	r3, r3, #0
 2188 0036 B3F57A6F 		cmp	r3, #4000
 2189 003a 03DD     		ble	.L116
 2190              		.loc 1 575 0 discriminator 4
 2191 003c 2C4B     		ldr	r3, .L123+8
 2192 003e 1B68     		ldr	r3, [r3]
 2193 0040 002B     		cmp	r3, #0
 2194 0042 4DD1     		bne	.L115
 2195              	.L116:
 576:L6470.c       ****         {            
 577:L6470.c       ****             if( (Position_X_Requested < X_Step_Limit)&&(Position_X_Requested >= 0) )
 2196              		.loc 1 577 0 is_stmt 1
 2197 0044 2B4B     		ldr	r3, .L123+12
 2198 0046 1B68     		ldr	r3, [r3]
 2199 0048 2B4A     		ldr	r2, .L123+16
 2200 004a 9342     		cmp	r3, r2
 2201 004c 34DC     		bgt	.L117
 2202              		.loc 1 577 0 is_stmt 0 discriminator 1
 2203 004e 294B     		ldr	r3, .L123+12
 2204 0050 1B68     		ldr	r3, [r3]
 2205 0052 002B     		cmp	r3, #0
 2206 0054 30DB     		blt	.L117
 578:L6470.c       ****             {
 579:L6470.c       ****                 if(Y_QuadPosition < 20000)
 2207              		.loc 1 579 0 is_stmt 1
 2208 0056 294B     		ldr	r3, .L123+20
 2209 0058 1B68     		ldr	r3, [r3]
 2210 005a 44F61F62 		movw	r2, #19999
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 53


 2211 005e 9342     		cmp	r3, r2
 2212 0060 01DC     		bgt	.L118
 580:L6470.c       ****                     return true;
 2213              		.loc 1 580 0
 2214 0062 0123     		movs	r3, #1
 2215 0064 3CE0     		b	.L112
 2216              	.L118:
 581:L6470.c       ****                 else 
 582:L6470.c       ****                 {
 583:L6470.c       ****                     if( ((X_QuadPosition > 570000)&&(Position_X_Requested > 570000)&&(Position_X_Re
 2217              		.loc 1 583 0
 2218 0066 204B     		ldr	r3, .L123
 2219 0068 1B68     		ldr	r3, [r3]
 2220 006a 254A     		ldr	r2, .L123+24
 2221 006c 9342     		cmp	r3, r2
 2222 006e 09DD     		ble	.L120
 2223              		.loc 1 583 0 is_stmt 0 discriminator 1
 2224 0070 204B     		ldr	r3, .L123+12
 2225 0072 1B68     		ldr	r3, [r3]
 2226 0074 224A     		ldr	r2, .L123+24
 2227 0076 9342     		cmp	r3, r2
 2228 0078 04DD     		ble	.L120
 2229              		.loc 1 583 0 discriminator 3
 2230 007a 1E4B     		ldr	r3, .L123+12
 2231 007c 1B68     		ldr	r3, [r3]
 2232 007e 214A     		ldr	r2, .L123+28
 2233 0080 9342     		cmp	r3, r2
 2234 0082 0DDD     		ble	.L121
 2235              	.L120:
 2236              		.loc 1 583 0 discriminator 5
 2237 0084 184B     		ldr	r3, .L123
 2238 0086 1B68     		ldr	r3, [r3]
 2239 0088 1F4A     		ldr	r2, .L123+32
 2240 008a 9342     		cmp	r3, r2
 2241 008c 0ADC     		bgt	.L122
 2242              		.loc 1 583 0 discriminator 6
 2243 008e 194B     		ldr	r3, .L123+12
 2244 0090 1B68     		ldr	r3, [r3]
 2245 0092 002B     		cmp	r3, #0
 2246 0094 06DB     		blt	.L122
 2247              		.loc 1 583 0 discriminator 7
 2248 0096 174B     		ldr	r3, .L123+12
 2249 0098 1B68     		ldr	r3, [r3]
 2250 009a 1B4A     		ldr	r2, .L123+32
 2251 009c 9342     		cmp	r3, r2
 2252 009e 01DC     		bgt	.L122
 2253              	.L121:
 584:L6470.c       ****                         return true;
 2254              		.loc 1 584 0 is_stmt 1
 2255 00a0 0123     		movs	r3, #1
 2256 00a2 1DE0     		b	.L112
 2257              	.L122:
 585:L6470.c       ****                     else
 586:L6470.c       ****                     {
 587:L6470.c       ****                         Error = 5;//Requested_X_Step_Exceeding_The_Limit
 2258              		.loc 1 587 0
 2259 00a4 194B     		ldr	r3, .L123+36
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 54


 2260 00a6 0522     		movs	r2, #5
 2261 00a8 1A60     		str	r2, [r3]
 588:L6470.c       ****                         Write_Debug_UART_Char("ERROR Wrong Position Requested**********[x8]  \r\n")
 2262              		.loc 1 588 0
 2263 00aa 1948     		ldr	r0, .L123+40
 2264 00ac FFF7FEFF 		bl	Write_Debug_UART_Char
 589:L6470.c       ****                         UART_print_all_values();
 2265              		.loc 1 589 0
 2266 00b0 FFF7FEFF 		bl	UART_print_all_values
 590:L6470.c       ****                         return false;
 2267              		.loc 1 590 0
 2268 00b4 0023     		movs	r3, #0
 2269 00b6 13E0     		b	.L112
 2270              	.L117:
 591:L6470.c       ****                     }
 592:L6470.c       ****                 }
 593:L6470.c       ****             }
 594:L6470.c       ****             else
 595:L6470.c       ****             {
 596:L6470.c       ****                 Error = 5;//Requested_X_Step_Exceeding_The_Limit
 2271              		.loc 1 596 0
 2272 00b8 144B     		ldr	r3, .L123+36
 2273 00ba 0522     		movs	r2, #5
 2274 00bc 1A60     		str	r2, [r3]
 597:L6470.c       ****                 Write_Debug_UART_Char("ERROR Wrong Position Requested**********[x9]  \r\n");
 2275              		.loc 1 597 0
 2276 00be 1548     		ldr	r0, .L123+44
 2277 00c0 FFF7FEFF 		bl	Write_Debug_UART_Char
 598:L6470.c       ****                 UART_print_all_values();
 2278              		.loc 1 598 0
 2279 00c4 FFF7FEFF 		bl	UART_print_all_values
 599:L6470.c       ****                 return false;
 2280              		.loc 1 599 0
 2281 00c8 0023     		movs	r3, #0
 2282 00ca 09E0     		b	.L112
 2283              	.L113:
 600:L6470.c       ****             }
 601:L6470.c       ****         }
 602:L6470.c       ****     }
 603:L6470.c       ****     else
 604:L6470.c       ****     {
 605:L6470.c       ****         Error = 2;//X_Encoder_Not_Working
 2284              		.loc 1 605 0
 2285 00cc 0F4B     		ldr	r3, .L123+36
 2286 00ce 0222     		movs	r2, #2
 2287 00d0 1A60     		str	r2, [r3]
 606:L6470.c       ****         Write_Debug_UART_Char("X_Encoder_Not_Working**********[x10]  \r\n");
 2288              		.loc 1 606 0
 2289 00d2 1148     		ldr	r0, .L123+48
 2290 00d4 FFF7FEFF 		bl	Write_Debug_UART_Char
 607:L6470.c       ****         UART_print_all_values();
 2291              		.loc 1 607 0
 2292 00d8 FFF7FEFF 		bl	UART_print_all_values
 608:L6470.c       ****         return false;
 2293              		.loc 1 608 0
 2294 00dc 0023     		movs	r3, #0
 2295 00de FFE7     		b	.L112
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 55


 2296              	.L115:
 2297              	.L112:
 609:L6470.c       ****     }
 610:L6470.c       **** }
 2298              		.loc 1 610 0
 2299 00e0 1846     		mov	r0, r3
 2300 00e2 0837     		adds	r7, r7, #8
 2301              		.cfi_def_cfa_offset 8
 2302 00e4 BD46     		mov	sp, r7
 2303              		.cfi_def_cfa_register 13
 2304              		@ sp needed
 2305 00e6 80BD     		pop	{r7, pc}
 2306              	.L124:
 2307              		.align	2
 2308              	.L123:
 2309 00e8 00000000 		.word	X_QuadPosition
 2310 00ec 00000000 		.word	Position_X_Move
 2311 00f0 00000000 		.word	X_last_position
 2312 00f4 00000000 		.word	Position_X_Requested
 2313 00f8 0FEB0900 		.word	649999
 2314 00fc 00000000 		.word	Y_QuadPosition
 2315 0100 90B20800 		.word	570000
 2316 0104 10EB0900 		.word	650000
 2317 0108 EF490200 		.word	149999
 2318 010c 00000000 		.word	Error
 2319 0110 54050000 		.word	.LC39
 2320 0114 88050000 		.word	.LC40
 2321 0118 BC050000 		.word	.LC41
 2322              		.cfi_endproc
 2323              	.LFE70:
 2324              		.size	is_X_Step_Correct, .-is_X_Step_Correct
 2325              		.global	__aeabi_i2d
 2326              		.global	__aeabi_dcmple
 2327              		.section	.rodata
 2328 05e5 000000   		.align	2
 2329              	.LC42:
 2330 05e8 4552524F 		.ascii	"ERROR Wrong Position Requested**********[y8]  \015\012"
 2330      52205772 
 2330      6F6E6720 
 2330      506F7369 
 2330      74696F6E 
 2331 0618 00       		.ascii	"\000"
 2332 0619 000000   		.align	2
 2333              	.LC43:
 2334 061c 595F456E 		.ascii	"Y_Encoder_Not_Working**********[y9]  \015\012\000"
 2334      636F6465 
 2334      725F4E6F 
 2334      745F576F 
 2334      726B696E 
 2335              		.align	2
 2336              	.LC44:
 2337 0644 595F456E 		.ascii	"Y_Encoder_Not_Working**********[y10]  \015\012\000"
 2337      636F6465 
 2337      725F4E6F 
 2337      745F576F 
 2337      726B696E 
 2338              		.section	.text.is_Y_Step_Correct,"ax",%progbits
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 56


 2339              		.align	2
 2340              		.global	is_Y_Step_Correct
 2341              		.thumb
 2342              		.thumb_func
 2343              		.type	is_Y_Step_Correct, %function
 2344              	is_Y_Step_Correct:
 2345              	.LFB71:
 611:L6470.c       **** bool is_Y_Step_Correct(int No_of_executions)
 612:L6470.c       **** {
 2346              		.loc 1 612 0
 2347              		.cfi_startproc
 2348              		@ args = 0, pretend = 0, frame = 8
 2349              		@ frame_needed = 1, uses_anonymous_args = 0
 2350 0000 80B5     		push	{r7, lr}
 2351              		.cfi_def_cfa_offset 8
 2352              		.cfi_offset 7, -8
 2353              		.cfi_offset 14, -4
 2354 0002 82B0     		sub	sp, sp, #8
 2355              		.cfi_def_cfa_offset 16
 2356 0004 00AF     		add	r7, sp, #0
 2357              		.cfi_def_cfa_register 7
 2358 0006 7860     		str	r0, [r7, #4]
 613:L6470.c       ****     Read_All_Optical_Encoder();
 2359              		.loc 1 613 0
 2360 0008 FFF7FEFF 		bl	Read_All_Optical_Encoder
 614:L6470.c       ****     if(Y_QuadPosition > -2000)//to check if encoder connecter is floating
 2361              		.loc 1 614 0
 2362 000c 324B     		ldr	r3, .L134
 2363 000e 1B68     		ldr	r3, [r3]
 2364 0010 13F5FA6F 		cmn	r3, #2000
 2365 0014 52DD     		ble	.L126
 615:L6470.c       ****     {
 616:L6470.c       ****         if(((Position_Y_Move < Y_max_error)||(No_of_executions==0))&&(((((double)(Y_QuadPosition - 
 2366              		.loc 1 616 0
 2367 0016 314B     		ldr	r3, .L134+4
 2368 0018 1B68     		ldr	r3, [r3]
 2369 001a B3F57A6F 		cmp	r3, #4000
 2370 001e 02DB     		blt	.L127
 2371              		.loc 1 616 0 is_stmt 0 discriminator 2
 2372 0020 7B68     		ldr	r3, [r7, #4]
 2373 0022 002B     		cmp	r3, #0
 2374 0024 40D1     		bne	.L128
 2375              	.L127:
 2376              		.loc 1 616 0 discriminator 3
 2377 0026 2C4B     		ldr	r3, .L134
 2378 0028 1A68     		ldr	r2, [r3]
 2379 002a 2D4B     		ldr	r3, .L134+8
 2380 002c 1B68     		ldr	r3, [r3]
 2381 002e D31A     		subs	r3, r2, r3
 2382 0030 1846     		mov	r0, r3
 2383 0032 FFF7FEFF 		bl	__aeabi_i2d
 2384 0036 4FF00002 		mov	r2, #0
 2385 003a 2A4B     		ldr	r3, .L134+12
 2386 003c FFF7FEFF 		bl	__aeabi_dcmple
 2387 0040 0346     		mov	r3, r0
 2388 0042 002B     		cmp	r3, #0
 2389 0044 03D1     		bne	.L129
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 57


 2390              		.loc 1 616 0 discriminator 4
 2391 0046 264B     		ldr	r3, .L134+8
 2392 0048 1B68     		ldr	r3, [r3]
 2393 004a 002B     		cmp	r3, #0
 2394 004c 2CD1     		bne	.L128
 2395              	.L129:
 617:L6470.c       ****         {            
 618:L6470.c       ****             if( ( (X_QuadPosition < 150000)&&(Position_Y_Requested < 360000)&&(Position_Y_Requested
 2396              		.loc 1 618 0 is_stmt 1
 2397 004e 264B     		ldr	r3, .L134+16
 2398 0050 1B68     		ldr	r3, [r3]
 2399 0052 264A     		ldr	r2, .L134+20
 2400 0054 9342     		cmp	r3, r2
 2401 0056 08DC     		bgt	.L130
 2402              		.loc 1 618 0 is_stmt 0 discriminator 1
 2403 0058 254B     		ldr	r3, .L134+24
 2404 005a 1B68     		ldr	r3, [r3]
 2405 005c 254A     		ldr	r2, .L134+28
 2406 005e 9342     		cmp	r3, r2
 2407 0060 03DC     		bgt	.L130
 2408              		.loc 1 618 0 discriminator 3
 2409 0062 234B     		ldr	r3, .L134+24
 2410 0064 1B68     		ldr	r3, [r3]
 2411 0066 002B     		cmp	r3, #0
 2412 0068 12DA     		bge	.L131
 2413              	.L130:
 2414              		.loc 1 618 0 discriminator 5
 2415 006a 1F4B     		ldr	r3, .L134+16
 2416 006c 1B68     		ldr	r3, [r3]
 2417 006e 224A     		ldr	r2, .L134+32
 2418 0070 9342     		cmp	r3, r2
 2419 0072 0FDC     		bgt	.L132
 2420              		.loc 1 618 0 discriminator 6
 2421 0074 1C4B     		ldr	r3, .L134+16
 2422 0076 1B68     		ldr	r3, [r3]
 2423 0078 204A     		ldr	r2, .L134+36
 2424 007a 9342     		cmp	r3, r2
 2425 007c 0ADD     		ble	.L132
 2426              		.loc 1 618 0 discriminator 7
 2427 007e 1C4B     		ldr	r3, .L134+24
 2428 0080 1B68     		ldr	r3, [r3]
 2429 0082 1F4A     		ldr	r2, .L134+40
 2430 0084 9342     		cmp	r3, r2
 2431 0086 05DC     		bgt	.L132
 2432              		.loc 1 618 0 discriminator 8
 2433 0088 194B     		ldr	r3, .L134+24
 2434 008a 1B68     		ldr	r3, [r3]
 2435 008c 002B     		cmp	r3, #0
 2436 008e 01DB     		blt	.L132
 2437              	.L131:
 619:L6470.c       ****                 return true;
 2438              		.loc 1 619 0 is_stmt 1
 2439 0090 0123     		movs	r3, #1
 2440 0092 1CE0     		b	.L133
 2441              	.L132:
 620:L6470.c       ****             else
 621:L6470.c       ****             {
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 58


 622:L6470.c       ****                 Error = 11;//Requested_Y_Step_Exceeding_The_Limit
 2442              		.loc 1 622 0
 2443 0094 1B4B     		ldr	r3, .L134+44
 2444 0096 0B22     		movs	r2, #11
 2445 0098 1A60     		str	r2, [r3]
 623:L6470.c       ****                 Write_Debug_UART_Char("ERROR Wrong Position Requested**********[y8]  \r\n");
 2446              		.loc 1 623 0
 2447 009a 1B48     		ldr	r0, .L134+48
 2448 009c FFF7FEFF 		bl	Write_Debug_UART_Char
 624:L6470.c       ****                 UART_print_all_values();
 2449              		.loc 1 624 0
 2450 00a0 FFF7FEFF 		bl	UART_print_all_values
 625:L6470.c       ****                 return false;
 2451              		.loc 1 625 0
 2452 00a4 0023     		movs	r3, #0
 2453 00a6 12E0     		b	.L133
 2454              	.L128:
 626:L6470.c       ****             }
 627:L6470.c       ****         }
 628:L6470.c       ****         else
 629:L6470.c       ****         {
 630:L6470.c       ****             Error = 8;//Y_Encoder_Not_Working
 2455              		.loc 1 630 0
 2456 00a8 164B     		ldr	r3, .L134+44
 2457 00aa 0822     		movs	r2, #8
 2458 00ac 1A60     		str	r2, [r3]
 631:L6470.c       ****             Write_Debug_UART_Char("Y_Encoder_Not_Working**********[y9]  \r\n");
 2459              		.loc 1 631 0
 2460 00ae 1748     		ldr	r0, .L134+52
 2461 00b0 FFF7FEFF 		bl	Write_Debug_UART_Char
 632:L6470.c       ****             UART_print_all_values();
 2462              		.loc 1 632 0
 2463 00b4 FFF7FEFF 		bl	UART_print_all_values
 633:L6470.c       ****             return false;
 2464              		.loc 1 633 0
 2465 00b8 0023     		movs	r3, #0
 2466 00ba 08E0     		b	.L133
 2467              	.L126:
 634:L6470.c       ****         }
 635:L6470.c       ****     }
 636:L6470.c       ****     else
 637:L6470.c       ****     {
 638:L6470.c       ****         Error = 8;//Y_Encoder_Not_Working
 2468              		.loc 1 638 0
 2469 00bc 114B     		ldr	r3, .L134+44
 2470 00be 0822     		movs	r2, #8
 2471 00c0 1A60     		str	r2, [r3]
 639:L6470.c       ****         Write_Debug_UART_Char("Y_Encoder_Not_Working**********[y10]  \r\n");
 2472              		.loc 1 639 0
 2473 00c2 1348     		ldr	r0, .L134+56
 2474 00c4 FFF7FEFF 		bl	Write_Debug_UART_Char
 640:L6470.c       ****         UART_print_all_values();
 2475              		.loc 1 640 0
 2476 00c8 FFF7FEFF 		bl	UART_print_all_values
 641:L6470.c       ****         return false;
 2477              		.loc 1 641 0
 2478 00cc 0023     		movs	r3, #0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 59


 2479              	.L133:
 642:L6470.c       ****     }
 643:L6470.c       **** }
 2480              		.loc 1 643 0
 2481 00ce 1846     		mov	r0, r3
 2482 00d0 0837     		adds	r7, r7, #8
 2483              		.cfi_def_cfa_offset 8
 2484 00d2 BD46     		mov	sp, r7
 2485              		.cfi_def_cfa_register 13
 2486              		@ sp needed
 2487 00d4 80BD     		pop	{r7, pc}
 2488              	.L135:
 2489 00d6 00BF     		.align	2
 2490              	.L134:
 2491 00d8 00000000 		.word	Y_QuadPosition
 2492 00dc 00000000 		.word	Position_Y_Move
 2493 00e0 00000000 		.word	Y_last_position
 2494 00e4 0040AF40 		.word	1085227008
 2495 00e8 00000000 		.word	X_QuadPosition
 2496 00ec EF490200 		.word	149999
 2497 00f0 00000000 		.word	Position_Y_Requested
 2498 00f4 3F7E0500 		.word	359999
 2499 00f8 0FEB0900 		.word	649999
 2500 00fc 90B20800 		.word	570000
 2501 0100 9F680600 		.word	419999
 2502 0104 00000000 		.word	Error
 2503 0108 E8050000 		.word	.LC42
 2504 010c 1C060000 		.word	.LC43
 2505 0110 44060000 		.word	.LC44
 2506              		.cfi_endproc
 2507              	.LFE71:
 2508              		.size	is_Y_Step_Correct, .-is_Y_Step_Correct
 2509              		.section	.rodata
 2510 066d 000000   		.align	2
 2511              	.LC45:
 2512 0670 4552524F 		.ascii	"ERROR Wrong Position Requested**********[z8]  \015\012"
 2512      52205772 
 2512      6F6E6720 
 2512      506F7369 
 2512      74696F6E 
 2513 06a0 00       		.ascii	"\000"
 2514 06a1 000000   		.align	2
 2515              	.LC46:
 2516 06a4 4552524F 		.ascii	"ERROR Wrong Position Requested**********[z9]  \015\012"
 2516      52205772 
 2516      6F6E6720 
 2516      506F7369 
 2516      74696F6E 
 2517 06d4 00       		.ascii	"\000"
 2518 06d5 000000   		.align	2
 2519              	.LC47:
 2520 06d8 5A5F456E 		.ascii	"Z_Encoder_Not_Working**********[z10]  \015\012\000"
 2520      636F6465 
 2520      725F4E6F 
 2520      745F576F 
 2520      726B696E 
 2521              		.section	.text.is_Z_Step_Correct,"ax",%progbits
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 60


 2522              		.align	2
 2523              		.global	is_Z_Step_Correct
 2524              		.thumb
 2525              		.thumb_func
 2526              		.type	is_Z_Step_Correct, %function
 2527              	is_Z_Step_Correct:
 2528              	.LFB72:
 644:L6470.c       **** bool is_Z_Step_Correct(int No_of_executions)
 645:L6470.c       **** {
 2529              		.loc 1 645 0
 2530              		.cfi_startproc
 2531              		@ args = 0, pretend = 0, frame = 8
 2532              		@ frame_needed = 1, uses_anonymous_args = 0
 2533 0000 80B5     		push	{r7, lr}
 2534              		.cfi_def_cfa_offset 8
 2535              		.cfi_offset 7, -8
 2536              		.cfi_offset 14, -4
 2537 0002 82B0     		sub	sp, sp, #8
 2538              		.cfi_def_cfa_offset 16
 2539 0004 00AF     		add	r7, sp, #0
 2540              		.cfi_def_cfa_register 7
 2541 0006 7860     		str	r0, [r7, #4]
 646:L6470.c       ****     Read_All_Optical_Encoder();
 2542              		.loc 1 646 0
 2543 0008 FFF7FEFF 		bl	Read_All_Optical_Encoder
 647:L6470.c       ****     if(Z_QuadPosition > -2000)//to check if encoder connecter is floating
 2544              		.loc 1 647 0
 2545 000c 294B     		ldr	r3, .L143
 2546 000e 1B68     		ldr	r3, [r3]
 2547 0010 13F5FA6F 		cmn	r3, #2000
 2548 0014 41DD     		ble	.L137
 648:L6470.c       ****     {
 649:L6470.c       ****         if ((Position_Z_Requested < Z_Step_Limit) && (Position_Z_Requested >= 0) && (Z_QuadPosition
 2549              		.loc 1 649 0
 2550 0016 284B     		ldr	r3, .L143+4
 2551 0018 1B68     		ldr	r3, [r3]
 2552 001a 4DF6BF22 		movw	r2, #55999
 2553 001e 9342     		cmp	r3, r2
 2554 0020 31DC     		bgt	.L138
 2555              		.loc 1 649 0 is_stmt 0 discriminator 1
 2556 0022 254B     		ldr	r3, .L143+4
 2557 0024 1B68     		ldr	r3, [r3]
 2558 0026 002B     		cmp	r3, #0
 2559 0028 2DDB     		blt	.L138
 2560              		.loc 1 649 0 discriminator 2
 2561 002a 224B     		ldr	r3, .L143
 2562 002c 1B68     		ldr	r3, [r3]
 2563 002e 13F57A7F 		cmn	r3, #1000
 2564 0032 28DD     		ble	.L138
 2565              		.loc 1 649 0 discriminator 3
 2566 0034 1F4B     		ldr	r3, .L143
 2567 0036 1B68     		ldr	r3, [r3]
 2568 0038 4DF6BF22 		movw	r2, #55999
 2569 003c 9342     		cmp	r3, r2
 2570 003e 22DC     		bgt	.L138
 650:L6470.c       ****         {
 651:L6470.c       ****             if(((Position_Z_Move < Z_max_error)||(No_of_executions == 0))&&(((abs(Z_QuadPosition - 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 61


 2571              		.loc 1 651 0 is_stmt 1
 2572 0040 1E4B     		ldr	r3, .L143+8
 2573 0042 1B68     		ldr	r3, [r3]
 2574 0044 B3F57A6F 		cmp	r3, #4000
 2575 0048 02DB     		blt	.L139
 2576              		.loc 1 651 0 is_stmt 0 discriminator 2
 2577 004a 7B68     		ldr	r3, [r7, #4]
 2578 004c 002B     		cmp	r3, #0
 2579 004e 10D1     		bne	.L140
 2580              	.L139:
 2581              		.loc 1 651 0 discriminator 3
 2582 0050 184B     		ldr	r3, .L143
 2583 0052 1A68     		ldr	r2, [r3]
 2584 0054 1A4B     		ldr	r3, .L143+12
 2585 0056 1B68     		ldr	r3, [r3]
 2586 0058 D31A     		subs	r3, r2, r3
 2587 005a 002B     		cmp	r3, #0
 2588 005c B8BF     		it	lt
 2589 005e 5B42     		rsblt	r3, r3, #0
 2590 0060 B3F57A6F 		cmp	r3, #4000
 2591 0064 03DD     		ble	.L141
 2592              		.loc 1 651 0 discriminator 4
 2593 0066 164B     		ldr	r3, .L143+12
 2594 0068 1B68     		ldr	r3, [r3]
 2595 006a 002B     		cmp	r3, #0
 2596 006c 01D1     		bne	.L140
 2597              	.L141:
 652:L6470.c       ****                 return true;
 2598              		.loc 1 652 0 is_stmt 1
 2599 006e 0123     		movs	r3, #1
 2600 0070 1CE0     		b	.L142
 2601              	.L140:
 653:L6470.c       ****             else
 654:L6470.c       ****             {
 655:L6470.c       ****                 Error = 17;//Requested_Z_Step_Exceeding_The_Limit
 2602              		.loc 1 655 0
 2603 0072 144B     		ldr	r3, .L143+16
 2604 0074 1122     		movs	r2, #17
 2605 0076 1A60     		str	r2, [r3]
 656:L6470.c       ****                 Write_Debug_UART_Char("ERROR Wrong Position Requested**********[z8]  \r\n");
 2606              		.loc 1 656 0
 2607 0078 1348     		ldr	r0, .L143+20
 2608 007a FFF7FEFF 		bl	Write_Debug_UART_Char
 657:L6470.c       ****                 UART_print_all_values();
 2609              		.loc 1 657 0
 2610 007e FFF7FEFF 		bl	UART_print_all_values
 658:L6470.c       ****                 return false;
 2611              		.loc 1 658 0
 2612 0082 0023     		movs	r3, #0
 2613 0084 12E0     		b	.L142
 2614              	.L138:
 659:L6470.c       ****             }
 660:L6470.c       ****         }
 661:L6470.c       ****         else
 662:L6470.c       ****         {
 663:L6470.c       ****             Error = 17;//Requested_Z_Step_Exceeding_The_Limit
 2615              		.loc 1 663 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 62


 2616 0086 0F4B     		ldr	r3, .L143+16
 2617 0088 1122     		movs	r2, #17
 2618 008a 1A60     		str	r2, [r3]
 664:L6470.c       ****             Write_Debug_UART_Char("ERROR Wrong Position Requested**********[z9]  \r\n");
 2619              		.loc 1 664 0
 2620 008c 0F48     		ldr	r0, .L143+24
 2621 008e FFF7FEFF 		bl	Write_Debug_UART_Char
 665:L6470.c       ****             UART_print_all_values();
 2622              		.loc 1 665 0
 2623 0092 FFF7FEFF 		bl	UART_print_all_values
 666:L6470.c       ****             return false;
 2624              		.loc 1 666 0
 2625 0096 0023     		movs	r3, #0
 2626 0098 08E0     		b	.L142
 2627              	.L137:
 667:L6470.c       ****         }
 668:L6470.c       ****     }
 669:L6470.c       ****     else
 670:L6470.c       ****     {
 671:L6470.c       ****         Error = 14;//Z_Encoder_Not_Working
 2628              		.loc 1 671 0
 2629 009a 0A4B     		ldr	r3, .L143+16
 2630 009c 0E22     		movs	r2, #14
 2631 009e 1A60     		str	r2, [r3]
 672:L6470.c       ****         Write_Debug_UART_Char("Z_Encoder_Not_Working**********[z10]  \r\n");
 2632              		.loc 1 672 0
 2633 00a0 0B48     		ldr	r0, .L143+28
 2634 00a2 FFF7FEFF 		bl	Write_Debug_UART_Char
 673:L6470.c       ****         UART_print_all_values();
 2635              		.loc 1 673 0
 2636 00a6 FFF7FEFF 		bl	UART_print_all_values
 674:L6470.c       ****         return false;
 2637              		.loc 1 674 0
 2638 00aa 0023     		movs	r3, #0
 2639              	.L142:
 675:L6470.c       ****     }
 676:L6470.c       **** }
 2640              		.loc 1 676 0
 2641 00ac 1846     		mov	r0, r3
 2642 00ae 0837     		adds	r7, r7, #8
 2643              		.cfi_def_cfa_offset 8
 2644 00b0 BD46     		mov	sp, r7
 2645              		.cfi_def_cfa_register 13
 2646              		@ sp needed
 2647 00b2 80BD     		pop	{r7, pc}
 2648              	.L144:
 2649              		.align	2
 2650              	.L143:
 2651 00b4 00000000 		.word	Z_QuadPosition
 2652 00b8 00000000 		.word	Position_Z_Requested
 2653 00bc 00000000 		.word	Position_Z_Move
 2654 00c0 00000000 		.word	Z_last_position
 2655 00c4 00000000 		.word	Error
 2656 00c8 70060000 		.word	.LC45
 2657 00cc A4060000 		.word	.LC46
 2658 00d0 D8060000 		.word	.LC47
 2659              		.cfi_endproc
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 63


 2660              	.LFE72:
 2661              		.size	is_Z_Step_Correct, .-is_Z_Step_Correct
 2662              		.section	.rodata
 2663 0701 000000   		.align	2
 2664              	.LC48:
 2665 0704 595F486F 		.ascii	"Y_Homing_Not_Done_Yet***********[x12]  \015\012\000"
 2665      6D696E67 
 2665      5F4E6F74 
 2665      5F446F6E 
 2665      655F5965 
 2666 072e 0000     		.align	2
 2667              	.LC49:
 2668 0730 585F486F 		.ascii	"X_Homing_Not_Done_Yet***********  \015\012\000"
 2668      6D696E67 
 2668      5F4E6F74 
 2668      5F446F6E 
 2668      655F5965 
 2669 0755 000000   		.align	2
 2670              	.LC50:
 2671 0758 5A5F486F 		.ascii	"Z_Homing_Not_Done_Yet***********  \015\012\000"
 2671      6D696E67 
 2671      5F4E6F74 
 2671      5F446F6E 
 2671      655F5965 
 2672              		.section	.text.if_all_homing_done,"ax",%progbits
 2673              		.align	2
 2674              		.global	if_all_homing_done
 2675              		.thumb
 2676              		.thumb_func
 2677              		.type	if_all_homing_done, %function
 2678              	if_all_homing_done:
 2679              	.LFB73:
 677:L6470.c       **** bool if_all_homing_done()
 678:L6470.c       **** {
 2680              		.loc 1 678 0
 2681              		.cfi_startproc
 2682              		@ args = 0, pretend = 0, frame = 0
 2683              		@ frame_needed = 1, uses_anonymous_args = 0
 2684 0000 80B5     		push	{r7, lr}
 2685              		.cfi_def_cfa_offset 8
 2686              		.cfi_offset 7, -8
 2687              		.cfi_offset 14, -4
 2688 0002 00AF     		add	r7, sp, #0
 2689              		.cfi_def_cfa_register 7
 679:L6470.c       ****     if((HomeY_done == false)&&(Error == 0))
 2690              		.loc 1 679 0
 2691 0004 204B     		ldr	r3, .L150
 2692 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2693 0008 83F00103 		eor	r3, r3, #1
 2694 000c DBB2     		uxtb	r3, r3
 2695 000e 002B     		cmp	r3, #0
 2696 0010 0DD0     		beq	.L146
 2697              		.loc 1 679 0 is_stmt 0 discriminator 1
 2698 0012 1E4B     		ldr	r3, .L150+4
 2699 0014 1B68     		ldr	r3, [r3]
 2700 0016 002B     		cmp	r3, #0
 2701 0018 09D1     		bne	.L146
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 64


 680:L6470.c       ****     {
 681:L6470.c       ****         Error = 12;//Y_Homing_Not_Done_Yet
 2702              		.loc 1 681 0 is_stmt 1
 2703 001a 1C4B     		ldr	r3, .L150+4
 2704 001c 0C22     		movs	r2, #12
 2705 001e 1A60     		str	r2, [r3]
 682:L6470.c       ****         Write_Debug_UART_Char("Y_Homing_Not_Done_Yet***********[x12]  \r\n");
 2706              		.loc 1 682 0
 2707 0020 1B48     		ldr	r0, .L150+8
 2708 0022 FFF7FEFF 		bl	Write_Debug_UART_Char
 683:L6470.c       ****         UART_print_all_values();
 2709              		.loc 1 683 0
 2710 0026 FFF7FEFF 		bl	UART_print_all_values
 684:L6470.c       ****         return false;
 2711              		.loc 1 684 0
 2712 002a 0023     		movs	r3, #0
 2713 002c 2AE0     		b	.L147
 2714              	.L146:
 685:L6470.c       ****     }
 686:L6470.c       ****     else if((HomeX_done == false)&&(Error == 0))
 2715              		.loc 1 686 0
 2716 002e 194B     		ldr	r3, .L150+12
 2717 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2718 0032 83F00103 		eor	r3, r3, #1
 2719 0036 DBB2     		uxtb	r3, r3
 2720 0038 002B     		cmp	r3, #0
 2721 003a 0DD0     		beq	.L148
 2722              		.loc 1 686 0 is_stmt 0 discriminator 1
 2723 003c 134B     		ldr	r3, .L150+4
 2724 003e 1B68     		ldr	r3, [r3]
 2725 0040 002B     		cmp	r3, #0
 2726 0042 09D1     		bne	.L148
 687:L6470.c       ****     {
 688:L6470.c       ****         Error = 6;//X_Homing_Not_Done_Yet
 2727              		.loc 1 688 0 is_stmt 1
 2728 0044 114B     		ldr	r3, .L150+4
 2729 0046 0622     		movs	r2, #6
 2730 0048 1A60     		str	r2, [r3]
 689:L6470.c       ****         Write_Debug_UART_Char("X_Homing_Not_Done_Yet***********  \r\n");
 2731              		.loc 1 689 0
 2732 004a 1348     		ldr	r0, .L150+16
 2733 004c FFF7FEFF 		bl	Write_Debug_UART_Char
 690:L6470.c       ****         UART_print_all_values();
 2734              		.loc 1 690 0
 2735 0050 FFF7FEFF 		bl	UART_print_all_values
 691:L6470.c       ****         return false;
 2736              		.loc 1 691 0
 2737 0054 0023     		movs	r3, #0
 2738 0056 15E0     		b	.L147
 2739              	.L148:
 692:L6470.c       ****     }
 693:L6470.c       ****     else if((HomeZ_done == false)&&(Error == 0))
 2740              		.loc 1 693 0
 2741 0058 104B     		ldr	r3, .L150+20
 2742 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2743 005c 83F00103 		eor	r3, r3, #1
 2744 0060 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 65


 2745 0062 002B     		cmp	r3, #0
 2746 0064 0DD0     		beq	.L149
 2747              		.loc 1 693 0 is_stmt 0 discriminator 1
 2748 0066 094B     		ldr	r3, .L150+4
 2749 0068 1B68     		ldr	r3, [r3]
 2750 006a 002B     		cmp	r3, #0
 2751 006c 09D1     		bne	.L149
 694:L6470.c       ****     {
 695:L6470.c       ****         Error = 18;//Z_Homing_Not_Done_Yet
 2752              		.loc 1 695 0 is_stmt 1
 2753 006e 074B     		ldr	r3, .L150+4
 2754 0070 1222     		movs	r2, #18
 2755 0072 1A60     		str	r2, [r3]
 696:L6470.c       ****         Write_Debug_UART_Char("Z_Homing_Not_Done_Yet***********  \r\n");
 2756              		.loc 1 696 0
 2757 0074 0A48     		ldr	r0, .L150+24
 2758 0076 FFF7FEFF 		bl	Write_Debug_UART_Char
 697:L6470.c       ****         UART_print_all_values();
 2759              		.loc 1 697 0
 2760 007a FFF7FEFF 		bl	UART_print_all_values
 698:L6470.c       ****         return false;
 2761              		.loc 1 698 0
 2762 007e 0023     		movs	r3, #0
 2763 0080 00E0     		b	.L147
 2764              	.L149:
 699:L6470.c       ****     } 
 700:L6470.c       ****     else
 701:L6470.c       ****     {
 702:L6470.c       ****         return true;
 2765              		.loc 1 702 0
 2766 0082 0123     		movs	r3, #1
 2767              	.L147:
 703:L6470.c       ****     }
 704:L6470.c       **** }
 2768              		.loc 1 704 0
 2769 0084 1846     		mov	r0, r3
 2770 0086 80BD     		pop	{r7, pc}
 2771              	.L151:
 2772              		.align	2
 2773              	.L150:
 2774 0088 00000000 		.word	HomeY_done
 2775 008c 00000000 		.word	Error
 2776 0090 04070000 		.word	.LC48
 2777 0094 00000000 		.word	HomeX_done
 2778 0098 30070000 		.word	.LC49
 2779 009c 00000000 		.word	HomeZ_done
 2780 00a0 58070000 		.word	.LC50
 2781              		.cfi_endproc
 2782              	.LFE73:
 2783              		.size	if_all_homing_done, .-if_all_homing_done
 2784              		.section	.text.Initialize_PWM,"ax",%progbits
 2785              		.align	2
 2786              		.global	Initialize_PWM
 2787              		.thumb
 2788              		.thumb_func
 2789              		.type	Initialize_PWM, %function
 2790              	Initialize_PWM:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 66


 2791              	.LFB74:
 705:L6470.c       **** 
 706:L6470.c       **** 
 707:L6470.c       **** //PWM Functions Start-------------------------------------------------------
 708:L6470.c       **** void Initialize_PWM()
 709:L6470.c       **** {
 2792              		.loc 1 709 0
 2793              		.cfi_startproc
 2794              		@ args = 0, pretend = 0, frame = 0
 2795              		@ frame_needed = 1, uses_anonymous_args = 0
 2796 0000 80B5     		push	{r7, lr}
 2797              		.cfi_def_cfa_offset 8
 2798              		.cfi_offset 7, -8
 2799              		.cfi_offset 14, -4
 2800 0002 00AF     		add	r7, sp, #0
 2801              		.cfi_def_cfa_register 7
 710:L6470.c       ****     PWM_CondenserLED_Start();
 2802              		.loc 1 710 0
 2803 0004 FFF7FEFF 		bl	PWM_CondenserLED_Start
 711:L6470.c       ****     PWM_CondenserLED_WriteCompare(2);    
 2804              		.loc 1 711 0
 2805 0008 0220     		movs	r0, #2
 2806 000a FFF7FEFF 		bl	PWM_CondenserLED_WriteCompare
 712:L6470.c       **** }
 2807              		.loc 1 712 0
 2808 000e 00BF     		nop
 2809 0010 80BD     		pop	{r7, pc}
 2810              		.cfi_endproc
 2811              	.LFE74:
 2812              		.size	Initialize_PWM, .-Initialize_PWM
 2813              		.global	__aeabi_dmul
 2814              		.global	__aeabi_ddiv
 2815              		.global	__aeabi_d2uiz
 2816 0012 00BF     		.section	.rodata
 2817 077d 000000   		.align	2
 2818              	.LC51:
 2819 0780 4C454420 		.ascii	"LED Value Recived--->\000"
 2819      56616C75 
 2819      65205265 
 2819      63697665 
 2819      642D2D2D 
 2820 0796 0000     		.align	2
 2821              	.LC52:
 2822 0798 53657420 		.ascii	"Set LED Command Executed  \015\012\000"
 2822      4C454420 
 2822      436F6D6D 
 2822      616E6420 
 2822      45786563 
 2823              		.section	.text.set_CondenserLED,"ax",%progbits
 2824              		.align	2
 2825              		.global	set_CondenserLED
 2826              		.thumb
 2827              		.thumb_func
 2828              		.type	set_CondenserLED, %function
 2829              	set_CondenserLED:
 2830              	.LFB75:
 713:L6470.c       **** int set_CondenserLED()//Set Condenser LED light intensity
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 67


 714:L6470.c       **** {
 2831              		.loc 1 714 0
 2832              		.cfi_startproc
 2833              		@ args = 0, pretend = 0, frame = 0
 2834              		@ frame_needed = 1, uses_anonymous_args = 0
 2835 0000 98B5     		push	{r3, r4, r7, lr}
 2836              		.cfi_def_cfa_offset 16
 2837              		.cfi_offset 3, -16
 2838              		.cfi_offset 4, -12
 2839              		.cfi_offset 7, -8
 2840              		.cfi_offset 14, -4
 2841 0002 00AF     		add	r7, sp, #0
 2842              		.cfi_def_cfa_register 7
 715:L6470.c       ****     PWM_comare_value = ((unsigned int)USB_received[3] << 8) + USB_received[2];  //Read LED intensit
 2843              		.loc 1 715 0
 2844 0004 1E4B     		ldr	r3, .L155+8
 2845 0006 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 2846 0008 1B02     		lsls	r3, r3, #8
 2847 000a 1D4A     		ldr	r2, .L155+8
 2848 000c 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 2849 000e 1344     		add	r3, r3, r2
 2850 0010 1A46     		mov	r2, r3
 2851 0012 1C4B     		ldr	r3, .L155+12
 2852 0014 1A60     		str	r2, [r3]
 716:L6470.c       ****     PWM_CondenserLED_WriteCompare((PWM_comare_value*0.6)/10);    //Writing LED value in to PWM maxi
 2853              		.loc 1 716 0
 2854 0016 1B4B     		ldr	r3, .L155+12
 2855 0018 1B68     		ldr	r3, [r3]
 2856 001a 1846     		mov	r0, r3
 2857 001c FFF7FEFF 		bl	__aeabi_i2d
 2858 0020 15A3     		adr	r3, .L155
 2859 0022 D3E90023 		ldrd	r2, [r3]
 2860 0026 FFF7FEFF 		bl	__aeabi_dmul
 2861 002a 0346     		mov	r3, r0
 2862 002c 0C46     		mov	r4, r1
 2863 002e 1846     		mov	r0, r3
 2864 0030 2146     		mov	r1, r4
 2865 0032 4FF00002 		mov	r2, #0
 2866 0036 144B     		ldr	r3, .L155+16
 2867 0038 FFF7FEFF 		bl	__aeabi_ddiv
 2868 003c 0346     		mov	r3, r0
 2869 003e 0C46     		mov	r4, r1
 2870 0040 1846     		mov	r0, r3
 2871 0042 2146     		mov	r1, r4
 2872 0044 FFF7FEFF 		bl	__aeabi_d2uiz
 2873 0048 0346     		mov	r3, r0
 2874 004a 9BB2     		uxth	r3, r3
 2875 004c 1846     		mov	r0, r3
 2876 004e FFF7FEFF 		bl	PWM_CondenserLED_WriteCompare
 717:L6470.c       ****     Write_Debug_UART_Char("LED Value Recived--->");
 2877              		.loc 1 717 0
 2878 0052 0E48     		ldr	r0, .L155+20
 2879 0054 FFF7FEFF 		bl	Write_Debug_UART_Char
 718:L6470.c       ****     Write_Debug_UART_Int(PWM_comare_value);
 2880              		.loc 1 718 0
 2881 0058 0A4B     		ldr	r3, .L155+12
 2882 005a 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 68


 2883 005c 1846     		mov	r0, r3
 2884 005e FFF7FEFF 		bl	Write_Debug_UART_Int
 719:L6470.c       ****     Write_Debug_UART_Char("\r\n");
 2885              		.loc 1 719 0
 2886 0062 0B48     		ldr	r0, .L155+24
 2887 0064 FFF7FEFF 		bl	Write_Debug_UART_Char
 720:L6470.c       ****     Write_Debug_UART_Char("Set LED Command Executed  \r\n");
 2888              		.loc 1 720 0
 2889 0068 0A48     		ldr	r0, .L155+28
 2890 006a FFF7FEFF 		bl	Write_Debug_UART_Char
 721:L6470.c       ****     return 0;
 2891              		.loc 1 721 0
 2892 006e 0023     		movs	r3, #0
 722:L6470.c       **** }
 2893              		.loc 1 722 0
 2894 0070 1846     		mov	r0, r3
 2895 0072 98BD     		pop	{r3, r4, r7, pc}
 2896              	.L156:
 2897 0074 AFF30080 		.align	3
 2898              	.L155:
 2899 0078 33333333 		.word	858993459
 2900 007c 3333E33F 		.word	1071854387
 2901 0080 00000000 		.word	USB_received
 2902 0084 00000000 		.word	PWM_comare_value
 2903 0088 00002440 		.word	1076101120
 2904 008c 80070000 		.word	.LC51
 2905 0090 84030000 		.word	.LC26
 2906 0094 98070000 		.word	.LC52
 2907              		.cfi_endproc
 2908              	.LFE75:
 2909              		.size	set_CondenserLED, .-set_CondenserLED
 2910              		.section	.text.Initialize_And_Start_All_Opt_Encoder,"ax",%progbits
 2911              		.align	2
 2912              		.global	Initialize_And_Start_All_Opt_Encoder
 2913              		.thumb
 2914              		.thumb_func
 2915              		.type	Initialize_And_Start_All_Opt_Encoder, %function
 2916              	Initialize_And_Start_All_Opt_Encoder:
 2917              	.LFB76:
 723:L6470.c       **** //PWM Functions Stop-------------------------------------------------------
 724:L6470.c       **** 
 725:L6470.c       **** //Optical Decoder Functions Start-------------------------------------------------------
 726:L6470.c       **** void Initialize_And_Start_All_Opt_Encoder()//Initialize and start Interrupt for XY encoder count an
 727:L6470.c       **** {   
 2918              		.loc 1 727 0
 2919              		.cfi_startproc
 2920              		@ args = 0, pretend = 0, frame = 0
 2921              		@ frame_needed = 1, uses_anonymous_args = 0
 2922 0000 80B5     		push	{r7, lr}
 2923              		.cfi_def_cfa_offset 8
 2924              		.cfi_offset 7, -8
 2925              		.cfi_offset 14, -4
 2926 0002 00AF     		add	r7, sp, #0
 2927              		.cfi_def_cfa_register 7
 728:L6470.c       ****     X_QuadPosition = 0;
 2928              		.loc 1 728 0
 2929 0004 0A4B     		ldr	r3, .L158
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 69


 2930 0006 0022     		movs	r2, #0
 2931 0008 1A60     		str	r2, [r3]
 729:L6470.c       ****     Y_QuadPosition = 0;
 2932              		.loc 1 729 0
 2933 000a 0A4B     		ldr	r3, .L158+4
 2934 000c 0022     		movs	r2, #0
 2935 000e 1A60     		str	r2, [r3]
 730:L6470.c       ****     Z_QuadPosition =0 ;
 2936              		.loc 1 730 0
 2937 0010 094B     		ldr	r3, .L158+8
 2938 0012 0022     		movs	r2, #0
 2939 0014 1A60     		str	r2, [r3]
 731:L6470.c       ****     QuadDec_XY_Start();
 2940              		.loc 1 731 0
 2941 0016 FFF7FEFF 		bl	QuadDec_XY_Start
 732:L6470.c       ****     QuadDec_Z_Start();
 2942              		.loc 1 732 0
 2943 001a FFF7FEFF 		bl	QuadDec_Z_Start
 733:L6470.c       ****     Enable_Encoder_X(0);
 2944              		.loc 1 733 0
 2945 001e 0020     		movs	r0, #0
 2946 0020 FFF7FEFF 		bl	Enable_Encoder_X
 734:L6470.c       ****     Enable_Encoder_Y(0);
 2947              		.loc 1 734 0
 2948 0024 0020     		movs	r0, #0
 2949 0026 FFF7FEFF 		bl	Enable_Encoder_Y
 735:L6470.c       **** }
 2950              		.loc 1 735 0
 2951 002a 00BF     		nop
 2952 002c 80BD     		pop	{r7, pc}
 2953              	.L159:
 2954 002e 00BF     		.align	2
 2955              	.L158:
 2956 0030 00000000 		.word	X_QuadPosition
 2957 0034 00000000 		.word	Y_QuadPosition
 2958 0038 00000000 		.word	Z_QuadPosition
 2959              		.cfi_endproc
 2960              	.LFE76:
 2961              		.size	Initialize_And_Start_All_Opt_Encoder, .-Initialize_And_Start_All_Opt_Encoder
 2962              		.section	.text.Enable_Encoder_X,"ax",%progbits
 2963              		.align	2
 2964              		.global	Enable_Encoder_X
 2965              		.thumb
 2966              		.thumb_func
 2967              		.type	Enable_Encoder_X, %function
 2968              	Enable_Encoder_X:
 2969              	.LFB77:
 736:L6470.c       **** void Enable_Encoder_X(int steps)
 737:L6470.c       **** {
 2970              		.loc 1 737 0
 2971              		.cfi_startproc
 2972              		@ args = 0, pretend = 0, frame = 8
 2973              		@ frame_needed = 1, uses_anonymous_args = 0
 2974 0000 80B5     		push	{r7, lr}
 2975              		.cfi_def_cfa_offset 8
 2976              		.cfi_offset 7, -8
 2977              		.cfi_offset 14, -4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 70


 2978 0002 82B0     		sub	sp, sp, #8
 2979              		.cfi_def_cfa_offset 16
 2980 0004 00AF     		add	r7, sp, #0
 2981              		.cfi_def_cfa_register 7
 2982 0006 7860     		str	r0, [r7, #4]
 738:L6470.c       ****     EncoderXnYSelect = 0; // 0 for X and 1 for Y
 2983              		.loc 1 738 0
 2984 0008 064B     		ldr	r3, .L161
 2985 000a 0022     		movs	r2, #0
 2986 000c 1A60     		str	r2, [r3]
 739:L6470.c       ****     QuadDec_XY_SetCounter(steps);
 2987              		.loc 1 739 0
 2988 000e 7868     		ldr	r0, [r7, #4]
 2989 0010 FFF7FEFF 		bl	QuadDec_XY_SetCounter
 740:L6470.c       ****     EncoderXnYSelect_Control_Reg_Write(0);  //0 for X and 1 for Y
 2990              		.loc 1 740 0
 2991 0014 0020     		movs	r0, #0
 2992 0016 FFF7FEFF 		bl	EncoderXnYSelect_Control_Reg_Write
 741:L6470.c       **** }
 2993              		.loc 1 741 0
 2994 001a 00BF     		nop
 2995 001c 0837     		adds	r7, r7, #8
 2996              		.cfi_def_cfa_offset 8
 2997 001e BD46     		mov	sp, r7
 2998              		.cfi_def_cfa_register 13
 2999              		@ sp needed
 3000 0020 80BD     		pop	{r7, pc}
 3001              	.L162:
 3002 0022 00BF     		.align	2
 3003              	.L161:
 3004 0024 00000000 		.word	EncoderXnYSelect
 3005              		.cfi_endproc
 3006              	.LFE77:
 3007              		.size	Enable_Encoder_X, .-Enable_Encoder_X
 3008              		.section	.text.Enable_Encoder_Y,"ax",%progbits
 3009              		.align	2
 3010              		.global	Enable_Encoder_Y
 3011              		.thumb
 3012              		.thumb_func
 3013              		.type	Enable_Encoder_Y, %function
 3014              	Enable_Encoder_Y:
 3015              	.LFB78:
 742:L6470.c       **** void Enable_Encoder_Y(int steps)
 743:L6470.c       **** {
 3016              		.loc 1 743 0
 3017              		.cfi_startproc
 3018              		@ args = 0, pretend = 0, frame = 8
 3019              		@ frame_needed = 1, uses_anonymous_args = 0
 3020 0000 80B5     		push	{r7, lr}
 3021              		.cfi_def_cfa_offset 8
 3022              		.cfi_offset 7, -8
 3023              		.cfi_offset 14, -4
 3024 0002 82B0     		sub	sp, sp, #8
 3025              		.cfi_def_cfa_offset 16
 3026 0004 00AF     		add	r7, sp, #0
 3027              		.cfi_def_cfa_register 7
 3028 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 71


 744:L6470.c       ****     QuadDec_XY_SetCounter(steps);
 3029              		.loc 1 744 0
 3030 0008 7868     		ldr	r0, [r7, #4]
 3031 000a FFF7FEFF 		bl	QuadDec_XY_SetCounter
 745:L6470.c       ****     EncoderXnYSelect_Control_Reg_Write(1);  //0 for X and 1 for Y
 3032              		.loc 1 745 0
 3033 000e 0120     		movs	r0, #1
 3034 0010 FFF7FEFF 		bl	EncoderXnYSelect_Control_Reg_Write
 746:L6470.c       ****     EncoderXnYSelect = 1; // 0 for X and 1 for Y
 3035              		.loc 1 746 0
 3036 0014 034B     		ldr	r3, .L164
 3037 0016 0122     		movs	r2, #1
 3038 0018 1A60     		str	r2, [r3]
 747:L6470.c       **** }
 3039              		.loc 1 747 0
 3040 001a 00BF     		nop
 3041 001c 0837     		adds	r7, r7, #8
 3042              		.cfi_def_cfa_offset 8
 3043 001e BD46     		mov	sp, r7
 3044              		.cfi_def_cfa_register 13
 3045              		@ sp needed
 3046 0020 80BD     		pop	{r7, pc}
 3047              	.L165:
 3048 0022 00BF     		.align	2
 3049              	.L164:
 3050 0024 00000000 		.word	EncoderXnYSelect
 3051              		.cfi_endproc
 3052              	.LFE78:
 3053              		.size	Enable_Encoder_Y, .-Enable_Encoder_Y
 3054              		.section	.text.Read_All_Optical_Encoder,"ax",%progbits
 3055              		.align	2
 3056              		.global	Read_All_Optical_Encoder
 3057              		.thumb
 3058              		.thumb_func
 3059              		.type	Read_All_Optical_Encoder, %function
 3060              	Read_All_Optical_Encoder:
 3061              	.LFB79:
 748:L6470.c       **** void Read_All_Optical_Encoder()//Read all optical encoder value and update XYZ value
 749:L6470.c       **** {
 3062              		.loc 1 749 0
 3063              		.cfi_startproc
 3064              		@ args = 0, pretend = 0, frame = 0
 3065              		@ frame_needed = 1, uses_anonymous_args = 0
 3066 0000 80B5     		push	{r7, lr}
 3067              		.cfi_def_cfa_offset 8
 3068              		.cfi_offset 7, -8
 3069              		.cfi_offset 14, -4
 3070 0002 00AF     		add	r7, sp, #0
 3071              		.cfi_def_cfa_register 7
 750:L6470.c       ****     if(EncoderXnYSelect == 0)
 3072              		.loc 1 750 0
 3073 0004 114B     		ldr	r3, .L169
 3074 0006 1B68     		ldr	r3, [r3]
 3075 0008 002B     		cmp	r3, #0
 3076 000a 09D1     		bne	.L167
 751:L6470.c       ****     {
 752:L6470.c       ****         X_QuadPosition = -QuadDec_XY_GetCounter();
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 72


 3077              		.loc 1 752 0
 3078 000c FFF7FEFF 		bl	QuadDec_XY_GetCounter
 3079 0010 0346     		mov	r3, r0
 3080 0012 5B42     		negs	r3, r3
 3081 0014 0E4A     		ldr	r2, .L169+4
 3082 0016 1360     		str	r3, [r2]
 753:L6470.c       ****         Y_QuadPosition = Buffer_Y_QuadPosition;
 3083              		.loc 1 753 0
 3084 0018 0E4B     		ldr	r3, .L169+8
 3085 001a 1B68     		ldr	r3, [r3]
 3086 001c 0E4A     		ldr	r2, .L169+12
 3087 001e 1360     		str	r3, [r2]
 3088              	.L167:
 754:L6470.c       ****     }
 755:L6470.c       ****     if(EncoderXnYSelect == 1)
 3089              		.loc 1 755 0
 3090 0020 0A4B     		ldr	r3, .L169
 3091 0022 1B68     		ldr	r3, [r3]
 3092 0024 012B     		cmp	r3, #1
 3093 0026 09D1     		bne	.L168
 756:L6470.c       ****     {
 757:L6470.c       ****         X_QuadPosition = Buffer_X_QuadPosition;
 3094              		.loc 1 757 0
 3095 0028 0C4B     		ldr	r3, .L169+16
 3096 002a 1B68     		ldr	r3, [r3]
 3097 002c 084A     		ldr	r2, .L169+4
 3098 002e 1360     		str	r3, [r2]
 758:L6470.c       ****         Y_QuadPosition = -QuadDec_XY_GetCounter();
 3099              		.loc 1 758 0
 3100 0030 FFF7FEFF 		bl	QuadDec_XY_GetCounter
 3101 0034 0346     		mov	r3, r0
 3102 0036 5B42     		negs	r3, r3
 3103 0038 074A     		ldr	r2, .L169+12
 3104 003a 1360     		str	r3, [r2]
 3105              	.L168:
 759:L6470.c       ****     }
 760:L6470.c       ****     Z_QuadPosition = -QuadDec_Z_GetCounter();
 3106              		.loc 1 760 0
 3107 003c FFF7FEFF 		bl	QuadDec_Z_GetCounter
 3108 0040 0346     		mov	r3, r0
 3109 0042 5B42     		negs	r3, r3
 3110 0044 064A     		ldr	r2, .L169+20
 3111 0046 1360     		str	r3, [r2]
 761:L6470.c       **** }    
 3112              		.loc 1 761 0
 3113 0048 00BF     		nop
 3114 004a 80BD     		pop	{r7, pc}
 3115              	.L170:
 3116              		.align	2
 3117              	.L169:
 3118 004c 00000000 		.word	EncoderXnYSelect
 3119 0050 00000000 		.word	X_QuadPosition
 3120 0054 00000000 		.word	Buffer_Y_QuadPosition
 3121 0058 00000000 		.word	Y_QuadPosition
 3122 005c 00000000 		.word	Buffer_X_QuadPosition
 3123 0060 00000000 		.word	Z_QuadPosition
 3124              		.cfi_endproc
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 73


 3125              	.LFE79:
 3126              		.size	Read_All_Optical_Encoder, .-Read_All_Optical_Encoder
 3127              		.section	.rodata
 3128 07b5 000000   		.align	2
 3129              	.LC53:
 3130 07b8 50434220 		.ascii	"PCB Reset Command Recived  \015\012\000"
 3130      52657365 
 3130      7420436F 
 3130      6D6D616E 
 3130      64205265 
 3131 07d6 0000     		.align	2
 3132              	.LC54:
 3133 07d8 47657420 		.ascii	"Get Status Command Recived  \015\012\000"
 3133      53746174 
 3133      75732043 
 3133      6F6D6D61 
 3133      6E642052 
 3134 07f7 00       		.align	2
 3135              	.LC55:
 3136 07f8 57726F6E 		.ascii	"Wrong Command Received*********** \015\012\000"
 3136      6720436F 
 3136      6D6D616E 
 3136      64205265 
 3136      63656976 
 3137              		.section	.text.Process_USB_Data,"ax",%progbits
 3138              		.align	2
 3139              		.global	Process_USB_Data
 3140              		.thumb
 3141              		.thumb_func
 3142              		.type	Process_USB_Data, %function
 3143              	Process_USB_Data:
 3144              	.LFB80:
 762:L6470.c       **** //Optical Decoder Functions Stop-------------------------------------------------------
 763:L6470.c       **** 
 764:L6470.c       **** 
 765:L6470.c       **** //USB Functions Start-------------------------------------------------------
 766:L6470.c       **** void Process_USB_Data()/* Process USB incoming data command. */
 767:L6470.c       **** {
 3145              		.loc 1 767 0
 3146              		.cfi_startproc
 3147              		@ args = 0, pretend = 0, frame = 0
 3148              		@ frame_needed = 1, uses_anonymous_args = 0
 3149 0000 80B5     		push	{r7, lr}
 3150              		.cfi_def_cfa_offset 8
 3151              		.cfi_offset 7, -8
 3152              		.cfi_offset 14, -4
 3153 0002 00AF     		add	r7, sp, #0
 3154              		.cfi_def_cfa_register 7
 768:L6470.c       ****     Pin_USB_RX_TX_Indicator_LED_Write(1); /* turn ON LED as a indicator to start process the comman
 3155              		.loc 1 768 0
 3156 0004 0120     		movs	r0, #1
 3157 0006 FFF7FEFF 		bl	Pin_USB_RX_TX_Indicator_LED_Write
 769:L6470.c       ****     Error = 0;
 3158              		.loc 1 769 0
 3159 000a 804B     		ldr	r3, .L184
 3160 000c 0022     		movs	r2, #0
 3161 000e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 74


 770:L6470.c       ****     command = ((unsigned int)USB_received[1] << 8) + USB_received[0];   /* Reading USB data. */
 3162              		.loc 1 770 0
 3163 0010 7F4B     		ldr	r3, .L184+4
 3164 0012 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3165 0014 1B02     		lsls	r3, r3, #8
 3166 0016 7E4A     		ldr	r2, .L184+4
 3167 0018 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3168 001a 1344     		add	r3, r3, r2
 3169 001c 7D4A     		ldr	r2, .L184+8
 3170 001e 1360     		str	r3, [r2]
 771:L6470.c       ****     /*Compare USB data and execute the command*/
 772:L6470.c       **** 
 773:L6470.c       ****     if (command == HomeX)                                          
 3171              		.loc 1 773 0
 3172 0020 7C4B     		ldr	r3, .L184+8
 3173 0022 1B68     		ldr	r3, [r3]
 3174 0024 7A2B     		cmp	r3, #122
 3175 0026 0AD1     		bne	.L172
 774:L6470.c       ****     {
 775:L6470.c       ****         Error = home_X();
 3176              		.loc 1 775 0
 3177 0028 FFF7FEFF 		bl	home_X
 3178 002c 0246     		mov	r2, r0
 3179 002e 774B     		ldr	r3, .L184
 3180 0030 1A60     		str	r2, [r3]
 776:L6470.c       ****         Send_Feedback_to_USB(Error);
 3181              		.loc 1 776 0
 3182 0032 764B     		ldr	r3, .L184
 3183 0034 1B68     		ldr	r3, [r3]
 3184 0036 1846     		mov	r0, r3
 3185 0038 FFF7FEFF 		bl	Send_Feedback_to_USB
 3186 003c E1E0     		b	.L173
 3187              	.L172:
 777:L6470.c       ****     }
 778:L6470.c       ****     else if (command == HomeY)                           
 3188              		.loc 1 778 0
 3189 003e 754B     		ldr	r3, .L184+8
 3190 0040 1B68     		ldr	r3, [r3]
 3191 0042 7B2B     		cmp	r3, #123
 3192 0044 0AD1     		bne	.L174
 779:L6470.c       ****     {
 780:L6470.c       ****         Error = home_Y();
 3193              		.loc 1 780 0
 3194 0046 FFF7FEFF 		bl	home_Y
 3195 004a 0246     		mov	r2, r0
 3196 004c 6F4B     		ldr	r3, .L184
 3197 004e 1A60     		str	r2, [r3]
 781:L6470.c       ****         Send_Feedback_to_USB(Error);
 3198              		.loc 1 781 0
 3199 0050 6E4B     		ldr	r3, .L184
 3200 0052 1B68     		ldr	r3, [r3]
 3201 0054 1846     		mov	r0, r3
 3202 0056 FFF7FEFF 		bl	Send_Feedback_to_USB
 3203 005a D2E0     		b	.L173
 3204              	.L174:
 782:L6470.c       ****     }
 783:L6470.c       ****     else if (command == HomeZ)                           
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 75


 3205              		.loc 1 783 0
 3206 005c 6D4B     		ldr	r3, .L184+8
 3207 005e 1B68     		ldr	r3, [r3]
 3208 0060 7C2B     		cmp	r3, #124
 3209 0062 0AD1     		bne	.L175
 784:L6470.c       ****     {
 785:L6470.c       ****         Error = home_Z();
 3210              		.loc 1 785 0
 3211 0064 FFF7FEFF 		bl	home_Z
 3212 0068 0246     		mov	r2, r0
 3213 006a 684B     		ldr	r3, .L184
 3214 006c 1A60     		str	r2, [r3]
 786:L6470.c       ****         Send_Feedback_to_USB(Error);
 3215              		.loc 1 786 0
 3216 006e 674B     		ldr	r3, .L184
 3217 0070 1B68     		ldr	r3, [r3]
 3218 0072 1846     		mov	r0, r3
 3219 0074 FFF7FEFF 		bl	Send_Feedback_to_USB
 3220 0078 C3E0     		b	.L173
 3221              	.L175:
 787:L6470.c       ****     }
 788:L6470.c       ****     else if (command == GotoX)                           
 3222              		.loc 1 788 0
 3223 007a 664B     		ldr	r3, .L184+8
 3224 007c 1B68     		ldr	r3, [r3]
 3225 007e B3F5F46F 		cmp	r3, #1952
 3226 0082 1DD1     		bne	.L176
 789:L6470.c       ****     {
 790:L6470.c       ****         Position_X_Requested = ((int32)USB_received[5] << 24) + ((int32)USB_received[4] << 16) + ((
 3227              		.loc 1 790 0
 3228 0084 624B     		ldr	r3, .L184+4
 3229 0086 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 3230 0088 1A06     		lsls	r2, r3, #24
 3231 008a 614B     		ldr	r3, .L184+4
 3232 008c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3233 008e 1B04     		lsls	r3, r3, #16
 3234 0090 1A44     		add	r2, r2, r3
 3235 0092 5F4B     		ldr	r3, .L184+4
 3236 0094 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 3237 0096 1B02     		lsls	r3, r3, #8
 3238 0098 1344     		add	r3, r3, r2
 3239 009a 5D4A     		ldr	r2, .L184+4
 3240 009c 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 3241 009e 1344     		add	r3, r3, r2
 3242 00a0 5D4A     		ldr	r2, .L184+12
 3243 00a2 1360     		str	r3, [r2]
 791:L6470.c       ****         Error = goTo_X(Position_X_Requested);
 3244              		.loc 1 791 0
 3245 00a4 5C4B     		ldr	r3, .L184+12
 3246 00a6 1B68     		ldr	r3, [r3]
 3247 00a8 1846     		mov	r0, r3
 3248 00aa FFF7FEFF 		bl	goTo_X
 3249 00ae 0246     		mov	r2, r0
 3250 00b0 564B     		ldr	r3, .L184
 3251 00b2 1A60     		str	r2, [r3]
 792:L6470.c       ****         Send_Feedback_to_USB(Error);
 3252              		.loc 1 792 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 76


 3253 00b4 554B     		ldr	r3, .L184
 3254 00b6 1B68     		ldr	r3, [r3]
 3255 00b8 1846     		mov	r0, r3
 3256 00ba FFF7FEFF 		bl	Send_Feedback_to_USB
 3257 00be A0E0     		b	.L173
 3258              	.L176:
 793:L6470.c       ****     }
 794:L6470.c       ****     else if (command == GotoY)          
 3259              		.loc 1 794 0
 3260 00c0 544B     		ldr	r3, .L184+8
 3261 00c2 1B68     		ldr	r3, [r3]
 3262 00c4 B3F5F66F 		cmp	r3, #1968
 3263 00c8 1DD1     		bne	.L177
 795:L6470.c       ****     {
 796:L6470.c       ****         Position_Y_Requested = ((int32)USB_received[5] << 24) + ((int32)USB_received[4] << 16) + ((
 3264              		.loc 1 796 0
 3265 00ca 514B     		ldr	r3, .L184+4
 3266 00cc 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 3267 00ce 1A06     		lsls	r2, r3, #24
 3268 00d0 4F4B     		ldr	r3, .L184+4
 3269 00d2 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3270 00d4 1B04     		lsls	r3, r3, #16
 3271 00d6 1A44     		add	r2, r2, r3
 3272 00d8 4D4B     		ldr	r3, .L184+4
 3273 00da DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 3274 00dc 1B02     		lsls	r3, r3, #8
 3275 00de 1344     		add	r3, r3, r2
 3276 00e0 4B4A     		ldr	r2, .L184+4
 3277 00e2 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 3278 00e4 1344     		add	r3, r3, r2
 3279 00e6 4D4A     		ldr	r2, .L184+16
 3280 00e8 1360     		str	r3, [r2]
 797:L6470.c       ****         Error = goTo_Y(Position_Y_Requested);
 3281              		.loc 1 797 0
 3282 00ea 4C4B     		ldr	r3, .L184+16
 3283 00ec 1B68     		ldr	r3, [r3]
 3284 00ee 1846     		mov	r0, r3
 3285 00f0 FFF7FEFF 		bl	goTo_Y
 3286 00f4 0246     		mov	r2, r0
 3287 00f6 454B     		ldr	r3, .L184
 3288 00f8 1A60     		str	r2, [r3]
 798:L6470.c       ****         Send_Feedback_to_USB(Error);
 3289              		.loc 1 798 0
 3290 00fa 444B     		ldr	r3, .L184
 3291 00fc 1B68     		ldr	r3, [r3]
 3292 00fe 1846     		mov	r0, r3
 3293 0100 FFF7FEFF 		bl	Send_Feedback_to_USB
 3294 0104 7DE0     		b	.L173
 3295              	.L177:
 799:L6470.c       ****     }
 800:L6470.c       ****     else if (command == GotoZ)        
 3296              		.loc 1 800 0
 3297 0106 434B     		ldr	r3, .L184+8
 3298 0108 1B68     		ldr	r3, [r3]
 3299 010a B3F5FA6F 		cmp	r3, #2000
 3300 010e 1DD1     		bne	.L178
 801:L6470.c       ****     {
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 77


 802:L6470.c       ****         Position_Z_Requested = ((int32)USB_received[5] << 24) + ((int32)USB_received[4] << 16) + ((
 3301              		.loc 1 802 0
 3302 0110 3F4B     		ldr	r3, .L184+4
 3303 0112 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 3304 0114 1A06     		lsls	r2, r3, #24
 3305 0116 3E4B     		ldr	r3, .L184+4
 3306 0118 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 3307 011a 1B04     		lsls	r3, r3, #16
 3308 011c 1A44     		add	r2, r2, r3
 3309 011e 3C4B     		ldr	r3, .L184+4
 3310 0120 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 3311 0122 1B02     		lsls	r3, r3, #8
 3312 0124 1344     		add	r3, r3, r2
 3313 0126 3A4A     		ldr	r2, .L184+4
 3314 0128 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 3315 012a 1344     		add	r3, r3, r2
 3316 012c 3C4A     		ldr	r2, .L184+20
 3317 012e 1360     		str	r3, [r2]
 803:L6470.c       ****         Error = goTo_Z(Position_Z_Requested);
 3318              		.loc 1 803 0
 3319 0130 3B4B     		ldr	r3, .L184+20
 3320 0132 1B68     		ldr	r3, [r3]
 3321 0134 1846     		mov	r0, r3
 3322 0136 FFF7FEFF 		bl	goTo_Z
 3323 013a 0246     		mov	r2, r0
 3324 013c 334B     		ldr	r3, .L184
 3325 013e 1A60     		str	r2, [r3]
 804:L6470.c       ****         Send_Feedback_to_USB(Error);
 3326              		.loc 1 804 0
 3327 0140 324B     		ldr	r3, .L184
 3328 0142 1B68     		ldr	r3, [r3]
 3329 0144 1846     		mov	r0, r3
 3330 0146 FFF7FEFF 		bl	Send_Feedback_to_USB
 3331 014a 5AE0     		b	.L173
 3332              	.L178:
 805:L6470.c       ****     }
 806:L6470.c       ****     else if (command == Set_LED_voltage)
 3333              		.loc 1 806 0
 3334 014c 314B     		ldr	r3, .L184+8
 3335 014e 1B68     		ldr	r3, [r3]
 3336 0150 B3F5F44F 		cmp	r3, #31232
 3337 0154 0AD1     		bne	.L179
 807:L6470.c       ****     { 
 808:L6470.c       ****         set_CondenserLED();
 3338              		.loc 1 808 0
 3339 0156 FFF7FEFF 		bl	set_CondenserLED
 809:L6470.c       ****         CyDelay(100);
 3340              		.loc 1 809 0
 3341 015a 6420     		movs	r0, #100
 3342 015c FFF7FEFF 		bl	CyDelay
 810:L6470.c       ****         Send_Feedback_to_USB(Error);  
 3343              		.loc 1 810 0
 3344 0160 2A4B     		ldr	r3, .L184
 3345 0162 1B68     		ldr	r3, [r3]
 3346 0164 1846     		mov	r0, r3
 3347 0166 FFF7FEFF 		bl	Send_Feedback_to_USB
 3348 016a 4AE0     		b	.L173
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 78


 3349              	.L179:
 811:L6470.c       ****     }
 812:L6470.c       ****     else if (command == PCB_Reset)                     
 3350              		.loc 1 812 0
 3351 016c 294B     		ldr	r3, .L184+8
 3352 016e 1B68     		ldr	r3, [r3]
 3353 0170 FF2B     		cmp	r3, #255
 3354 0172 13D1     		bne	.L180
 813:L6470.c       ****     {
 814:L6470.c       ****         Write_Debug_UART_Char("PCB Reset Command Recived  \r\n");
 3355              		.loc 1 814 0
 3356 0174 2B48     		ldr	r0, .L184+24
 3357 0176 FFF7FEFF 		bl	Write_Debug_UART_Char
 815:L6470.c       ****         Write_Debug_UART_Char("\r\n");
 3358              		.loc 1 815 0
 3359 017a 2B48     		ldr	r0, .L184+28
 3360 017c FFF7FEFF 		bl	Write_Debug_UART_Char
 816:L6470.c       ****         CyDelay(500);
 3361              		.loc 1 816 0
 3362 0180 4FF4FA70 		mov	r0, #500
 3363 0184 FFF7FEFF 		bl	CyDelay
 817:L6470.c       ****         Send_Feedback_to_USB(0);
 3364              		.loc 1 817 0
 3365 0188 0020     		movs	r0, #0
 3366 018a FFF7FEFF 		bl	Send_Feedback_to_USB
 818:L6470.c       ****         CyDelay(500);
 3367              		.loc 1 818 0
 3368 018e 4FF4FA70 		mov	r0, #500
 3369 0192 FFF7FEFF 		bl	CyDelay
 819:L6470.c       ****         CySoftwareReset();
 3370              		.loc 1 819 0
 3371 0196 FFF7FEFF 		bl	CySoftwareReset
 3372 019a 32E0     		b	.L173
 3373              	.L180:
 820:L6470.c       ****     }
 821:L6470.c       ****     else if(command == SetSpeed)  
 3374              		.loc 1 821 0
 3375 019c 1D4B     		ldr	r3, .L184+8
 3376 019e 1B68     		ldr	r3, [r3]
 3377 01a0 B3F5F64F 		cmp	r3, #31488
 3378 01a4 07D1     		bne	.L181
 822:L6470.c       ****     {
 823:L6470.c       ****         Set_Speed();
 3379              		.loc 1 823 0
 3380 01a6 FFF7FEFF 		bl	Set_Speed
 824:L6470.c       ****         Send_Feedback_to_USB(Error);
 3381              		.loc 1 824 0
 3382 01aa 184B     		ldr	r3, .L184
 3383 01ac 1B68     		ldr	r3, [r3]
 3384 01ae 1846     		mov	r0, r3
 3385 01b0 FFF7FEFF 		bl	Send_Feedback_to_USB
 3386 01b4 25E0     		b	.L173
 3387              	.L181:
 825:L6470.c       ****     }
 826:L6470.c       ****     else if (command == SetNoOfExecution)
 3388              		.loc 1 826 0
 3389 01b6 174B     		ldr	r3, .L184+8
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 79


 3390 01b8 1B68     		ldr	r3, [r3]
 3391 01ba B3F5F84F 		cmp	r3, #31744
 3392 01be 07D1     		bne	.L182
 827:L6470.c       ****     {
 828:L6470.c       ****         set_no_of_execution();
 3393              		.loc 1 828 0
 3394 01c0 FFF7FEFF 		bl	set_no_of_execution
 829:L6470.c       ****         Send_Feedback_to_USB(Error);   
 3395              		.loc 1 829 0
 3396 01c4 114B     		ldr	r3, .L184
 3397 01c6 1B68     		ldr	r3, [r3]
 3398 01c8 1846     		mov	r0, r3
 3399 01ca FFF7FEFF 		bl	Send_Feedback_to_USB
 3400 01ce 18E0     		b	.L173
 3401              	.L182:
 830:L6470.c       ****     }
 831:L6470.c       ****     else if (command == Get_Status)                          
 3402              		.loc 1 831 0
 3403 01d0 104B     		ldr	r3, .L184+8
 3404 01d2 1B68     		ldr	r3, [r3]
 3405 01d4 FE2B     		cmp	r3, #254
 3406 01d6 09D1     		bne	.L183
 832:L6470.c       ****     {
 833:L6470.c       ****         Write_Debug_UART_Char("Get Status Command Recived  \r\n");
 3407              		.loc 1 833 0
 3408 01d8 1448     		ldr	r0, .L184+32
 3409 01da FFF7FEFF 		bl	Write_Debug_UART_Char
 834:L6470.c       ****         CyDelay(10);
 3410              		.loc 1 834 0
 3411 01de 0A20     		movs	r0, #10
 3412 01e0 FFF7FEFF 		bl	CyDelay
 835:L6470.c       ****         Send_Feedback_to_USB(0);
 3413              		.loc 1 835 0
 3414 01e4 0020     		movs	r0, #0
 3415 01e6 FFF7FEFF 		bl	Send_Feedback_to_USB
 3416 01ea 0AE0     		b	.L173
 3417              	.L183:
 836:L6470.c       ****     }
 837:L6470.c       ****     else
 838:L6470.c       ****     {
 839:L6470.c       ****         Error = 19;//Wrong_Command_Received
 3418              		.loc 1 839 0
 3419 01ec 074B     		ldr	r3, .L184
 3420 01ee 1322     		movs	r2, #19
 3421 01f0 1A60     		str	r2, [r3]
 840:L6470.c       ****         Write_Debug_UART_Char("Wrong Command Received*********** \r\n");
 3422              		.loc 1 840 0
 3423 01f2 0F48     		ldr	r0, .L184+36
 3424 01f4 FFF7FEFF 		bl	Write_Debug_UART_Char
 841:L6470.c       ****         UART_print_all_values();
 3425              		.loc 1 841 0
 3426 01f8 FFF7FEFF 		bl	UART_print_all_values
 842:L6470.c       ****         Send_Feedback_to_USB(19);
 3427              		.loc 1 842 0
 3428 01fc 1320     		movs	r0, #19
 3429 01fe FFF7FEFF 		bl	Send_Feedback_to_USB
 3430              	.L173:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 80


 843:L6470.c       ****     }
 844:L6470.c       ****     Pin_USB_RX_TX_Indicator_LED_Write(0);/* turn OFF LED as a indicator to stop process the command
 3431              		.loc 1 844 0
 3432 0202 0020     		movs	r0, #0
 3433 0204 FFF7FEFF 		bl	Pin_USB_RX_TX_Indicator_LED_Write
 845:L6470.c       **** }
 3434              		.loc 1 845 0
 3435 0208 00BF     		nop
 3436 020a 80BD     		pop	{r7, pc}
 3437              	.L185:
 3438              		.align	2
 3439              	.L184:
 3440 020c 00000000 		.word	Error
 3441 0210 00000000 		.word	USB_received
 3442 0214 00000000 		.word	command
 3443 0218 00000000 		.word	Position_X_Requested
 3444 021c 00000000 		.word	Position_Y_Requested
 3445 0220 00000000 		.word	Position_Z_Requested
 3446 0224 B8070000 		.word	.LC53
 3447 0228 84030000 		.word	.LC26
 3448 022c D8070000 		.word	.LC54
 3449 0230 F8070000 		.word	.LC55
 3450              		.cfi_endproc
 3451              	.LFE80:
 3452              		.size	Process_USB_Data, .-Process_USB_Data
 3453              		.section	.rodata
 3454 081d 000000   		.align	2
 3455              	.LC56:
 3456 0820 46656564 		.ascii	"Feedback Sent to Motherboard  \015\012\000"
 3456      6261636B 
 3456      2053656E 
 3456      7420746F 
 3456      204D6F74 
 3457              		.section	.text.Send_Feedback_to_USB,"ax",%progbits
 3458              		.align	2
 3459              		.global	Send_Feedback_to_USB
 3460              		.thumb
 3461              		.thumb_func
 3462              		.type	Send_Feedback_to_USB, %function
 3463              	Send_Feedback_to_USB:
 3464              	.LFB81:
 846:L6470.c       **** void Send_Feedback_to_USB(int Error)//Send Feedback to USB if USB command executed correctely 
 847:L6470.c       **** {
 3465              		.loc 1 847 0
 3466              		.cfi_startproc
 3467              		@ args = 0, pretend = 0, frame = 8
 3468              		@ frame_needed = 1, uses_anonymous_args = 0
 3469 0000 80B5     		push	{r7, lr}
 3470              		.cfi_def_cfa_offset 8
 3471              		.cfi_offset 7, -8
 3472              		.cfi_offset 14, -4
 3473 0002 82B0     		sub	sp, sp, #8
 3474              		.cfi_def_cfa_offset 16
 3475 0004 00AF     		add	r7, sp, #0
 3476              		.cfi_def_cfa_register 7
 3477 0006 7860     		str	r0, [r7, #4]
 848:L6470.c       ****     // Assigning Error bytes to No Error
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 81


 849:L6470.c       ****     USB_transmit[0] = No_Error;
 3478              		.loc 1 849 0
 3479 0008 6D4B     		ldr	r3, .L211
 3480 000a 0022     		movs	r2, #0
 3481 000c 1A70     		strb	r2, [r3]
 850:L6470.c       ****     USB_transmit[1] = No_Error >> 8;
 3482              		.loc 1 850 0
 3483 000e 6C4B     		ldr	r3, .L211
 3484 0010 0022     		movs	r2, #0
 3485 0012 5A70     		strb	r2, [r3, #1]
 851:L6470.c       ****     USB_transmit[2] = No_Error;
 3486              		.loc 1 851 0
 3487 0014 6A4B     		ldr	r3, .L211
 3488 0016 0022     		movs	r2, #0
 3489 0018 9A70     		strb	r2, [r3, #2]
 852:L6470.c       ****     USB_transmit[3] = No_Error >> 8;
 3490              		.loc 1 852 0
 3491 001a 694B     		ldr	r3, .L211
 3492 001c 0022     		movs	r2, #0
 3493 001e DA70     		strb	r2, [r3, #3]
 853:L6470.c       ****     
 854:L6470.c       ****     Read_All_Optical_Encoder();
 3494              		.loc 1 854 0
 3495 0020 FFF7FEFF 		bl	Read_All_Optical_Encoder
 855:L6470.c       ****     if(Error == 0)
 3496              		.loc 1 855 0
 3497 0024 7B68     		ldr	r3, [r7, #4]
 3498 0026 002B     		cmp	r3, #0
 3499 0028 06D1     		bne	.L187
 856:L6470.c       ****     {
 857:L6470.c       ****         USB_transmit[2] = No_Error;
 3500              		.loc 1 857 0
 3501 002a 654B     		ldr	r3, .L211
 3502 002c 0022     		movs	r2, #0
 3503 002e 9A70     		strb	r2, [r3, #2]
 858:L6470.c       ****         USB_transmit[3] = No_Error >> 8;
 3504              		.loc 1 858 0
 3505 0030 634B     		ldr	r3, .L211
 3506 0032 0022     		movs	r2, #0
 3507 0034 DA70     		strb	r2, [r3, #3]
 3508 0036 CCE0     		b	.L188
 3509              	.L187:
 859:L6470.c       ****     }
 860:L6470.c       ****     else
 861:L6470.c       ****     {
 862:L6470.c       ****         USB_transmit[0] = Error_Code;
 3510              		.loc 1 862 0
 3511 0038 614B     		ldr	r3, .L211
 3512 003a 0F22     		movs	r2, #15
 3513 003c 1A70     		strb	r2, [r3]
 863:L6470.c       ****         USB_transmit[1] = Error_Code >> 8;
 3514              		.loc 1 863 0
 3515 003e 604B     		ldr	r3, .L211
 3516 0040 0F22     		movs	r2, #15
 3517 0042 5A70     		strb	r2, [r3, #1]
 864:L6470.c       ****         switch(Error)
 3518              		.loc 1 864 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 82


 3519 0044 7B68     		ldr	r3, [r7, #4]
 3520 0046 013B     		subs	r3, r3, #1
 3521 0048 142B     		cmp	r3, #20
 3522 004a 00F2C280 		bhi	.L188
 3523 004e 01A2     		adr	r2, .L190
 3524 0050 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3525              		.p2align 2
 3526              	.L190:
 3527 0054 A9000000 		.word	.L189+1
 3528 0058 B7000000 		.word	.L191+1
 3529 005c C5000000 		.word	.L192+1
 3530 0060 D3000000 		.word	.L193+1
 3531 0064 E1000000 		.word	.L194+1
 3532 0068 EF000000 		.word	.L195+1
 3533 006c FD000000 		.word	.L196+1
 3534 0070 0B010000 		.word	.L197+1
 3535 0074 19010000 		.word	.L198+1
 3536 0078 27010000 		.word	.L199+1
 3537 007c 35010000 		.word	.L200+1
 3538 0080 43010000 		.word	.L201+1
 3539 0084 51010000 		.word	.L202+1
 3540 0088 5F010000 		.word	.L203+1
 3541 008c 6D010000 		.word	.L204+1
 3542 0090 7B010000 		.word	.L205+1
 3543 0094 89010000 		.word	.L206+1
 3544 0098 97010000 		.word	.L207+1
 3545 009c A5010000 		.word	.L208+1
 3546 00a0 B3010000 		.word	.L209+1
 3547 00a4 C5010000 		.word	.L210+1
 3548              		.p2align 1
 3549              	.L189:
 865:L6470.c       ****         {
 866:L6470.c       ****             case 1:
 867:L6470.c       ****             {
 868:L6470.c       ****                 USB_transmit[2] = X_Motor_Not_Working;
 3550              		.loc 1 868 0
 3551 00a8 454B     		ldr	r3, .L211
 3552 00aa 0122     		movs	r2, #1
 3553 00ac 9A70     		strb	r2, [r3, #2]
 869:L6470.c       ****                 USB_transmit[3] = X_Motor_Not_Working >> 8; 
 3554              		.loc 1 869 0
 3555 00ae 444B     		ldr	r3, .L211
 3556 00b0 FA22     		movs	r2, #250
 3557 00b2 DA70     		strb	r2, [r3, #3]
 870:L6470.c       ****                 break;
 3558              		.loc 1 870 0
 3559 00b4 8DE0     		b	.L188
 3560              	.L191:
 871:L6470.c       ****             }
 872:L6470.c       ****             case 2:
 873:L6470.c       ****             {
 874:L6470.c       ****                 USB_transmit[2] = X_Encoder_Not_Working;
 3561              		.loc 1 874 0
 3562 00b6 424B     		ldr	r3, .L211
 3563 00b8 0222     		movs	r2, #2
 3564 00ba 9A70     		strb	r2, [r3, #2]
 875:L6470.c       ****                 USB_transmit[3] = X_Encoder_Not_Working >> 8; 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 83


 3565              		.loc 1 875 0
 3566 00bc 404B     		ldr	r3, .L211
 3567 00be FA22     		movs	r2, #250
 3568 00c0 DA70     		strb	r2, [r3, #3]
 876:L6470.c       ****                 break;
 3569              		.loc 1 876 0
 3570 00c2 86E0     		b	.L188
 3571              	.L192:
 877:L6470.c       ****             }
 878:L6470.c       ****             case 3:
 879:L6470.c       ****             {
 880:L6470.c       ****                 USB_transmit[2] = X_Switch_Not_Working;
 3572              		.loc 1 880 0
 3573 00c4 3E4B     		ldr	r3, .L211
 3574 00c6 1722     		movs	r2, #23
 3575 00c8 9A70     		strb	r2, [r3, #2]
 881:L6470.c       ****                 USB_transmit[3] = X_Switch_Not_Working >> 8; 
 3576              		.loc 1 881 0
 3577 00ca 3D4B     		ldr	r3, .L211
 3578 00cc FA22     		movs	r2, #250
 3579 00ce DA70     		strb	r2, [r3, #3]
 882:L6470.c       ****                 break;
 3580              		.loc 1 882 0
 3581 00d0 7FE0     		b	.L188
 3582              	.L193:
 883:L6470.c       ****             }
 884:L6470.c       ****             case 4:
 885:L6470.c       ****             {
 886:L6470.c       ****                 USB_transmit[2] = X_Motor_Driver_Fault;
 3583              		.loc 1 886 0
 3584 00d2 3B4B     		ldr	r3, .L211
 3585 00d4 0722     		movs	r2, #7
 3586 00d6 9A70     		strb	r2, [r3, #2]
 887:L6470.c       ****                 USB_transmit[3] = X_Motor_Driver_Fault >> 8; 
 3587              		.loc 1 887 0
 3588 00d8 394B     		ldr	r3, .L211
 3589 00da FA22     		movs	r2, #250
 3590 00dc DA70     		strb	r2, [r3, #3]
 888:L6470.c       ****                 break;
 3591              		.loc 1 888 0
 3592 00de 78E0     		b	.L188
 3593              	.L194:
 889:L6470.c       ****             }
 890:L6470.c       ****             case 5:
 891:L6470.c       ****             {
 892:L6470.c       ****                 USB_transmit[2] = Requested_X_Step_Exceeding_The_Limit;
 3594              		.loc 1 892 0
 3595 00e0 374B     		ldr	r3, .L211
 3596 00e2 1122     		movs	r2, #17
 3597 00e4 9A70     		strb	r2, [r3, #2]
 893:L6470.c       ****                 USB_transmit[3] = Requested_X_Step_Exceeding_The_Limit >> 8; 
 3598              		.loc 1 893 0
 3599 00e6 364B     		ldr	r3, .L211
 3600 00e8 FA22     		movs	r2, #250
 3601 00ea DA70     		strb	r2, [r3, #3]
 894:L6470.c       ****                 break;
 3602              		.loc 1 894 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 84


 3603 00ec 71E0     		b	.L188
 3604              	.L195:
 895:L6470.c       ****             }
 896:L6470.c       ****             case 6:
 897:L6470.c       ****             {
 898:L6470.c       ****                 USB_transmit[2] = X_Homing_Not_Done_Yet;
 3605              		.loc 1 898 0
 3606 00ee 344B     		ldr	r3, .L211
 3607 00f0 1D22     		movs	r2, #29
 3608 00f2 9A70     		strb	r2, [r3, #2]
 899:L6470.c       ****                 USB_transmit[3] = X_Homing_Not_Done_Yet >> 8; 
 3609              		.loc 1 899 0
 3610 00f4 324B     		ldr	r3, .L211
 3611 00f6 FA22     		movs	r2, #250
 3612 00f8 DA70     		strb	r2, [r3, #3]
 900:L6470.c       ****                 break;
 3613              		.loc 1 900 0
 3614 00fa 6AE0     		b	.L188
 3615              	.L196:
 901:L6470.c       ****             }
 902:L6470.c       ****             case 7:
 903:L6470.c       ****             {
 904:L6470.c       ****                 USB_transmit[2] = Y_Motor_Not_Working;
 3616              		.loc 1 904 0
 3617 00fc 304B     		ldr	r3, .L211
 3618 00fe 0322     		movs	r2, #3
 3619 0100 9A70     		strb	r2, [r3, #2]
 905:L6470.c       ****                 USB_transmit[3] = Y_Motor_Not_Working >> 8; 
 3620              		.loc 1 905 0
 3621 0102 2F4B     		ldr	r3, .L211
 3622 0104 FA22     		movs	r2, #250
 3623 0106 DA70     		strb	r2, [r3, #3]
 906:L6470.c       ****                 break;
 3624              		.loc 1 906 0
 3625 0108 63E0     		b	.L188
 3626              	.L197:
 907:L6470.c       ****             }
 908:L6470.c       ****             case 8:
 909:L6470.c       ****             {
 910:L6470.c       ****                 USB_transmit[2] = Y_Encoder_Not_Working;
 3627              		.loc 1 910 0
 3628 010a 2D4B     		ldr	r3, .L211
 3629 010c 0422     		movs	r2, #4
 3630 010e 9A70     		strb	r2, [r3, #2]
 911:L6470.c       ****                 USB_transmit[3] = Y_Encoder_Not_Working >> 8; 
 3631              		.loc 1 911 0
 3632 0110 2B4B     		ldr	r3, .L211
 3633 0112 FA22     		movs	r2, #250
 3634 0114 DA70     		strb	r2, [r3, #3]
 912:L6470.c       ****                 break;
 3635              		.loc 1 912 0
 3636 0116 5CE0     		b	.L188
 3637              	.L198:
 913:L6470.c       ****             }
 914:L6470.c       ****             case 9:
 915:L6470.c       ****             {
 916:L6470.c       ****                 USB_transmit[2] = Y_Switch_Not_Working;
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 85


 3638              		.loc 1 916 0
 3639 0118 294B     		ldr	r3, .L211
 3640 011a 1822     		movs	r2, #24
 3641 011c 9A70     		strb	r2, [r3, #2]
 917:L6470.c       ****                 USB_transmit[3] = Y_Switch_Not_Working >> 8; 
 3642              		.loc 1 917 0
 3643 011e 284B     		ldr	r3, .L211
 3644 0120 FA22     		movs	r2, #250
 3645 0122 DA70     		strb	r2, [r3, #3]
 918:L6470.c       ****                 break;
 3646              		.loc 1 918 0
 3647 0124 55E0     		b	.L188
 3648              	.L199:
 919:L6470.c       ****             }
 920:L6470.c       ****             case 10:
 921:L6470.c       ****             {
 922:L6470.c       ****                 USB_transmit[2] = Y_Motor_Driver_Fault;
 3649              		.loc 1 922 0
 3650 0126 264B     		ldr	r3, .L211
 3651 0128 0822     		movs	r2, #8
 3652 012a 9A70     		strb	r2, [r3, #2]
 923:L6470.c       ****                 USB_transmit[3] = Y_Motor_Driver_Fault >> 8; 
 3653              		.loc 1 923 0
 3654 012c 244B     		ldr	r3, .L211
 3655 012e FA22     		movs	r2, #250
 3656 0130 DA70     		strb	r2, [r3, #3]
 924:L6470.c       ****                 break;
 3657              		.loc 1 924 0
 3658 0132 4EE0     		b	.L188
 3659              	.L200:
 925:L6470.c       ****             }
 926:L6470.c       ****             case 11:
 927:L6470.c       ****             {
 928:L6470.c       ****                 USB_transmit[2] = Requested_Y_Step_Exceeding_The_Limit;
 3660              		.loc 1 928 0
 3661 0134 224B     		ldr	r3, .L211
 3662 0136 1222     		movs	r2, #18
 3663 0138 9A70     		strb	r2, [r3, #2]
 929:L6470.c       ****                 USB_transmit[3] = Requested_Y_Step_Exceeding_The_Limit >> 8; 
 3664              		.loc 1 929 0
 3665 013a 214B     		ldr	r3, .L211
 3666 013c FA22     		movs	r2, #250
 3667 013e DA70     		strb	r2, [r3, #3]
 930:L6470.c       ****                 break;
 3668              		.loc 1 930 0
 3669 0140 47E0     		b	.L188
 3670              	.L201:
 931:L6470.c       ****             }
 932:L6470.c       ****             case 12:
 933:L6470.c       ****             {
 934:L6470.c       ****                 USB_transmit[2] = Y_Homing_Not_Done_Yet;
 3671              		.loc 1 934 0
 3672 0142 1F4B     		ldr	r3, .L211
 3673 0144 1E22     		movs	r2, #30
 3674 0146 9A70     		strb	r2, [r3, #2]
 935:L6470.c       ****                 USB_transmit[3] = Y_Homing_Not_Done_Yet >> 8; 
 3675              		.loc 1 935 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 86


 3676 0148 1D4B     		ldr	r3, .L211
 3677 014a FA22     		movs	r2, #250
 3678 014c DA70     		strb	r2, [r3, #3]
 936:L6470.c       ****                 break;
 3679              		.loc 1 936 0
 3680 014e 40E0     		b	.L188
 3681              	.L202:
 937:L6470.c       ****             }
 938:L6470.c       ****             case 13:
 939:L6470.c       ****             {
 940:L6470.c       ****                 USB_transmit[2] = Z_Motor_Not_Working ;
 3682              		.loc 1 940 0
 3683 0150 1B4B     		ldr	r3, .L211
 3684 0152 0522     		movs	r2, #5
 3685 0154 9A70     		strb	r2, [r3, #2]
 941:L6470.c       ****                 USB_transmit[3] = Z_Motor_Not_Working >> 8; 
 3686              		.loc 1 941 0
 3687 0156 1A4B     		ldr	r3, .L211
 3688 0158 FA22     		movs	r2, #250
 3689 015a DA70     		strb	r2, [r3, #3]
 942:L6470.c       ****                 break;
 3690              		.loc 1 942 0
 3691 015c 39E0     		b	.L188
 3692              	.L203:
 943:L6470.c       ****             }
 944:L6470.c       ****             case 14:
 945:L6470.c       ****             {
 946:L6470.c       ****                 USB_transmit[2] = Z_Encoder_Not_Working ;
 3693              		.loc 1 946 0
 3694 015e 184B     		ldr	r3, .L211
 3695 0160 0622     		movs	r2, #6
 3696 0162 9A70     		strb	r2, [r3, #2]
 947:L6470.c       ****                 USB_transmit[3] = Z_Encoder_Not_Working >> 8; 
 3697              		.loc 1 947 0
 3698 0164 164B     		ldr	r3, .L211
 3699 0166 FA22     		movs	r2, #250
 3700 0168 DA70     		strb	r2, [r3, #3]
 948:L6470.c       ****                 break;
 3701              		.loc 1 948 0
 3702 016a 32E0     		b	.L188
 3703              	.L204:
 949:L6470.c       ****             }
 950:L6470.c       ****             case 15:
 951:L6470.c       ****             {
 952:L6470.c       ****                 USB_transmit[2] = Z_Switch_Not_Working;
 3704              		.loc 1 952 0
 3705 016c 144B     		ldr	r3, .L211
 3706 016e 1922     		movs	r2, #25
 3707 0170 9A70     		strb	r2, [r3, #2]
 953:L6470.c       ****                 USB_transmit[3] = Z_Switch_Not_Working >> 8; 
 3708              		.loc 1 953 0
 3709 0172 134B     		ldr	r3, .L211
 3710 0174 FA22     		movs	r2, #250
 3711 0176 DA70     		strb	r2, [r3, #3]
 954:L6470.c       ****                 break;
 3712              		.loc 1 954 0
 3713 0178 2BE0     		b	.L188
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 87


 3714              	.L205:
 955:L6470.c       ****             }
 956:L6470.c       ****             case 16:
 957:L6470.c       ****             {
 958:L6470.c       ****                 USB_transmit[2] = Z_Motor_Driver_Fault;
 3715              		.loc 1 958 0
 3716 017a 114B     		ldr	r3, .L211
 3717 017c 0922     		movs	r2, #9
 3718 017e 9A70     		strb	r2, [r3, #2]
 959:L6470.c       ****                 USB_transmit[3] = Z_Motor_Driver_Fault >> 8; 
 3719              		.loc 1 959 0
 3720 0180 0F4B     		ldr	r3, .L211
 3721 0182 FA22     		movs	r2, #250
 3722 0184 DA70     		strb	r2, [r3, #3]
 960:L6470.c       ****                 break;
 3723              		.loc 1 960 0
 3724 0186 24E0     		b	.L188
 3725              	.L206:
 961:L6470.c       ****             }
 962:L6470.c       ****             case 17:
 963:L6470.c       ****             {
 964:L6470.c       ****                 USB_transmit[2] = Requested_Z_Step_Exceeding_The_Limit;
 3726              		.loc 1 964 0
 3727 0188 0D4B     		ldr	r3, .L211
 3728 018a 1322     		movs	r2, #19
 3729 018c 9A70     		strb	r2, [r3, #2]
 965:L6470.c       ****                 USB_transmit[3] = Requested_Z_Step_Exceeding_The_Limit >> 8; 
 3730              		.loc 1 965 0
 3731 018e 0C4B     		ldr	r3, .L211
 3732 0190 FA22     		movs	r2, #250
 3733 0192 DA70     		strb	r2, [r3, #3]
 966:L6470.c       ****                 break;
 3734              		.loc 1 966 0
 3735 0194 1DE0     		b	.L188
 3736              	.L207:
 967:L6470.c       ****             }
 968:L6470.c       ****             case 18:
 969:L6470.c       ****             {
 970:L6470.c       ****                 USB_transmit[2] = Z_Homing_Not_Done_Yet;
 3737              		.loc 1 970 0
 3738 0196 0A4B     		ldr	r3, .L211
 3739 0198 1F22     		movs	r2, #31
 3740 019a 9A70     		strb	r2, [r3, #2]
 971:L6470.c       ****                 USB_transmit[3] = Z_Homing_Not_Done_Yet >> 8; 
 3741              		.loc 1 971 0
 3742 019c 084B     		ldr	r3, .L211
 3743 019e FA22     		movs	r2, #250
 3744 01a0 DA70     		strb	r2, [r3, #3]
 972:L6470.c       ****                 break;
 3745              		.loc 1 972 0
 3746 01a2 16E0     		b	.L188
 3747              	.L208:
 973:L6470.c       ****             }
 974:L6470.c       ****             case 19:
 975:L6470.c       ****             {
 976:L6470.c       ****                 USB_transmit[2] = Wrong_Command_Received;
 3748              		.loc 1 976 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 88


 3749 01a4 064B     		ldr	r3, .L211
 3750 01a6 2222     		movs	r2, #34
 3751 01a8 9A70     		strb	r2, [r3, #2]
 977:L6470.c       ****                 USB_transmit[3] = Wrong_Command_Received >> 8; 
 3752              		.loc 1 977 0
 3753 01aa 054B     		ldr	r3, .L211
 3754 01ac FA22     		movs	r2, #250
 3755 01ae DA70     		strb	r2, [r3, #3]
 978:L6470.c       ****                 break;
 3756              		.loc 1 978 0
 3757 01b0 0FE0     		b	.L188
 3758              	.L209:
 979:L6470.c       ****             }
 980:L6470.c       ****             case 20:
 981:L6470.c       ****             {
 982:L6470.c       ****                 USB_transmit[2] = PCB_Paused;
 3759              		.loc 1 982 0
 3760 01b2 034B     		ldr	r3, .L211
 3761 01b4 2322     		movs	r2, #35
 3762 01b6 9A70     		strb	r2, [r3, #2]
 983:L6470.c       ****                 USB_transmit[3] =  PCB_Paused>> 8; 
 3763              		.loc 1 983 0
 3764 01b8 014B     		ldr	r3, .L211
 3765 01ba FA22     		movs	r2, #250
 3766 01bc DA70     		strb	r2, [r3, #3]
 984:L6470.c       ****                 break;
 3767              		.loc 1 984 0
 3768 01be 08E0     		b	.L188
 3769              	.L212:
 3770              		.align	2
 3771              	.L211:
 3772 01c0 00000000 		.word	USB_transmit
 3773              	.L210:
 985:L6470.c       ****             }
 986:L6470.c       ****             case 21:
 987:L6470.c       ****             {
 988:L6470.c       ****                 USB_transmit[2] = PCB_Busy;
 3774              		.loc 1 988 0
 3775 01c4 8A4B     		ldr	r3, .L213
 3776 01c6 2422     		movs	r2, #36
 3777 01c8 9A70     		strb	r2, [r3, #2]
 989:L6470.c       ****                 USB_transmit[3] =  PCB_Busy>> 8; 
 3778              		.loc 1 989 0
 3779 01ca 894B     		ldr	r3, .L213
 3780 01cc FA22     		movs	r2, #250
 3781 01ce DA70     		strb	r2, [r3, #3]
 990:L6470.c       ****                 break;
 3782              		.loc 1 990 0
 3783 01d0 00BF     		nop
 3784              	.L188:
 991:L6470.c       ****             }
 992:L6470.c       ****         }
 993:L6470.c       ****     }
 994:L6470.c       ****     USB_transmit[4] = X_QuadPosition;
 3785              		.loc 1 994 0
 3786 01d2 884B     		ldr	r3, .L213+4
 3787 01d4 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 89


 3788 01d6 5AB2     		sxtb	r2, r3
 3789 01d8 854B     		ldr	r3, .L213
 3790 01da 1A71     		strb	r2, [r3, #4]
 995:L6470.c       ****     USB_transmit[5] = X_QuadPosition >> 8;
 3791              		.loc 1 995 0
 3792 01dc 854B     		ldr	r3, .L213+4
 3793 01de 1B68     		ldr	r3, [r3]
 3794 01e0 1B12     		asrs	r3, r3, #8
 3795 01e2 5AB2     		sxtb	r2, r3
 3796 01e4 824B     		ldr	r3, .L213
 3797 01e6 5A71     		strb	r2, [r3, #5]
 996:L6470.c       ****     USB_transmit[6] = X_QuadPosition >> 16;
 3798              		.loc 1 996 0
 3799 01e8 824B     		ldr	r3, .L213+4
 3800 01ea 1B68     		ldr	r3, [r3]
 3801 01ec 1B14     		asrs	r3, r3, #16
 3802 01ee 5AB2     		sxtb	r2, r3
 3803 01f0 7F4B     		ldr	r3, .L213
 3804 01f2 9A71     		strb	r2, [r3, #6]
 997:L6470.c       ****     USB_transmit[7] = X_QuadPosition >> 24;
 3805              		.loc 1 997 0
 3806 01f4 7F4B     		ldr	r3, .L213+4
 3807 01f6 1B68     		ldr	r3, [r3]
 3808 01f8 1B16     		asrs	r3, r3, #24
 3809 01fa 5AB2     		sxtb	r2, r3
 3810 01fc 7C4B     		ldr	r3, .L213
 3811 01fe DA71     		strb	r2, [r3, #7]
 998:L6470.c       ****     USB_transmit[8] = Y_QuadPosition;
 3812              		.loc 1 998 0
 3813 0200 7D4B     		ldr	r3, .L213+8
 3814 0202 1B68     		ldr	r3, [r3]
 3815 0204 5AB2     		sxtb	r2, r3
 3816 0206 7A4B     		ldr	r3, .L213
 3817 0208 1A72     		strb	r2, [r3, #8]
 999:L6470.c       ****     USB_transmit[9] = Y_QuadPosition >> 8;
 3818              		.loc 1 999 0
 3819 020a 7B4B     		ldr	r3, .L213+8
 3820 020c 1B68     		ldr	r3, [r3]
 3821 020e 1B12     		asrs	r3, r3, #8
 3822 0210 5AB2     		sxtb	r2, r3
 3823 0212 774B     		ldr	r3, .L213
 3824 0214 5A72     		strb	r2, [r3, #9]
1000:L6470.c       ****     USB_transmit[10] = Y_QuadPosition >> 16;
 3825              		.loc 1 1000 0
 3826 0216 784B     		ldr	r3, .L213+8
 3827 0218 1B68     		ldr	r3, [r3]
 3828 021a 1B14     		asrs	r3, r3, #16
 3829 021c 5AB2     		sxtb	r2, r3
 3830 021e 744B     		ldr	r3, .L213
 3831 0220 9A72     		strb	r2, [r3, #10]
1001:L6470.c       ****     USB_transmit[11] = Y_QuadPosition >> 24;
 3832              		.loc 1 1001 0
 3833 0222 754B     		ldr	r3, .L213+8
 3834 0224 1B68     		ldr	r3, [r3]
 3835 0226 1B16     		asrs	r3, r3, #24
 3836 0228 5AB2     		sxtb	r2, r3
 3837 022a 714B     		ldr	r3, .L213
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 90


 3838 022c DA72     		strb	r2, [r3, #11]
1002:L6470.c       ****     USB_transmit[12] = Z_QuadPosition;
 3839              		.loc 1 1002 0
 3840 022e 734B     		ldr	r3, .L213+12
 3841 0230 1B68     		ldr	r3, [r3]
 3842 0232 5AB2     		sxtb	r2, r3
 3843 0234 6E4B     		ldr	r3, .L213
 3844 0236 1A73     		strb	r2, [r3, #12]
1003:L6470.c       ****     USB_transmit[13] = Z_QuadPosition >> 8;
 3845              		.loc 1 1003 0
 3846 0238 704B     		ldr	r3, .L213+12
 3847 023a 1B68     		ldr	r3, [r3]
 3848 023c 1B12     		asrs	r3, r3, #8
 3849 023e 5AB2     		sxtb	r2, r3
 3850 0240 6B4B     		ldr	r3, .L213
 3851 0242 5A73     		strb	r2, [r3, #13]
1004:L6470.c       ****     USB_transmit[14] = Z_QuadPosition >> 16;
 3852              		.loc 1 1004 0
 3853 0244 6D4B     		ldr	r3, .L213+12
 3854 0246 1B68     		ldr	r3, [r3]
 3855 0248 1B14     		asrs	r3, r3, #16
 3856 024a 5AB2     		sxtb	r2, r3
 3857 024c 684B     		ldr	r3, .L213
 3858 024e 9A73     		strb	r2, [r3, #14]
1005:L6470.c       ****     USB_transmit[15] = Z_QuadPosition >> 24;
 3859              		.loc 1 1005 0
 3860 0250 6A4B     		ldr	r3, .L213+12
 3861 0252 1B68     		ldr	r3, [r3]
 3862 0254 1B16     		asrs	r3, r3, #24
 3863 0256 5AB2     		sxtb	r2, r3
 3864 0258 654B     		ldr	r3, .L213
 3865 025a DA73     		strb	r2, [r3, #15]
1006:L6470.c       ****     USB_transmit[16] = 0;
 3866              		.loc 1 1006 0
 3867 025c 644B     		ldr	r3, .L213
 3868 025e 0022     		movs	r2, #0
 3869 0260 1A74     		strb	r2, [r3, #16]
1007:L6470.c       ****     USB_transmit[17] = 0;
 3870              		.loc 1 1007 0
 3871 0262 634B     		ldr	r3, .L213
 3872 0264 0022     		movs	r2, #0
 3873 0266 5A74     		strb	r2, [r3, #17]
1008:L6470.c       ****     USB_transmit[18] = 0;
 3874              		.loc 1 1008 0
 3875 0268 614B     		ldr	r3, .L213
 3876 026a 0022     		movs	r2, #0
 3877 026c 9A74     		strb	r2, [r3, #18]
1009:L6470.c       ****     USB_transmit[19] = 0;
 3878              		.loc 1 1009 0
 3879 026e 604B     		ldr	r3, .L213
 3880 0270 0022     		movs	r2, #0
 3881 0272 DA74     		strb	r2, [r3, #19]
1010:L6470.c       ****     USB_transmit[20] = 0;
 3882              		.loc 1 1010 0
 3883 0274 5E4B     		ldr	r3, .L213
 3884 0276 0022     		movs	r2, #0
 3885 0278 1A75     		strb	r2, [r3, #20]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 91


1011:L6470.c       ****     USB_transmit[21] = 0;
 3886              		.loc 1 1011 0
 3887 027a 5D4B     		ldr	r3, .L213
 3888 027c 0022     		movs	r2, #0
 3889 027e 5A75     		strb	r2, [r3, #21]
1012:L6470.c       ****     USB_transmit[22] = 0;
 3890              		.loc 1 1012 0
 3891 0280 5B4B     		ldr	r3, .L213
 3892 0282 0022     		movs	r2, #0
 3893 0284 9A75     		strb	r2, [r3, #22]
1013:L6470.c       ****     USB_transmit[23] = 0;
 3894              		.loc 1 1013 0
 3895 0286 5A4B     		ldr	r3, .L213
 3896 0288 0022     		movs	r2, #0
 3897 028a DA75     		strb	r2, [r3, #23]
1014:L6470.c       ****     USB_transmit[24] = 0;
 3898              		.loc 1 1014 0
 3899 028c 584B     		ldr	r3, .L213
 3900 028e 0022     		movs	r2, #0
 3901 0290 1A76     		strb	r2, [r3, #24]
1015:L6470.c       ****     USB_transmit[25] = 0;
 3902              		.loc 1 1015 0
 3903 0292 574B     		ldr	r3, .L213
 3904 0294 0022     		movs	r2, #0
 3905 0296 5A76     		strb	r2, [r3, #25]
1016:L6470.c       ****     USB_transmit[26] = 0;
 3906              		.loc 1 1016 0
 3907 0298 554B     		ldr	r3, .L213
 3908 029a 0022     		movs	r2, #0
 3909 029c 9A76     		strb	r2, [r3, #26]
1017:L6470.c       ****     USB_transmit[27] = 0;
 3910              		.loc 1 1017 0
 3911 029e 544B     		ldr	r3, .L213
 3912 02a0 0022     		movs	r2, #0
 3913 02a2 DA76     		strb	r2, [r3, #27]
1018:L6470.c       ****     USB_transmit[28] = PWM_comare_value;
 3914              		.loc 1 1018 0
 3915 02a4 564B     		ldr	r3, .L213+16
 3916 02a6 1B68     		ldr	r3, [r3]
 3917 02a8 5AB2     		sxtb	r2, r3
 3918 02aa 514B     		ldr	r3, .L213
 3919 02ac 1A77     		strb	r2, [r3, #28]
1019:L6470.c       ****     USB_transmit[29] = PWM_comare_value >> 8;
 3920              		.loc 1 1019 0
 3921 02ae 544B     		ldr	r3, .L213+16
 3922 02b0 1B68     		ldr	r3, [r3]
 3923 02b2 1B12     		asrs	r3, r3, #8
 3924 02b4 5AB2     		sxtb	r2, r3
 3925 02b6 4E4B     		ldr	r3, .L213
 3926 02b8 5A77     		strb	r2, [r3, #29]
1020:L6470.c       ****     USB_transmit[30] = 0;
 3927              		.loc 1 1020 0
 3928 02ba 4D4B     		ldr	r3, .L213
 3929 02bc 0022     		movs	r2, #0
 3930 02be 9A77     		strb	r2, [r3, #30]
1021:L6470.c       ****     USB_transmit[31] = 0;
 3931              		.loc 1 1021 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 92


 3932 02c0 4B4B     		ldr	r3, .L213
 3933 02c2 0022     		movs	r2, #0
 3934 02c4 DA77     		strb	r2, [r3, #31]
1022:L6470.c       ****     USB_transmit[32] = 0;
 3935              		.loc 1 1022 0
 3936 02c6 4A4B     		ldr	r3, .L213
 3937 02c8 0022     		movs	r2, #0
 3938 02ca 83F82020 		strb	r2, [r3, #32]
1023:L6470.c       ****     USB_transmit[33] = 0;
 3939              		.loc 1 1023 0
 3940 02ce 484B     		ldr	r3, .L213
 3941 02d0 0022     		movs	r2, #0
 3942 02d2 83F82120 		strb	r2, [r3, #33]
1024:L6470.c       ****     USB_transmit[34] = 0;
 3943              		.loc 1 1024 0
 3944 02d6 464B     		ldr	r3, .L213
 3945 02d8 0022     		movs	r2, #0
 3946 02da 83F82220 		strb	r2, [r3, #34]
1025:L6470.c       ****     USB_transmit[35] = 0;
 3947              		.loc 1 1025 0
 3948 02de 444B     		ldr	r3, .L213
 3949 02e0 0022     		movs	r2, #0
 3950 02e2 83F82320 		strb	r2, [r3, #35]
1026:L6470.c       ****     USB_transmit[36] = Motor_Speed_X;
 3951              		.loc 1 1026 0
 3952 02e6 474B     		ldr	r3, .L213+20
 3953 02e8 1B68     		ldr	r3, [r3]
 3954 02ea 5AB2     		sxtb	r2, r3
 3955 02ec 404B     		ldr	r3, .L213
 3956 02ee 83F82420 		strb	r2, [r3, #36]
1027:L6470.c       ****     USB_transmit[37] = Motor_Speed_X >> 8;
 3957              		.loc 1 1027 0
 3958 02f2 444B     		ldr	r3, .L213+20
 3959 02f4 1B68     		ldr	r3, [r3]
 3960 02f6 1B0A     		lsrs	r3, r3, #8
 3961 02f8 5AB2     		sxtb	r2, r3
 3962 02fa 3D4B     		ldr	r3, .L213
 3963 02fc 83F82520 		strb	r2, [r3, #37]
1028:L6470.c       ****     USB_transmit[38] = Motor_Speed_Y;
 3964              		.loc 1 1028 0
 3965 0300 414B     		ldr	r3, .L213+24
 3966 0302 1B68     		ldr	r3, [r3]
 3967 0304 5AB2     		sxtb	r2, r3
 3968 0306 3A4B     		ldr	r3, .L213
 3969 0308 83F82620 		strb	r2, [r3, #38]
1029:L6470.c       ****     USB_transmit[39] = Motor_Speed_Y >> 8;
 3970              		.loc 1 1029 0
 3971 030c 3E4B     		ldr	r3, .L213+24
 3972 030e 1B68     		ldr	r3, [r3]
 3973 0310 1B0A     		lsrs	r3, r3, #8
 3974 0312 5AB2     		sxtb	r2, r3
 3975 0314 364B     		ldr	r3, .L213
 3976 0316 83F82720 		strb	r2, [r3, #39]
1030:L6470.c       ****     USB_transmit[40] = Motor_Speed_Z;
 3977              		.loc 1 1030 0
 3978 031a 3C4B     		ldr	r3, .L213+28
 3979 031c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 93


 3980 031e 5AB2     		sxtb	r2, r3
 3981 0320 334B     		ldr	r3, .L213
 3982 0322 83F82820 		strb	r2, [r3, #40]
1031:L6470.c       ****     USB_transmit[41] = Motor_Speed_Z >> 8;
 3983              		.loc 1 1031 0
 3984 0326 394B     		ldr	r3, .L213+28
 3985 0328 1B68     		ldr	r3, [r3]
 3986 032a 1B0A     		lsrs	r3, r3, #8
 3987 032c 5AB2     		sxtb	r2, r3
 3988 032e 304B     		ldr	r3, .L213
 3989 0330 83F82920 		strb	r2, [r3, #41]
1032:L6470.c       ****     USB_transmit[42] = 0;
 3990              		.loc 1 1032 0
 3991 0334 2E4B     		ldr	r3, .L213
 3992 0336 0022     		movs	r2, #0
 3993 0338 83F82A20 		strb	r2, [r3, #42]
1033:L6470.c       ****     USB_transmit[43] = 0;
 3994              		.loc 1 1033 0
 3995 033c 2C4B     		ldr	r3, .L213
 3996 033e 0022     		movs	r2, #0
 3997 0340 83F82B20 		strb	r2, [r3, #43]
1034:L6470.c       ****     USB_transmit[44] = 0;
 3998              		.loc 1 1034 0
 3999 0344 2A4B     		ldr	r3, .L213
 4000 0346 0022     		movs	r2, #0
 4001 0348 83F82C20 		strb	r2, [r3, #44]
1035:L6470.c       ****     USB_transmit[45] = No_of_X_Cycle;
 4002              		.loc 1 1035 0
 4003 034c 304B     		ldr	r3, .L213+32
 4004 034e 1B68     		ldr	r3, [r3]
 4005 0350 5AB2     		sxtb	r2, r3
 4006 0352 274B     		ldr	r3, .L213
 4007 0354 83F82D20 		strb	r2, [r3, #45]
1036:L6470.c       ****     USB_transmit[46] = No_of_Y_Cycle;
 4008              		.loc 1 1036 0
 4009 0358 2E4B     		ldr	r3, .L213+36
 4010 035a 1B68     		ldr	r3, [r3]
 4011 035c 5AB2     		sxtb	r2, r3
 4012 035e 244B     		ldr	r3, .L213
 4013 0360 83F82E20 		strb	r2, [r3, #46]
1037:L6470.c       ****     USB_transmit[47] = No_of_Z_Cycle;
 4014              		.loc 1 1037 0
 4015 0364 2C4B     		ldr	r3, .L213+40
 4016 0366 1B68     		ldr	r3, [r3]
 4017 0368 5AB2     		sxtb	r2, r3
 4018 036a 214B     		ldr	r3, .L213
 4019 036c 83F82F20 		strb	r2, [r3, #47]
1038:L6470.c       ****     USB_transmit[48] = 0;
 4020              		.loc 1 1038 0
 4021 0370 1F4B     		ldr	r3, .L213
 4022 0372 0022     		movs	r2, #0
 4023 0374 83F83020 		strb	r2, [r3, #48]
1039:L6470.c       ****     USB_transmit[49] = 0;
 4024              		.loc 1 1039 0
 4025 0378 1D4B     		ldr	r3, .L213
 4026 037a 0022     		movs	r2, #0
 4027 037c 83F83120 		strb	r2, [r3, #49]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 94


1040:L6470.c       ****     USB_transmit[50] = 0;
 4028              		.loc 1 1040 0
 4029 0380 1B4B     		ldr	r3, .L213
 4030 0382 0022     		movs	r2, #0
 4031 0384 83F83220 		strb	r2, [r3, #50]
1041:L6470.c       ****     USB_transmit[51] = 0;
 4032              		.loc 1 1041 0
 4033 0388 194B     		ldr	r3, .L213
 4034 038a 0022     		movs	r2, #0
 4035 038c 83F83320 		strb	r2, [r3, #51]
1042:L6470.c       ****     
1043:L6470.c       ****     USB_transmit[52] = PCB_ID;
 4036              		.loc 1 1043 0
 4037 0390 174B     		ldr	r3, .L213
 4038 0392 0022     		movs	r2, #0
 4039 0394 83F83420 		strb	r2, [r3, #52]
1044:L6470.c       ****     USB_transmit[53] = PCB_ID >> 8;
 4040              		.loc 1 1044 0
 4041 0398 154B     		ldr	r3, .L213
 4042 039a 0022     		movs	r2, #0
 4043 039c 83F83520 		strb	r2, [r3, #53]
1045:L6470.c       ****     USB_transmit[54] = PCB_ID >> 16;
 4044              		.loc 1 1045 0
 4045 03a0 134B     		ldr	r3, .L213
 4046 03a2 0022     		movs	r2, #0
 4047 03a4 83F83620 		strb	r2, [r3, #54]
1046:L6470.c       ****     USB_transmit[55] = PCB_ID >> 24;
 4048              		.loc 1 1046 0
 4049 03a8 114B     		ldr	r3, .L213
 4050 03aa 0022     		movs	r2, #0
 4051 03ac 83F83720 		strb	r2, [r3, #55]
1047:L6470.c       ****     USB_transmit[56] = Firmware_Version;
 4052              		.loc 1 1047 0
 4053 03b0 0F4B     		ldr	r3, .L213
 4054 03b2 1922     		movs	r2, #25
 4055 03b4 83F83820 		strb	r2, [r3, #56]
1048:L6470.c       ****     USB_transmit[57] = 0;
 4056              		.loc 1 1048 0
 4057 03b8 0D4B     		ldr	r3, .L213
 4058 03ba 0022     		movs	r2, #0
 4059 03bc 83F83920 		strb	r2, [r3, #57]
1049:L6470.c       ****     
1050:L6470.c       ****     No_of_X_Cycle = 0;
 4060              		.loc 1 1050 0
 4061 03c0 134B     		ldr	r3, .L213+32
 4062 03c2 0022     		movs	r2, #0
 4063 03c4 1A60     		str	r2, [r3]
1051:L6470.c       ****     No_of_Y_Cycle = 0;
 4064              		.loc 1 1051 0
 4065 03c6 134B     		ldr	r3, .L213+36
 4066 03c8 0022     		movs	r2, #0
 4067 03ca 1A60     		str	r2, [r3]
1052:L6470.c       ****     No_of_Z_Cycle = 0;
 4068              		.loc 1 1052 0
 4069 03cc 124B     		ldr	r3, .L213+40
 4070 03ce 0022     		movs	r2, #0
 4071 03d0 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 95


1053:L6470.c       ****     Write_Debug_UART_Char("Feedback Sent to Motherboard  \r\n");
 4072              		.loc 1 1053 0
 4073 03d2 1248     		ldr	r0, .L213+44
 4074 03d4 FFF7FEFF 		bl	Write_Debug_UART_Char
1054:L6470.c       ****     Clear_USB_RX_Buffer();/* Clear all pending USB command. */
 4075              		.loc 1 1054 0
 4076 03d8 FFF7FEFF 		bl	Clear_USB_RX_Buffer
1055:L6470.c       ****     Clear_Pending_USB_Data();
 4077              		.loc 1 1055 0
 4078 03dc FFF7FEFF 		bl	Clear_Pending_USB_Data
1056:L6470.c       ****     USB_PutData(USB_transmit, 58);  //send data back to usb
 4079              		.loc 1 1056 0
 4080 03e0 3A21     		movs	r1, #58
 4081 03e2 0348     		ldr	r0, .L213
 4082 03e4 FFF7FEFF 		bl	USB_PutData
1057:L6470.c       **** }
 4083              		.loc 1 1057 0
 4084 03e8 00BF     		nop
 4085 03ea 0837     		adds	r7, r7, #8
 4086              		.cfi_def_cfa_offset 8
 4087 03ec BD46     		mov	sp, r7
 4088              		.cfi_def_cfa_register 13
 4089              		@ sp needed
 4090 03ee 80BD     		pop	{r7, pc}
 4091              	.L214:
 4092              		.align	2
 4093              	.L213:
 4094 03f0 00000000 		.word	USB_transmit
 4095 03f4 00000000 		.word	X_QuadPosition
 4096 03f8 00000000 		.word	Y_QuadPosition
 4097 03fc 00000000 		.word	Z_QuadPosition
 4098 0400 00000000 		.word	PWM_comare_value
 4099 0404 00000000 		.word	Motor_Speed_X
 4100 0408 00000000 		.word	Motor_Speed_Y
 4101 040c 00000000 		.word	Motor_Speed_Z
 4102 0410 00000000 		.word	No_of_X_Cycle
 4103 0414 00000000 		.word	No_of_Y_Cycle
 4104 0418 00000000 		.word	No_of_Z_Cycle
 4105 041c 20080000 		.word	.LC56
 4106              		.cfi_endproc
 4107              	.LFE81:
 4108              		.size	Send_Feedback_to_USB, .-Send_Feedback_to_USB
 4109              		.section	.text.USB_Detect_Indication_Via_LED,"ax",%progbits
 4110              		.align	2
 4111              		.global	USB_Detect_Indication_Via_LED
 4112              		.thumb
 4113              		.thumb_func
 4114              		.type	USB_Detect_Indication_Via_LED, %function
 4115              	USB_Detect_Indication_Via_LED:
 4116              	.LFB82:
1058:L6470.c       **** void USB_Detect_Indication_Via_LED()/* LED Indicator for USB detection. */
1059:L6470.c       **** {
 4117              		.loc 1 1059 0
 4118              		.cfi_startproc
 4119              		@ args = 0, pretend = 0, frame = 0
 4120              		@ frame_needed = 1, uses_anonymous_args = 0
 4121 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 96


 4122              		.cfi_def_cfa_offset 8
 4123              		.cfi_offset 7, -8
 4124              		.cfi_offset 14, -4
 4125 0002 00AF     		add	r7, sp, #0
 4126              		.cfi_def_cfa_register 7
1060:L6470.c       ****     /* Turn On and Off LED to indicate USB detected.*/
1061:L6470.c       ****     Pin_USB_RX_TX_Indicator_LED_Write(1);
 4127              		.loc 1 1061 0
 4128 0004 0120     		movs	r0, #1
 4129 0006 FFF7FEFF 		bl	Pin_USB_RX_TX_Indicator_LED_Write
1062:L6470.c       ****     CyDelay(30);
 4130              		.loc 1 1062 0
 4131 000a 1E20     		movs	r0, #30
 4132 000c FFF7FEFF 		bl	CyDelay
1063:L6470.c       ****     Pin_USB_RX_TX_Indicator_LED_Write(0);
 4133              		.loc 1 1063 0
 4134 0010 0020     		movs	r0, #0
 4135 0012 FFF7FEFF 		bl	Pin_USB_RX_TX_Indicator_LED_Write
1064:L6470.c       ****     CyDelay(30);
 4136              		.loc 1 1064 0
 4137 0016 1E20     		movs	r0, #30
 4138 0018 FFF7FEFF 		bl	CyDelay
1065:L6470.c       ****     Pin_USB_RX_TX_Indicator_LED_Write(1);
 4139              		.loc 1 1065 0
 4140 001c 0120     		movs	r0, #1
 4141 001e FFF7FEFF 		bl	Pin_USB_RX_TX_Indicator_LED_Write
1066:L6470.c       ****     CyDelay(30);
 4142              		.loc 1 1066 0
 4143 0022 1E20     		movs	r0, #30
 4144 0024 FFF7FEFF 		bl	CyDelay
1067:L6470.c       ****     Pin_USB_RX_TX_Indicator_LED_Write(0);
 4145              		.loc 1 1067 0
 4146 0028 0020     		movs	r0, #0
 4147 002a FFF7FEFF 		bl	Pin_USB_RX_TX_Indicator_LED_Write
1068:L6470.c       ****     CyDelay(30);
 4148              		.loc 1 1068 0
 4149 002e 1E20     		movs	r0, #30
 4150 0030 FFF7FEFF 		bl	CyDelay
1069:L6470.c       ****     Pin_USB_RX_TX_Indicator_LED_Write(1);
 4151              		.loc 1 1069 0
 4152 0034 0120     		movs	r0, #1
 4153 0036 FFF7FEFF 		bl	Pin_USB_RX_TX_Indicator_LED_Write
1070:L6470.c       ****     CyDelay(30);
 4154              		.loc 1 1070 0
 4155 003a 1E20     		movs	r0, #30
 4156 003c FFF7FEFF 		bl	CyDelay
1071:L6470.c       ****     Pin_USB_RX_TX_Indicator_LED_Write(0);
 4157              		.loc 1 1071 0
 4158 0040 0020     		movs	r0, #0
 4159 0042 FFF7FEFF 		bl	Pin_USB_RX_TX_Indicator_LED_Write
1072:L6470.c       ****     CyDelay(30);
 4160              		.loc 1 1072 0
 4161 0046 1E20     		movs	r0, #30
 4162 0048 FFF7FEFF 		bl	CyDelay
1073:L6470.c       ****     Pin_USB_RX_TX_Indicator_LED_Write(1);
 4163              		.loc 1 1073 0
 4164 004c 0120     		movs	r0, #1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 97


 4165 004e FFF7FEFF 		bl	Pin_USB_RX_TX_Indicator_LED_Write
1074:L6470.c       ****     CyDelay(30);
 4166              		.loc 1 1074 0
 4167 0052 1E20     		movs	r0, #30
 4168 0054 FFF7FEFF 		bl	CyDelay
1075:L6470.c       ****     Pin_USB_RX_TX_Indicator_LED_Write(0);
 4169              		.loc 1 1075 0
 4170 0058 0020     		movs	r0, #0
 4171 005a FFF7FEFF 		bl	Pin_USB_RX_TX_Indicator_LED_Write
1076:L6470.c       ****     CyDelay(30);
 4172              		.loc 1 1076 0
 4173 005e 1E20     		movs	r0, #30
 4174 0060 FFF7FEFF 		bl	CyDelay
1077:L6470.c       ****     Pin_USB_RX_TX_Indicator_LED_Write(1);
 4175              		.loc 1 1077 0
 4176 0064 0120     		movs	r0, #1
 4177 0066 FFF7FEFF 		bl	Pin_USB_RX_TX_Indicator_LED_Write
1078:L6470.c       ****     CyDelay(30);
 4178              		.loc 1 1078 0
 4179 006a 1E20     		movs	r0, #30
 4180 006c FFF7FEFF 		bl	CyDelay
1079:L6470.c       ****     Pin_USB_RX_TX_Indicator_LED_Write(0);
 4181              		.loc 1 1079 0
 4182 0070 0020     		movs	r0, #0
 4183 0072 FFF7FEFF 		bl	Pin_USB_RX_TX_Indicator_LED_Write
1080:L6470.c       ****     CyDelay(30);
 4184              		.loc 1 1080 0
 4185 0076 1E20     		movs	r0, #30
 4186 0078 FFF7FEFF 		bl	CyDelay
1081:L6470.c       ****     Pin_USB_RX_TX_Indicator_LED_Write(1);
 4187              		.loc 1 1081 0
 4188 007c 0120     		movs	r0, #1
 4189 007e FFF7FEFF 		bl	Pin_USB_RX_TX_Indicator_LED_Write
1082:L6470.c       ****     CyDelay(30);
 4190              		.loc 1 1082 0
 4191 0082 1E20     		movs	r0, #30
 4192 0084 FFF7FEFF 		bl	CyDelay
1083:L6470.c       ****     Pin_USB_RX_TX_Indicator_LED_Write(0);
 4193              		.loc 1 1083 0
 4194 0088 0020     		movs	r0, #0
 4195 008a FFF7FEFF 		bl	Pin_USB_RX_TX_Indicator_LED_Write
1084:L6470.c       ****     CyDelay(30);
 4196              		.loc 1 1084 0
 4197 008e 1E20     		movs	r0, #30
 4198 0090 FFF7FEFF 		bl	CyDelay
1085:L6470.c       ****     Pin_USB_RX_TX_Indicator_LED_Write(1);
 4199              		.loc 1 1085 0
 4200 0094 0120     		movs	r0, #1
 4201 0096 FFF7FEFF 		bl	Pin_USB_RX_TX_Indicator_LED_Write
1086:L6470.c       ****     CyDelay(30);
 4202              		.loc 1 1086 0
 4203 009a 1E20     		movs	r0, #30
 4204 009c FFF7FEFF 		bl	CyDelay
1087:L6470.c       ****     Pin_USB_RX_TX_Indicator_LED_Write(0);
 4205              		.loc 1 1087 0
 4206 00a0 0020     		movs	r0, #0
 4207 00a2 FFF7FEFF 		bl	Pin_USB_RX_TX_Indicator_LED_Write
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 98


1088:L6470.c       ****     CyDelay(30);
 4208              		.loc 1 1088 0
 4209 00a6 1E20     		movs	r0, #30
 4210 00a8 FFF7FEFF 		bl	CyDelay
1089:L6470.c       ****     Pin_USB_RX_TX_Indicator_LED_Write(1);
 4211              		.loc 1 1089 0
 4212 00ac 0120     		movs	r0, #1
 4213 00ae FFF7FEFF 		bl	Pin_USB_RX_TX_Indicator_LED_Write
1090:L6470.c       ****     CyDelay(30);
 4214              		.loc 1 1090 0
 4215 00b2 1E20     		movs	r0, #30
 4216 00b4 FFF7FEFF 		bl	CyDelay
1091:L6470.c       ****     Pin_USB_RX_TX_Indicator_LED_Write(0);
 4217              		.loc 1 1091 0
 4218 00b8 0020     		movs	r0, #0
 4219 00ba FFF7FEFF 		bl	Pin_USB_RX_TX_Indicator_LED_Write
1092:L6470.c       ****     CyDelay(30);
 4220              		.loc 1 1092 0
 4221 00be 1E20     		movs	r0, #30
 4222 00c0 FFF7FEFF 		bl	CyDelay
1093:L6470.c       ****     Pin_USB_RX_TX_Indicator_LED_Write(1);
 4223              		.loc 1 1093 0
 4224 00c4 0120     		movs	r0, #1
 4225 00c6 FFF7FEFF 		bl	Pin_USB_RX_TX_Indicator_LED_Write
1094:L6470.c       ****     CyDelay(30);
 4226              		.loc 1 1094 0
 4227 00ca 1E20     		movs	r0, #30
 4228 00cc FFF7FEFF 		bl	CyDelay
1095:L6470.c       ****     Pin_USB_RX_TX_Indicator_LED_Write(0);
 4229              		.loc 1 1095 0
 4230 00d0 0020     		movs	r0, #0
 4231 00d2 FFF7FEFF 		bl	Pin_USB_RX_TX_Indicator_LED_Write
1096:L6470.c       ****     CyDelay(30);
 4232              		.loc 1 1096 0
 4233 00d6 1E20     		movs	r0, #30
 4234 00d8 FFF7FEFF 		bl	CyDelay
1097:L6470.c       ****     Pin_USB_RX_TX_Indicator_LED_Write(1);
 4235              		.loc 1 1097 0
 4236 00dc 0120     		movs	r0, #1
 4237 00de FFF7FEFF 		bl	Pin_USB_RX_TX_Indicator_LED_Write
1098:L6470.c       ****     CyDelay(30);
 4238              		.loc 1 1098 0
 4239 00e2 1E20     		movs	r0, #30
 4240 00e4 FFF7FEFF 		bl	CyDelay
1099:L6470.c       ****     Pin_USB_RX_TX_Indicator_LED_Write(0);
 4241              		.loc 1 1099 0
 4242 00e8 0020     		movs	r0, #0
 4243 00ea FFF7FEFF 		bl	Pin_USB_RX_TX_Indicator_LED_Write
1100:L6470.c       **** }
 4244              		.loc 1 1100 0
 4245 00ee 00BF     		nop
 4246 00f0 80BD     		pop	{r7, pc}
 4247              		.cfi_endproc
 4248              	.LFE82:
 4249              		.size	USB_Detect_Indication_Via_LED, .-USB_Detect_Indication_Via_LED
 4250 00f2 00BF     		.section	.rodata
 4251 0841 000000   		.align	2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 99


 4252              	.LC57:
 4253 0844 55534220 		.ascii	"USB not Connected***********  \015\012\000"
 4253      6E6F7420 
 4253      436F6E6E 
 4253      65637465 
 4253      642A2A2A 
 4254 0865 000000   		.align	2
 4255              	.LC58:
 4256 0868 55534220 		.ascii	"USB Connected  \015\012\000"
 4256      436F6E6E 
 4256      65637465 
 4256      6420200D 
 4256      0A00
 4257              		.section	.text.Initialize_USB,"ax",%progbits
 4258              		.align	2
 4259              		.global	Initialize_USB
 4260              		.thumb
 4261              		.thumb_func
 4262              		.type	Initialize_USB, %function
 4263              	Initialize_USB:
 4264              	.LFB83:
1101:L6470.c       **** void Initialize_USB()/* Start the USB. */
1102:L6470.c       **** {
 4265              		.loc 1 1102 0
 4266              		.cfi_startproc
 4267              		@ args = 0, pretend = 0, frame = 0
 4268              		@ frame_needed = 1, uses_anonymous_args = 0
 4269 0000 80B5     		push	{r7, lr}
 4270              		.cfi_def_cfa_offset 8
 4271              		.cfi_offset 7, -8
 4272              		.cfi_offset 14, -4
 4273 0002 00AF     		add	r7, sp, #0
 4274              		.cfi_def_cfa_register 7
1103:L6470.c       ****     USB_Start(0, USB_5V_OPERATION);   
 4275              		.loc 1 1103 0
 4276 0004 0121     		movs	r1, #1
 4277 0006 0020     		movs	r0, #0
 4278 0008 FFF7FEFF 		bl	USB_Start
1104:L6470.c       ****     while (0 == USB_GetConfiguration()) /* wait untill USB not found. */
 4279              		.loc 1 1104 0
 4280 000c 05E0     		b	.L217
 4281              	.L218:
1105:L6470.c       ****     {
1106:L6470.c       ****         Write_Debug_UART_Char("USB not Connected***********  \r\n");
 4282              		.loc 1 1106 0
 4283 000e 0A48     		ldr	r0, .L219
 4284 0010 FFF7FEFF 		bl	Write_Debug_UART_Char
1107:L6470.c       ****         CyDelayUs(1);
 4285              		.loc 1 1107 0
 4286 0014 0120     		movs	r0, #1
 4287 0016 FFF7FEFF 		bl	CyDelayUs
 4288              	.L217:
1104:L6470.c       ****     while (0 == USB_GetConfiguration()) /* wait untill USB not found. */
 4289              		.loc 1 1104 0
 4290 001a FFF7FEFF 		bl	USB_GetConfiguration
 4291 001e 0346     		mov	r3, r0
 4292 0020 002B     		cmp	r3, #0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 100


 4293 0022 F4D0     		beq	.L218
1108:L6470.c       ****     }
1109:L6470.c       ****     USB_CDC_Init();
 4294              		.loc 1 1109 0
 4295 0024 FFF7FEFF 		bl	USB_CDC_Init
1110:L6470.c       ****     Write_Debug_UART_Char("USB Connected  \r\n");
 4296              		.loc 1 1110 0
 4297 0028 0448     		ldr	r0, .L219+4
 4298 002a FFF7FEFF 		bl	Write_Debug_UART_Char
1111:L6470.c       ****     USB_EnableSofInt();  
 4299              		.loc 1 1111 0
 4300 002e FFF7FEFF 		bl	USB_EnableSofInt
1112:L6470.c       **** }
 4301              		.loc 1 1112 0
 4302 0032 00BF     		nop
 4303 0034 80BD     		pop	{r7, pc}
 4304              	.L220:
 4305 0036 00BF     		.align	2
 4306              	.L219:
 4307 0038 44080000 		.word	.LC57
 4308 003c 68080000 		.word	.LC58
 4309              		.cfi_endproc
 4310              	.LFE83:
 4311              		.size	Initialize_USB, .-Initialize_USB
 4312              		.section	.rodata
 4313 087a 0000     		.align	2
 4314              	.LC59:
 4315 087c 55534220 		.ascii	"USB Unpluged PCB resetting ***********  \015\012\000"
 4315      556E706C 
 4315      75676564 
 4315      20504342 
 4315      20726573 
 4316              		.section	.text.Is_USB_Unpluged,"ax",%progbits
 4317              		.align	2
 4318              		.global	Is_USB_Unpluged
 4319              		.thumb
 4320              		.thumb_func
 4321              		.type	Is_USB_Unpluged, %function
 4322              	Is_USB_Unpluged:
 4323              	.LFB84:
1113:L6470.c       **** void Is_USB_Unpluged()/* Check for changes in USB port reset if USB changes. */
1114:L6470.c       **** {
 4324              		.loc 1 1114 0
 4325              		.cfi_startproc
 4326              		@ args = 0, pretend = 0, frame = 0
 4327              		@ frame_needed = 1, uses_anonymous_args = 0
 4328 0000 80B5     		push	{r7, lr}
 4329              		.cfi_def_cfa_offset 8
 4330              		.cfi_offset 7, -8
 4331              		.cfi_offset 14, -4
 4332 0002 00AF     		add	r7, sp, #0
 4333              		.cfi_def_cfa_register 7
1115:L6470.c       ****    static bool dont_Execute_1st_Time=false;
1116:L6470.c       ****    if(USB_IsConfigurationChanged() != 0)
 4334              		.loc 1 1116 0
 4335 0004 FFF7FEFF 		bl	USB_IsConfigurationChanged
 4336 0008 0346     		mov	r3, r0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 101


 4337 000a 002B     		cmp	r3, #0
 4338 000c 15D0     		beq	.L224
1117:L6470.c       ****    {
1118:L6470.c       ****        if(USB_GetConfiguration() != 0)
 4339              		.loc 1 1118 0
 4340 000e FFF7FEFF 		bl	USB_GetConfiguration
 4341 0012 0346     		mov	r3, r0
 4342 0014 002B     		cmp	r3, #0
 4343 0016 10D0     		beq	.L224
1119:L6470.c       ****        {
1120:L6470.c       ****             if(dont_Execute_1st_Time)/* Ignore for the first time. */
 4344              		.loc 1 1120 0
 4345 0018 094B     		ldr	r3, .L225
 4346 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4347 001c 002B     		cmp	r3, #0
 4348 001e 09D0     		beq	.L223
1121:L6470.c       ****             {
1122:L6470.c       ****                 Write_Debug_UART_Char("USB Unpluged PCB resetting ***********  \r\n");
 4349              		.loc 1 1122 0
 4350 0020 0848     		ldr	r0, .L225+4
 4351 0022 FFF7FEFF 		bl	Write_Debug_UART_Char
1123:L6470.c       ****                 UART_print_all_values();
 4352              		.loc 1 1123 0
 4353 0026 FFF7FEFF 		bl	UART_print_all_values
1124:L6470.c       ****                 CyDelay(1);
 4354              		.loc 1 1124 0
 4355 002a 0120     		movs	r0, #1
 4356 002c FFF7FEFF 		bl	CyDelay
1125:L6470.c       ****                 CySoftwareReset();
 4357              		.loc 1 1125 0
 4358 0030 FFF7FEFF 		bl	CySoftwareReset
 4359              	.L223:
1126:L6470.c       ****             }
1127:L6470.c       ****             dont_Execute_1st_Time = true;
 4360              		.loc 1 1127 0
 4361 0034 024B     		ldr	r3, .L225
 4362 0036 0122     		movs	r2, #1
 4363 0038 1A70     		strb	r2, [r3]
 4364              	.L224:
1128:L6470.c       ****        }
1129:L6470.c       ****    }  
1130:L6470.c       **** }
 4365              		.loc 1 1130 0
 4366 003a 00BF     		nop
 4367 003c 80BD     		pop	{r7, pc}
 4368              	.L226:
 4369 003e 00BF     		.align	2
 4370              	.L225:
 4371 0040 54000000 		.word	dont_Execute_1st_Time.8895
 4372 0044 7C080000 		.word	.LC59
 4373              		.cfi_endproc
 4374              	.LFE84:
 4375              		.size	Is_USB_Unpluged, .-Is_USB_Unpluged
 4376              		.section	.text.Clear_USB_RX_Buffer,"ax",%progbits
 4377              		.align	2
 4378              		.global	Clear_USB_RX_Buffer
 4379              		.thumb
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 102


 4380              		.thumb_func
 4381              		.type	Clear_USB_RX_Buffer, %function
 4382              	Clear_USB_RX_Buffer:
 4383              	.LFB85:
1131:L6470.c       **** void Clear_USB_RX_Buffer()/* Initialize all USB_received 64 bits to 0. */
1132:L6470.c       **** {
 4384              		.loc 1 1132 0
 4385              		.cfi_startproc
 4386              		@ args = 0, pretend = 0, frame = 8
 4387              		@ frame_needed = 1, uses_anonymous_args = 0
 4388              		@ link register save eliminated.
 4389 0000 80B4     		push	{r7}
 4390              		.cfi_def_cfa_offset 4
 4391              		.cfi_offset 7, -4
 4392 0002 83B0     		sub	sp, sp, #12
 4393              		.cfi_def_cfa_offset 16
 4394 0004 00AF     		add	r7, sp, #0
 4395              		.cfi_def_cfa_register 7
1133:L6470.c       ****     int i =0;
 4396              		.loc 1 1133 0
 4397 0006 0023     		movs	r3, #0
 4398 0008 7B60     		str	r3, [r7, #4]
1134:L6470.c       ****     for(i=0;i<65;i++)   //Initializing all bites to 0
 4399              		.loc 1 1134 0
 4400 000a 0023     		movs	r3, #0
 4401 000c 7B60     		str	r3, [r7, #4]
 4402 000e 07E0     		b	.L228
 4403              	.L229:
1135:L6470.c       ****         USB_received[i] = 0;   
 4404              		.loc 1 1135 0 discriminator 3
 4405 0010 074A     		ldr	r2, .L230
 4406 0012 7B68     		ldr	r3, [r7, #4]
 4407 0014 1344     		add	r3, r3, r2
 4408 0016 0022     		movs	r2, #0
 4409 0018 1A70     		strb	r2, [r3]
1134:L6470.c       ****     for(i=0;i<65;i++)   //Initializing all bites to 0
 4410              		.loc 1 1134 0 discriminator 3
 4411 001a 7B68     		ldr	r3, [r7, #4]
 4412 001c 0133     		adds	r3, r3, #1
 4413 001e 7B60     		str	r3, [r7, #4]
 4414              	.L228:
1134:L6470.c       ****     for(i=0;i<65;i++)   //Initializing all bites to 0
 4415              		.loc 1 1134 0 is_stmt 0 discriminator 1
 4416 0020 7B68     		ldr	r3, [r7, #4]
 4417 0022 402B     		cmp	r3, #64
 4418 0024 F4DD     		ble	.L229
1136:L6470.c       **** }
 4419              		.loc 1 1136 0 is_stmt 1
 4420 0026 00BF     		nop
 4421 0028 0C37     		adds	r7, r7, #12
 4422              		.cfi_def_cfa_offset 4
 4423 002a BD46     		mov	sp, r7
 4424              		.cfi_def_cfa_register 13
 4425              		@ sp needed
 4426 002c 80BC     		pop	{r7}
 4427              		.cfi_restore 7
 4428              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 103


 4429 002e 7047     		bx	lr
 4430              	.L231:
 4431              		.align	2
 4432              	.L230:
 4433 0030 00000000 		.word	USB_received
 4434              		.cfi_endproc
 4435              	.LFE85:
 4436              		.size	Clear_USB_RX_Buffer, .-Clear_USB_RX_Buffer
 4437              		.section	.text.Clear_Pending_USB_Data,"ax",%progbits
 4438              		.align	2
 4439              		.global	Clear_Pending_USB_Data
 4440              		.thumb
 4441              		.thumb_func
 4442              		.type	Clear_Pending_USB_Data, %function
 4443              	Clear_Pending_USB_Data:
 4444              	.LFB86:
1137:L6470.c       **** void Clear_Pending_USB_Data()/* Clear all pending data on usb RX buffer. */
1138:L6470.c       **** {
 4445              		.loc 1 1138 0
 4446              		.cfi_startproc
 4447              		@ args = 0, pretend = 0, frame = 72
 4448              		@ frame_needed = 1, uses_anonymous_args = 0
 4449 0000 80B5     		push	{r7, lr}
 4450              		.cfi_def_cfa_offset 8
 4451              		.cfi_offset 7, -8
 4452              		.cfi_offset 14, -4
 4453 0002 92B0     		sub	sp, sp, #72
 4454              		.cfi_def_cfa_offset 80
 4455 0004 00AF     		add	r7, sp, #0
 4456              		.cfi_def_cfa_register 7
1139:L6470.c       ****     int i;
1140:L6470.c       ****     uint8 USB_received_temp[64];
1141:L6470.c       ****     for(i=0;i<5;i++)
 4457              		.loc 1 1141 0
 4458 0006 0023     		movs	r3, #0
 4459 0008 7B64     		str	r3, [r7, #68]
 4460 000a 06E0     		b	.L233
 4461              	.L234:
1142:L6470.c       ****         {       
1143:L6470.c       ****             USB_GetAll(USB_received_temp);/* read and clear all Pending data. */
 4462              		.loc 1 1143 0 discriminator 3
 4463 000c 3B1D     		adds	r3, r7, #4
 4464 000e 1846     		mov	r0, r3
 4465 0010 FFF7FEFF 		bl	USB_GetAll
1141:L6470.c       ****         {       
 4466              		.loc 1 1141 0 discriminator 3
 4467 0014 7B6C     		ldr	r3, [r7, #68]
 4468 0016 0133     		adds	r3, r3, #1
 4469 0018 7B64     		str	r3, [r7, #68]
 4470              	.L233:
1141:L6470.c       ****         {       
 4471              		.loc 1 1141 0 is_stmt 0 discriminator 1
 4472 001a 7B6C     		ldr	r3, [r7, #68]
 4473 001c 042B     		cmp	r3, #4
 4474 001e F5DD     		ble	.L234
1144:L6470.c       ****         }    
1145:L6470.c       **** }
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 104


 4475              		.loc 1 1145 0 is_stmt 1
 4476 0020 00BF     		nop
 4477 0022 4837     		adds	r7, r7, #72
 4478              		.cfi_def_cfa_offset 8
 4479 0024 BD46     		mov	sp, r7
 4480              		.cfi_def_cfa_register 13
 4481              		@ sp needed
 4482 0026 80BD     		pop	{r7, pc}
 4483              		.cfi_endproc
 4484              	.LFE86:
 4485              		.size	Clear_Pending_USB_Data, .-Clear_Pending_USB_Data
 4486              		.section	.text.Write_Debug_UART_Char,"ax",%progbits
 4487              		.align	2
 4488              		.global	Write_Debug_UART_Char
 4489              		.thumb
 4490              		.thumb_func
 4491              		.type	Write_Debug_UART_Char, %function
 4492              	Write_Debug_UART_Char:
 4493              	.LFB87:
1146:L6470.c       **** void Write_Debug_UART_Char(char Str[])
1147:L6470.c       **** {
 4494              		.loc 1 1147 0
 4495              		.cfi_startproc
 4496              		@ args = 0, pretend = 0, frame = 8
 4497              		@ frame_needed = 1, uses_anonymous_args = 0
 4498 0000 80B5     		push	{r7, lr}
 4499              		.cfi_def_cfa_offset 8
 4500              		.cfi_offset 7, -8
 4501              		.cfi_offset 14, -4
 4502 0002 82B0     		sub	sp, sp, #8
 4503              		.cfi_def_cfa_offset 16
 4504 0004 00AF     		add	r7, sp, #0
 4505              		.cfi_def_cfa_register 7
 4506 0006 7860     		str	r0, [r7, #4]
1148:L6470.c       ****     if(Pin_UART_Enable_Read()==0)
 4507              		.loc 1 1148 0
 4508 0008 FFF7FEFF 		bl	Pin_UART_Enable_Read
 4509 000c 0346     		mov	r3, r0
 4510 000e 002B     		cmp	r3, #0
 4511 0010 12D1     		bne	.L237
 4512              	.LBB2:
1149:L6470.c       ****     {
1150:L6470.c       ****         static char Str_Last_One[] = "ShonitV2.2\r\n";
1151:L6470.c       ****         if((strncmp(Str_Last_One, Str, 10)!=0))
 4513              		.loc 1 1151 0
 4514 0012 0A22     		movs	r2, #10
 4515 0014 7968     		ldr	r1, [r7, #4]
 4516 0016 0A48     		ldr	r0, .L238
 4517 0018 FFF7FEFF 		bl	strncmp
 4518 001c 0346     		mov	r3, r0
 4519 001e 002B     		cmp	r3, #0
 4520 0020 0AD0     		beq	.L237
1152:L6470.c       ****     	{
1153:L6470.c       ****             UART_PCB_LOG_PutString(Str);
 4521              		.loc 1 1153 0
 4522 0022 7868     		ldr	r0, [r7, #4]
 4523 0024 FFF7FEFF 		bl	UART_PCB_LOG_PutString
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 105


1154:L6470.c       ****             CyDelayUs(1);
 4524              		.loc 1 1154 0
 4525 0028 0120     		movs	r0, #1
 4526 002a FFF7FEFF 		bl	CyDelayUs
1155:L6470.c       ****             strncpy(Str_Last_One, Str, 10); 
 4527              		.loc 1 1155 0
 4528 002e 0A22     		movs	r2, #10
 4529 0030 7968     		ldr	r1, [r7, #4]
 4530 0032 0348     		ldr	r0, .L238
 4531 0034 FFF7FEFF 		bl	strncpy
 4532              	.L237:
 4533              	.LBE2:
1156:L6470.c       ****     	}
1157:L6470.c       ****     }
1158:L6470.c       **** }
 4534              		.loc 1 1158 0
 4535 0038 00BF     		nop
 4536 003a 0837     		adds	r7, r7, #8
 4537              		.cfi_def_cfa_offset 8
 4538 003c BD46     		mov	sp, r7
 4539              		.cfi_def_cfa_register 13
 4540              		@ sp needed
 4541 003e 80BD     		pop	{r7, pc}
 4542              	.L239:
 4543              		.align	2
 4544              	.L238:
 4545 0040 1C000000 		.word	Str_Last_One.8912
 4546              		.cfi_endproc
 4547              	.LFE87:
 4548              		.size	Write_Debug_UART_Char, .-Write_Debug_UART_Char
 4549              		.section	.rodata
 4550 08a7 00       		.align	2
 4551              	.LC60:
 4552 08a8 25642C20 		.ascii	"%d, \000"
 4552      00
 4553              		.section	.text.Write_Debug_UART_Int,"ax",%progbits
 4554              		.align	2
 4555              		.global	Write_Debug_UART_Int
 4556              		.thumb
 4557              		.thumb_func
 4558              		.type	Write_Debug_UART_Int, %function
 4559              	Write_Debug_UART_Int:
 4560              	.LFB88:
1159:L6470.c       **** void Write_Debug_UART_Int(int32 num)
1160:L6470.c       **** {
 4561              		.loc 1 1160 0
 4562              		.cfi_startproc
 4563              		@ args = 0, pretend = 0, frame = 32
 4564              		@ frame_needed = 1, uses_anonymous_args = 0
 4565 0000 80B5     		push	{r7, lr}
 4566              		.cfi_def_cfa_offset 8
 4567              		.cfi_offset 7, -8
 4568              		.cfi_offset 14, -4
 4569 0002 88B0     		sub	sp, sp, #32
 4570              		.cfi_def_cfa_offset 40
 4571 0004 00AF     		add	r7, sp, #0
 4572              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 106


 4573 0006 7860     		str	r0, [r7, #4]
1161:L6470.c       ****     if(Pin_UART_Enable_Read()==0)
 4574              		.loc 1 1161 0
 4575 0008 FFF7FEFF 		bl	Pin_UART_Enable_Read
 4576 000c 0346     		mov	r3, r0
 4577 000e 002B     		cmp	r3, #0
 4578 0010 0ED1     		bne	.L242
 4579              	.LBB3:
1162:L6470.c       ****     {
1163:L6470.c       ****         char uart_Buffer[20];
1164:L6470.c       ****         sprintf(uart_Buffer,"%d, ",(int)num);
 4580              		.loc 1 1164 0
 4581 0012 07F10C03 		add	r3, r7, #12
 4582 0016 7A68     		ldr	r2, [r7, #4]
 4583 0018 0749     		ldr	r1, .L243
 4584 001a 1846     		mov	r0, r3
 4585 001c FFF7FEFF 		bl	sprintf
1165:L6470.c       ****         UART_PCB_LOG_PutString(uart_Buffer);
 4586              		.loc 1 1165 0
 4587 0020 07F10C03 		add	r3, r7, #12
 4588 0024 1846     		mov	r0, r3
 4589 0026 FFF7FEFF 		bl	UART_PCB_LOG_PutString
1166:L6470.c       ****         CyDelayUs(1);
 4590              		.loc 1 1166 0
 4591 002a 0120     		movs	r0, #1
 4592 002c FFF7FEFF 		bl	CyDelayUs
 4593              	.L242:
 4594              	.LBE3:
1167:L6470.c       ****     }
1168:L6470.c       **** }
 4595              		.loc 1 1168 0
 4596 0030 00BF     		nop
 4597 0032 2037     		adds	r7, r7, #32
 4598              		.cfi_def_cfa_offset 8
 4599 0034 BD46     		mov	sp, r7
 4600              		.cfi_def_cfa_register 13
 4601              		@ sp needed
 4602 0036 80BD     		pop	{r7, pc}
 4603              	.L244:
 4604              		.align	2
 4605              	.L243:
 4606 0038 A8080000 		.word	.LC60
 4607              		.cfi_endproc
 4608              	.LFE88:
 4609              		.size	Write_Debug_UART_Int, .-Write_Debug_UART_Int
 4610              		.section	.rodata
 4611 08ad 000000   		.align	2
 4612              	.LC61:
 4613 08b0 2D2D2D2D 		.ascii	"--------------------------------------------------\000"
 4613      2D2D2D2D 
 4613      2D2D2D2D 
 4613      2D2D2D2D 
 4613      2D2D2D2D 
 4614 08e3 00       		.align	2
 4615              	.LC62:
 4616 08e4 0A00     		.ascii	"\012\000"
 4617 08e6 0000     		.align	2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 107


 4618              	.LC63:
 4619 08e8 585F6C61 		.ascii	"X_last_position : \000"
 4619      73745F70 
 4619      6F736974 
 4619      696F6E20 
 4619      3A2000
 4620 08fb 00       		.align	2
 4621              	.LC64:
 4622 08fc 595F6C61 		.ascii	"Y_last_position : \000"
 4622      73745F70 
 4622      6F736974 
 4622      696F6E20 
 4622      3A2000
 4623 090f 00       		.align	2
 4624              	.LC65:
 4625 0910 5A5F6C61 		.ascii	"Z_last_position : \000"
 4625      73745F70 
 4625      6F736974 
 4625      696F6E20 
 4625      3A2000
 4626 0923 00       		.align	2
 4627              	.LC66:
 4628 0924 506F7369 		.ascii	"Position_X_Requested : \000"
 4628      74696F6E 
 4628      5F585F52 
 4628      65717565 
 4628      73746564 
 4629              		.align	2
 4630              	.LC67:
 4631 093c 506F7369 		.ascii	"Position_Y_Requested : \000"
 4631      74696F6E 
 4631      5F595F52 
 4631      65717565 
 4631      73746564 
 4632              		.align	2
 4633              	.LC68:
 4634 0954 506F7369 		.ascii	"Position_Z_Requested : \000"
 4634      74696F6E 
 4634      5F5A5F52 
 4634      65717565 
 4634      73746564 
 4635              		.align	2
 4636              	.LC69:
 4637 096c 506F7369 		.ascii	"Position_X_Move : \000"
 4637      74696F6E 
 4637      5F585F4D 
 4637      6F766520 
 4637      3A2000
 4638 097f 00       		.align	2
 4639              	.LC70:
 4640 0980 506F7369 		.ascii	"Position_Y_Move : \000"
 4640      74696F6E 
 4640      5F595F4D 
 4640      6F766520 
 4640      3A2000
 4641 0993 00       		.align	2
 4642              	.LC71:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 108


 4643 0994 506F7369 		.ascii	"Position_Z_Move : \000"
 4643      74696F6E 
 4643      5F5A5F4D 
 4643      6F766520 
 4643      3A2000
 4644 09a7 00       		.align	2
 4645              	.LC72:
 4646 09a8 585F5175 		.ascii	"X_QuadPosition : \000"
 4646      6164506F 
 4646      73697469 
 4646      6F6E203A 
 4646      2000
 4647 09ba 0000     		.align	2
 4648              	.LC73:
 4649 09bc 595F5175 		.ascii	"Y_QuadPosition : \000"
 4649      6164506F 
 4649      73697469 
 4649      6F6E203A 
 4649      2000
 4650 09ce 0000     		.align	2
 4651              	.LC74:
 4652 09d0 5A5F5175 		.ascii	"Z_QuadPosition : \000"
 4652      6164506F 
 4652      73697469 
 4652      6F6E203A 
 4652      2000
 4653 09e2 0000     		.align	2
 4654              	.LC75:
 4655 09e4 4E6F5F6F 		.ascii	"No_of_X_Cycle : \000"
 4655      665F585F 
 4655      4379636C 
 4655      65203A20 
 4655      00
 4656 09f5 000000   		.align	2
 4657              	.LC76:
 4658 09f8 4E6F5F6F 		.ascii	"No_of_Y_Cycle : \000"
 4658      665F595F 
 4658      4379636C 
 4658      65203A20 
 4658      00
 4659 0a09 000000   		.align	2
 4660              	.LC77:
 4661 0a0c 4E6F5F6F 		.ascii	"No_of_Z_Cycle : \000"
 4661      665F5A5F 
 4661      4379636C 
 4661      65203A20 
 4661      00
 4662 0a1d 000000   		.align	2
 4663              	.LC78:
 4664 0a20 50574D5F 		.ascii	"PWM_Comare_Value_White : \000"
 4664      436F6D61 
 4664      72655F56 
 4664      616C7565 
 4664      5F576869 
 4665 0a3a 0000     		.align	2
 4666              	.LC79:
 4667 0a3c 4D6F746F 		.ascii	"Motor_Speed_X : \000"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 109


 4667      725F5370 
 4667      6565645F 
 4667      58203A20 
 4667      00
 4668 0a4d 000000   		.align	2
 4669              	.LC80:
 4670 0a50 4D6F746F 		.ascii	"Motor_Speed_Y : \000"
 4670      725F5370 
 4670      6565645F 
 4670      59203A20 
 4670      00
 4671 0a61 000000   		.align	2
 4672              	.LC81:
 4673 0a64 4D6F746F 		.ascii	"Motor_Speed_Z : \000"
 4673      725F5370 
 4673      6565645F 
 4673      5A203A20 
 4673      00
 4674 0a75 000000   		.align	2
 4675              	.LC82:
 4676 0a78 73746570 		.ascii	"step_correction_loop_x : \000"
 4676      5F636F72 
 4676      72656374 
 4676      696F6E5F 
 4676      6C6F6F70 
 4677 0a92 0000     		.align	2
 4678              	.LC83:
 4679 0a94 73746570 		.ascii	"step_correction_loop_y : \000"
 4679      5F636F72 
 4679      72656374 
 4679      696F6E5F 
 4679      6C6F6F70 
 4680 0aae 0000     		.align	2
 4681              	.LC84:
 4682 0ab0 73746570 		.ascii	"step_correction_loop_z : \000"
 4682      5F636F72 
 4682      72656374 
 4682      696F6E5F 
 4682      6C6F6F70 
 4683 0aca 0000     		.align	2
 4684              	.LC85:
 4685 0acc 486F6D65 		.ascii	"HomeX_done = false : \000"
 4685      585F646F 
 4685      6E65203D 
 4685      2066616C 
 4685      7365203A 
 4686 0ae2 0000     		.align	2
 4687              	.LC86:
 4688 0ae4 486F6D65 		.ascii	"HomeY_done = false : \000"
 4688      595F646F 
 4688      6E65203D 
 4688      2066616C 
 4688      7365203A 
 4689 0afa 0000     		.align	2
 4690              	.LC87:
 4691 0afc 486F6D65 		.ascii	"HomeZ_done = false : \000"
 4691      5A5F646F 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 110


 4691      6E65203D 
 4691      2066616C 
 4691      7365203A 
 4692 0b12 0000     		.align	2
 4693              	.LC88:
 4694 0b14 456E636F 		.ascii	"EncoderXnYSelect : \000"
 4694      64657258 
 4694      6E595365 
 4694      6C656374 
 4694      203A2000 
 4695              		.align	2
 4696              	.LC89:
 4697 0b28 42756666 		.ascii	"Buffer_X_QuadPosition : \000"
 4697      65725F58 
 4697      5F517561 
 4697      64506F73 
 4697      6974696F 
 4698 0b41 000000   		.align	2
 4699              	.LC90:
 4700 0b44 42756666 		.ascii	"Buffer_Y_QuadPosition : \000"
 4700      65725F59 
 4700      5F517561 
 4700      64506F73 
 4700      6974696F 
 4701              		.section	.text.UART_print_all_values,"ax",%progbits
 4702              		.align	2
 4703              		.global	UART_print_all_values
 4704              		.thumb
 4705              		.thumb_func
 4706              		.type	UART_print_all_values, %function
 4707              	UART_print_all_values:
 4708              	.LFB89:
1169:L6470.c       **** void UART_print_all_values()
1170:L6470.c       **** {
 4709              		.loc 1 1170 0
 4710              		.cfi_startproc
 4711              		@ args = 0, pretend = 0, frame = 0
 4712              		@ frame_needed = 1, uses_anonymous_args = 0
 4713 0000 80B5     		push	{r7, lr}
 4714              		.cfi_def_cfa_offset 8
 4715              		.cfi_offset 7, -8
 4716              		.cfi_offset 14, -4
 4717 0002 00AF     		add	r7, sp, #0
 4718              		.cfi_def_cfa_register 7
1171:L6470.c       ****     Write_Debug_UART_Char("\r\n");
 4719              		.loc 1 1171 0
 4720 0004 A348     		ldr	r0, .L246
 4721 0006 FFF7FEFF 		bl	Write_Debug_UART_Char
1172:L6470.c       ****     Write_Debug_UART_Char("--------------------------------------------------");
 4722              		.loc 1 1172 0
 4723 000a A348     		ldr	r0, .L246+4
 4724 000c FFF7FEFF 		bl	Write_Debug_UART_Char
1173:L6470.c       ****     Write_Debug_UART_Char("\n");
 4725              		.loc 1 1173 0
 4726 0010 A248     		ldr	r0, .L246+8
 4727 0012 FFF7FEFF 		bl	Write_Debug_UART_Char
1174:L6470.c       ****     Write_Debug_UART_Char("X_last_position : ");
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 111


 4728              		.loc 1 1174 0
 4729 0016 A248     		ldr	r0, .L246+12
 4730 0018 FFF7FEFF 		bl	Write_Debug_UART_Char
1175:L6470.c       ****     Write_Debug_UART_Int(X_last_position);
 4731              		.loc 1 1175 0
 4732 001c A14B     		ldr	r3, .L246+16
 4733 001e 1B68     		ldr	r3, [r3]
 4734 0020 1846     		mov	r0, r3
 4735 0022 FFF7FEFF 		bl	Write_Debug_UART_Int
1176:L6470.c       ****     Write_Debug_UART_Char("\n");
 4736              		.loc 1 1176 0
 4737 0026 9D48     		ldr	r0, .L246+8
 4738 0028 FFF7FEFF 		bl	Write_Debug_UART_Char
1177:L6470.c       ****     Write_Debug_UART_Char("Y_last_position : ");
 4739              		.loc 1 1177 0
 4740 002c 9E48     		ldr	r0, .L246+20
 4741 002e FFF7FEFF 		bl	Write_Debug_UART_Char
1178:L6470.c       ****     Write_Debug_UART_Int(Y_last_position);
 4742              		.loc 1 1178 0
 4743 0032 9E4B     		ldr	r3, .L246+24
 4744 0034 1B68     		ldr	r3, [r3]
 4745 0036 1846     		mov	r0, r3
 4746 0038 FFF7FEFF 		bl	Write_Debug_UART_Int
1179:L6470.c       ****     Write_Debug_UART_Char("\n");
 4747              		.loc 1 1179 0
 4748 003c 9748     		ldr	r0, .L246+8
 4749 003e FFF7FEFF 		bl	Write_Debug_UART_Char
1180:L6470.c       ****     Write_Debug_UART_Char("Z_last_position : ");
 4750              		.loc 1 1180 0
 4751 0042 9B48     		ldr	r0, .L246+28
 4752 0044 FFF7FEFF 		bl	Write_Debug_UART_Char
1181:L6470.c       ****     Write_Debug_UART_Int(Z_last_position);
 4753              		.loc 1 1181 0
 4754 0048 9A4B     		ldr	r3, .L246+32
 4755 004a 1B68     		ldr	r3, [r3]
 4756 004c 1846     		mov	r0, r3
 4757 004e FFF7FEFF 		bl	Write_Debug_UART_Int
1182:L6470.c       ****     Write_Debug_UART_Char("\n");
 4758              		.loc 1 1182 0
 4759 0052 9248     		ldr	r0, .L246+8
 4760 0054 FFF7FEFF 		bl	Write_Debug_UART_Char
1183:L6470.c       ****     Write_Debug_UART_Char("Position_X_Requested : ");
 4761              		.loc 1 1183 0
 4762 0058 9748     		ldr	r0, .L246+36
 4763 005a FFF7FEFF 		bl	Write_Debug_UART_Char
1184:L6470.c       ****     Write_Debug_UART_Int(Position_X_Requested);
 4764              		.loc 1 1184 0
 4765 005e 974B     		ldr	r3, .L246+40
 4766 0060 1B68     		ldr	r3, [r3]
 4767 0062 1846     		mov	r0, r3
 4768 0064 FFF7FEFF 		bl	Write_Debug_UART_Int
1185:L6470.c       ****     Write_Debug_UART_Char("\n");
 4769              		.loc 1 1185 0
 4770 0068 8C48     		ldr	r0, .L246+8
 4771 006a FFF7FEFF 		bl	Write_Debug_UART_Char
1186:L6470.c       ****     Write_Debug_UART_Char("Position_Y_Requested : ");
 4772              		.loc 1 1186 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 112


 4773 006e 9448     		ldr	r0, .L246+44
 4774 0070 FFF7FEFF 		bl	Write_Debug_UART_Char
1187:L6470.c       ****     Write_Debug_UART_Int(Position_Y_Requested);
 4775              		.loc 1 1187 0
 4776 0074 934B     		ldr	r3, .L246+48
 4777 0076 1B68     		ldr	r3, [r3]
 4778 0078 1846     		mov	r0, r3
 4779 007a FFF7FEFF 		bl	Write_Debug_UART_Int
1188:L6470.c       ****     Write_Debug_UART_Char("\n");
 4780              		.loc 1 1188 0
 4781 007e 8748     		ldr	r0, .L246+8
 4782 0080 FFF7FEFF 		bl	Write_Debug_UART_Char
1189:L6470.c       ****     Write_Debug_UART_Char("Position_Z_Requested : ");
 4783              		.loc 1 1189 0
 4784 0084 9048     		ldr	r0, .L246+52
 4785 0086 FFF7FEFF 		bl	Write_Debug_UART_Char
1190:L6470.c       ****     Write_Debug_UART_Int(Position_Z_Requested);
 4786              		.loc 1 1190 0
 4787 008a 904B     		ldr	r3, .L246+56
 4788 008c 1B68     		ldr	r3, [r3]
 4789 008e 1846     		mov	r0, r3
 4790 0090 FFF7FEFF 		bl	Write_Debug_UART_Int
1191:L6470.c       ****     Write_Debug_UART_Char("\n");
 4791              		.loc 1 1191 0
 4792 0094 8148     		ldr	r0, .L246+8
 4793 0096 FFF7FEFF 		bl	Write_Debug_UART_Char
1192:L6470.c       ****     Write_Debug_UART_Char("Position_X_Move : ");
 4794              		.loc 1 1192 0
 4795 009a 8D48     		ldr	r0, .L246+60
 4796 009c FFF7FEFF 		bl	Write_Debug_UART_Char
1193:L6470.c       ****     Write_Debug_UART_Int(Position_X_Move);
 4797              		.loc 1 1193 0
 4798 00a0 8C4B     		ldr	r3, .L246+64
 4799 00a2 1B68     		ldr	r3, [r3]
 4800 00a4 1846     		mov	r0, r3
 4801 00a6 FFF7FEFF 		bl	Write_Debug_UART_Int
1194:L6470.c       ****     Write_Debug_UART_Char("\n");
 4802              		.loc 1 1194 0
 4803 00aa 7C48     		ldr	r0, .L246+8
 4804 00ac FFF7FEFF 		bl	Write_Debug_UART_Char
1195:L6470.c       ****     Write_Debug_UART_Char("Position_Y_Move : ");
 4805              		.loc 1 1195 0
 4806 00b0 8948     		ldr	r0, .L246+68
 4807 00b2 FFF7FEFF 		bl	Write_Debug_UART_Char
1196:L6470.c       ****     Write_Debug_UART_Int(Position_Y_Move);
 4808              		.loc 1 1196 0
 4809 00b6 894B     		ldr	r3, .L246+72
 4810 00b8 1B68     		ldr	r3, [r3]
 4811 00ba 1846     		mov	r0, r3
 4812 00bc FFF7FEFF 		bl	Write_Debug_UART_Int
1197:L6470.c       ****     Write_Debug_UART_Char("\n");
 4813              		.loc 1 1197 0
 4814 00c0 7648     		ldr	r0, .L246+8
 4815 00c2 FFF7FEFF 		bl	Write_Debug_UART_Char
1198:L6470.c       ****     Write_Debug_UART_Char("Position_Z_Move : ");
 4816              		.loc 1 1198 0
 4817 00c6 8648     		ldr	r0, .L246+76
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 113


 4818 00c8 FFF7FEFF 		bl	Write_Debug_UART_Char
1199:L6470.c       ****     Write_Debug_UART_Int(Position_Z_Move);
 4819              		.loc 1 1199 0
 4820 00cc 854B     		ldr	r3, .L246+80
 4821 00ce 1B68     		ldr	r3, [r3]
 4822 00d0 1846     		mov	r0, r3
 4823 00d2 FFF7FEFF 		bl	Write_Debug_UART_Int
1200:L6470.c       ****     Write_Debug_UART_Char("\n");
 4824              		.loc 1 1200 0
 4825 00d6 7148     		ldr	r0, .L246+8
 4826 00d8 FFF7FEFF 		bl	Write_Debug_UART_Char
1201:L6470.c       ****     Write_Debug_UART_Char("X_QuadPosition : ");
 4827              		.loc 1 1201 0
 4828 00dc 8248     		ldr	r0, .L246+84
 4829 00de FFF7FEFF 		bl	Write_Debug_UART_Char
1202:L6470.c       ****     Write_Debug_UART_Int(X_QuadPosition);
 4830              		.loc 1 1202 0
 4831 00e2 824B     		ldr	r3, .L246+88
 4832 00e4 1B68     		ldr	r3, [r3]
 4833 00e6 1846     		mov	r0, r3
 4834 00e8 FFF7FEFF 		bl	Write_Debug_UART_Int
1203:L6470.c       ****     Write_Debug_UART_Char("\n");
 4835              		.loc 1 1203 0
 4836 00ec 6B48     		ldr	r0, .L246+8
 4837 00ee FFF7FEFF 		bl	Write_Debug_UART_Char
1204:L6470.c       ****     Write_Debug_UART_Char("Y_QuadPosition : ");
 4838              		.loc 1 1204 0
 4839 00f2 7F48     		ldr	r0, .L246+92
 4840 00f4 FFF7FEFF 		bl	Write_Debug_UART_Char
1205:L6470.c       ****     Write_Debug_UART_Int(Y_QuadPosition);
 4841              		.loc 1 1205 0
 4842 00f8 7E4B     		ldr	r3, .L246+96
 4843 00fa 1B68     		ldr	r3, [r3]
 4844 00fc 1846     		mov	r0, r3
 4845 00fe FFF7FEFF 		bl	Write_Debug_UART_Int
1206:L6470.c       ****     Write_Debug_UART_Char("\n");
 4846              		.loc 1 1206 0
 4847 0102 6648     		ldr	r0, .L246+8
 4848 0104 FFF7FEFF 		bl	Write_Debug_UART_Char
1207:L6470.c       ****     Write_Debug_UART_Char("Z_QuadPosition : ");
 4849              		.loc 1 1207 0
 4850 0108 7B48     		ldr	r0, .L246+100
 4851 010a FFF7FEFF 		bl	Write_Debug_UART_Char
1208:L6470.c       ****     Write_Debug_UART_Int(Z_QuadPosition);
 4852              		.loc 1 1208 0
 4853 010e 7B4B     		ldr	r3, .L246+104
 4854 0110 1B68     		ldr	r3, [r3]
 4855 0112 1846     		mov	r0, r3
 4856 0114 FFF7FEFF 		bl	Write_Debug_UART_Int
1209:L6470.c       ****     Write_Debug_UART_Char("\n");
 4857              		.loc 1 1209 0
 4858 0118 6048     		ldr	r0, .L246+8
 4859 011a FFF7FEFF 		bl	Write_Debug_UART_Char
1210:L6470.c       ****     Write_Debug_UART_Char("No_of_X_Cycle : ");
 4860              		.loc 1 1210 0
 4861 011e 7848     		ldr	r0, .L246+108
 4862 0120 FFF7FEFF 		bl	Write_Debug_UART_Char
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 114


1211:L6470.c       ****     Write_Debug_UART_Int(No_of_X_Cycle);
 4863              		.loc 1 1211 0
 4864 0124 774B     		ldr	r3, .L246+112
 4865 0126 1B68     		ldr	r3, [r3]
 4866 0128 1846     		mov	r0, r3
 4867 012a FFF7FEFF 		bl	Write_Debug_UART_Int
1212:L6470.c       ****     Write_Debug_UART_Char("\n");
 4868              		.loc 1 1212 0
 4869 012e 5B48     		ldr	r0, .L246+8
 4870 0130 FFF7FEFF 		bl	Write_Debug_UART_Char
1213:L6470.c       ****     Write_Debug_UART_Char("No_of_Y_Cycle : ");
 4871              		.loc 1 1213 0
 4872 0134 7448     		ldr	r0, .L246+116
 4873 0136 FFF7FEFF 		bl	Write_Debug_UART_Char
1214:L6470.c       ****     Write_Debug_UART_Int(No_of_Y_Cycle);
 4874              		.loc 1 1214 0
 4875 013a 744B     		ldr	r3, .L246+120
 4876 013c 1B68     		ldr	r3, [r3]
 4877 013e 1846     		mov	r0, r3
 4878 0140 FFF7FEFF 		bl	Write_Debug_UART_Int
1215:L6470.c       ****     Write_Debug_UART_Char("\n");
 4879              		.loc 1 1215 0
 4880 0144 5548     		ldr	r0, .L246+8
 4881 0146 FFF7FEFF 		bl	Write_Debug_UART_Char
1216:L6470.c       ****     Write_Debug_UART_Char("No_of_Z_Cycle : ");
 4882              		.loc 1 1216 0
 4883 014a 7148     		ldr	r0, .L246+124
 4884 014c FFF7FEFF 		bl	Write_Debug_UART_Char
1217:L6470.c       ****     Write_Debug_UART_Int(No_of_Z_Cycle);
 4885              		.loc 1 1217 0
 4886 0150 704B     		ldr	r3, .L246+128
 4887 0152 1B68     		ldr	r3, [r3]
 4888 0154 1846     		mov	r0, r3
 4889 0156 FFF7FEFF 		bl	Write_Debug_UART_Int
1218:L6470.c       ****     Write_Debug_UART_Char("\n");
 4890              		.loc 1 1218 0
 4891 015a 5048     		ldr	r0, .L246+8
 4892 015c FFF7FEFF 		bl	Write_Debug_UART_Char
1219:L6470.c       ****     Write_Debug_UART_Char("PWM_Comare_Value_White : ");
 4893              		.loc 1 1219 0
 4894 0160 6D48     		ldr	r0, .L246+132
 4895 0162 FFF7FEFF 		bl	Write_Debug_UART_Char
1220:L6470.c       ****     Write_Debug_UART_Int(PWM_comare_value);
 4896              		.loc 1 1220 0
 4897 0166 6D4B     		ldr	r3, .L246+136
 4898 0168 1B68     		ldr	r3, [r3]
 4899 016a 1846     		mov	r0, r3
 4900 016c FFF7FEFF 		bl	Write_Debug_UART_Int
1221:L6470.c       ****     Write_Debug_UART_Char("\n");
 4901              		.loc 1 1221 0
 4902 0170 4A48     		ldr	r0, .L246+8
 4903 0172 FFF7FEFF 		bl	Write_Debug_UART_Char
1222:L6470.c       ****     Write_Debug_UART_Char("Motor_Speed_X : ");
 4904              		.loc 1 1222 0
 4905 0176 6A48     		ldr	r0, .L246+140
 4906 0178 FFF7FEFF 		bl	Write_Debug_UART_Char
1223:L6470.c       ****     Write_Debug_UART_Int(Motor_Speed_X);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 115


 4907              		.loc 1 1223 0
 4908 017c 694B     		ldr	r3, .L246+144
 4909 017e 1B68     		ldr	r3, [r3]
 4910 0180 1846     		mov	r0, r3
 4911 0182 FFF7FEFF 		bl	Write_Debug_UART_Int
1224:L6470.c       ****     Write_Debug_UART_Char("\n");
 4912              		.loc 1 1224 0
 4913 0186 4548     		ldr	r0, .L246+8
 4914 0188 FFF7FEFF 		bl	Write_Debug_UART_Char
1225:L6470.c       ****     Write_Debug_UART_Char("Motor_Speed_Y : ");
 4915              		.loc 1 1225 0
 4916 018c 6648     		ldr	r0, .L246+148
 4917 018e FFF7FEFF 		bl	Write_Debug_UART_Char
1226:L6470.c       ****     Write_Debug_UART_Int(Motor_Speed_Y);
 4918              		.loc 1 1226 0
 4919 0192 664B     		ldr	r3, .L246+152
 4920 0194 1B68     		ldr	r3, [r3]
 4921 0196 1846     		mov	r0, r3
 4922 0198 FFF7FEFF 		bl	Write_Debug_UART_Int
1227:L6470.c       ****     Write_Debug_UART_Char("\n");
 4923              		.loc 1 1227 0
 4924 019c 3F48     		ldr	r0, .L246+8
 4925 019e FFF7FEFF 		bl	Write_Debug_UART_Char
1228:L6470.c       ****     Write_Debug_UART_Char("Motor_Speed_Z : ");
 4926              		.loc 1 1228 0
 4927 01a2 6348     		ldr	r0, .L246+156
 4928 01a4 FFF7FEFF 		bl	Write_Debug_UART_Char
1229:L6470.c       ****     Write_Debug_UART_Int(Motor_Speed_Z);
 4929              		.loc 1 1229 0
 4930 01a8 624B     		ldr	r3, .L246+160
 4931 01aa 1B68     		ldr	r3, [r3]
 4932 01ac 1846     		mov	r0, r3
 4933 01ae FFF7FEFF 		bl	Write_Debug_UART_Int
1230:L6470.c       ****     Write_Debug_UART_Char("\n");
 4934              		.loc 1 1230 0
 4935 01b2 3A48     		ldr	r0, .L246+8
 4936 01b4 FFF7FEFF 		bl	Write_Debug_UART_Char
1231:L6470.c       ****     Write_Debug_UART_Char("step_correction_loop_x : ");
 4937              		.loc 1 1231 0
 4938 01b8 5F48     		ldr	r0, .L246+164
 4939 01ba FFF7FEFF 		bl	Write_Debug_UART_Char
1232:L6470.c       ****     Write_Debug_UART_Int(step_correction_loop_x);
 4940              		.loc 1 1232 0
 4941 01be 5F4B     		ldr	r3, .L246+168
 4942 01c0 1B68     		ldr	r3, [r3]
 4943 01c2 1846     		mov	r0, r3
 4944 01c4 FFF7FEFF 		bl	Write_Debug_UART_Int
1233:L6470.c       ****     Write_Debug_UART_Char("\n");
 4945              		.loc 1 1233 0
 4946 01c8 3448     		ldr	r0, .L246+8
 4947 01ca FFF7FEFF 		bl	Write_Debug_UART_Char
1234:L6470.c       ****     Write_Debug_UART_Char("step_correction_loop_y : ");
 4948              		.loc 1 1234 0
 4949 01ce 5C48     		ldr	r0, .L246+172
 4950 01d0 FFF7FEFF 		bl	Write_Debug_UART_Char
1235:L6470.c       ****     Write_Debug_UART_Int(step_correction_loop_y);
 4951              		.loc 1 1235 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 116


 4952 01d4 5B4B     		ldr	r3, .L246+176
 4953 01d6 1B68     		ldr	r3, [r3]
 4954 01d8 1846     		mov	r0, r3
 4955 01da FFF7FEFF 		bl	Write_Debug_UART_Int
1236:L6470.c       ****     Write_Debug_UART_Char("\n");
 4956              		.loc 1 1236 0
 4957 01de 2F48     		ldr	r0, .L246+8
 4958 01e0 FFF7FEFF 		bl	Write_Debug_UART_Char
1237:L6470.c       ****     Write_Debug_UART_Char("step_correction_loop_z : ");
 4959              		.loc 1 1237 0
 4960 01e4 5848     		ldr	r0, .L246+180
 4961 01e6 FFF7FEFF 		bl	Write_Debug_UART_Char
1238:L6470.c       ****     Write_Debug_UART_Int(step_correction_loop_z);
 4962              		.loc 1 1238 0
 4963 01ea 584B     		ldr	r3, .L246+184
 4964 01ec 1B68     		ldr	r3, [r3]
 4965 01ee 1846     		mov	r0, r3
 4966 01f0 FFF7FEFF 		bl	Write_Debug_UART_Int
1239:L6470.c       ****     Write_Debug_UART_Char("\n");
 4967              		.loc 1 1239 0
 4968 01f4 2948     		ldr	r0, .L246+8
 4969 01f6 FFF7FEFF 		bl	Write_Debug_UART_Char
1240:L6470.c       ****     Write_Debug_UART_Char("HomeX_done = false : ");
 4970              		.loc 1 1240 0
 4971 01fa 5548     		ldr	r0, .L246+188
 4972 01fc FFF7FEFF 		bl	Write_Debug_UART_Char
1241:L6470.c       ****     Write_Debug_UART_Int(HomeX_done);
 4973              		.loc 1 1241 0
 4974 0200 544B     		ldr	r3, .L246+192
 4975 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4976 0204 1846     		mov	r0, r3
 4977 0206 FFF7FEFF 		bl	Write_Debug_UART_Int
1242:L6470.c       ****     Write_Debug_UART_Char("\n");
 4978              		.loc 1 1242 0
 4979 020a 2448     		ldr	r0, .L246+8
 4980 020c FFF7FEFF 		bl	Write_Debug_UART_Char
1243:L6470.c       ****     Write_Debug_UART_Char("HomeY_done = false : ");
 4981              		.loc 1 1243 0
 4982 0210 5148     		ldr	r0, .L246+196
 4983 0212 FFF7FEFF 		bl	Write_Debug_UART_Char
1244:L6470.c       ****     Write_Debug_UART_Int(HomeY_done);
 4984              		.loc 1 1244 0
 4985 0216 514B     		ldr	r3, .L246+200
 4986 0218 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4987 021a 1846     		mov	r0, r3
 4988 021c FFF7FEFF 		bl	Write_Debug_UART_Int
1245:L6470.c       ****     Write_Debug_UART_Char("\n");
 4989              		.loc 1 1245 0
 4990 0220 1E48     		ldr	r0, .L246+8
 4991 0222 FFF7FEFF 		bl	Write_Debug_UART_Char
1246:L6470.c       ****     Write_Debug_UART_Char("HomeZ_done = false : ");
 4992              		.loc 1 1246 0
 4993 0226 4E48     		ldr	r0, .L246+204
 4994 0228 FFF7FEFF 		bl	Write_Debug_UART_Char
1247:L6470.c       ****     Write_Debug_UART_Int(HomeZ_done);
 4995              		.loc 1 1247 0
 4996 022c 4D4B     		ldr	r3, .L246+208
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 117


 4997 022e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4998 0230 1846     		mov	r0, r3
 4999 0232 FFF7FEFF 		bl	Write_Debug_UART_Int
1248:L6470.c       ****     Write_Debug_UART_Char("\n");
 5000              		.loc 1 1248 0
 5001 0236 1948     		ldr	r0, .L246+8
 5002 0238 FFF7FEFF 		bl	Write_Debug_UART_Char
1249:L6470.c       ****     Write_Debug_UART_Char("EncoderXnYSelect : ");
 5003              		.loc 1 1249 0
 5004 023c 4A48     		ldr	r0, .L246+212
 5005 023e FFF7FEFF 		bl	Write_Debug_UART_Char
1250:L6470.c       ****     Write_Debug_UART_Int(EncoderXnYSelect);
 5006              		.loc 1 1250 0
 5007 0242 4A4B     		ldr	r3, .L246+216
 5008 0244 1B68     		ldr	r3, [r3]
 5009 0246 1846     		mov	r0, r3
 5010 0248 FFF7FEFF 		bl	Write_Debug_UART_Int
1251:L6470.c       ****     Write_Debug_UART_Char("\n");
 5011              		.loc 1 1251 0
 5012 024c 1348     		ldr	r0, .L246+8
 5013 024e FFF7FEFF 		bl	Write_Debug_UART_Char
1252:L6470.c       ****     Write_Debug_UART_Char("Buffer_X_QuadPosition : ");
 5014              		.loc 1 1252 0
 5015 0252 4748     		ldr	r0, .L246+220
 5016 0254 FFF7FEFF 		bl	Write_Debug_UART_Char
1253:L6470.c       ****     Write_Debug_UART_Int(Buffer_X_QuadPosition);
 5017              		.loc 1 1253 0
 5018 0258 464B     		ldr	r3, .L246+224
 5019 025a 1B68     		ldr	r3, [r3]
 5020 025c 1846     		mov	r0, r3
 5021 025e FFF7FEFF 		bl	Write_Debug_UART_Int
1254:L6470.c       ****     Write_Debug_UART_Char("\n");
 5022              		.loc 1 1254 0
 5023 0262 0E48     		ldr	r0, .L246+8
 5024 0264 FFF7FEFF 		bl	Write_Debug_UART_Char
1255:L6470.c       ****     Write_Debug_UART_Char("Buffer_Y_QuadPosition : ");
 5025              		.loc 1 1255 0
 5026 0268 4348     		ldr	r0, .L246+228
 5027 026a FFF7FEFF 		bl	Write_Debug_UART_Char
1256:L6470.c       ****     Write_Debug_UART_Int(Buffer_Y_QuadPosition);
 5028              		.loc 1 1256 0
 5029 026e 434B     		ldr	r3, .L246+232
 5030 0270 1B68     		ldr	r3, [r3]
 5031 0272 1846     		mov	r0, r3
 5032 0274 FFF7FEFF 		bl	Write_Debug_UART_Int
1257:L6470.c       ****     Write_Debug_UART_Char("\n");
 5033              		.loc 1 1257 0
 5034 0278 0848     		ldr	r0, .L246+8
 5035 027a FFF7FEFF 		bl	Write_Debug_UART_Char
1258:L6470.c       ****     Write_Debug_UART_Char("--------------------------------------------------");
 5036              		.loc 1 1258 0
 5037 027e 0648     		ldr	r0, .L246+4
 5038 0280 FFF7FEFF 		bl	Write_Debug_UART_Char
1259:L6470.c       ****     Write_Debug_UART_Char("\r\n");
 5039              		.loc 1 1259 0
 5040 0284 0348     		ldr	r0, .L246
 5041 0286 FFF7FEFF 		bl	Write_Debug_UART_Char
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 118


1260:L6470.c       ****     Write_Debug_UART_Char("\r\n");
 5042              		.loc 1 1260 0
 5043 028a 0248     		ldr	r0, .L246
 5044 028c FFF7FEFF 		bl	Write_Debug_UART_Char
1261:L6470.c       **** }
 5045              		.loc 1 1261 0
 5046 0290 00BF     		nop
 5047 0292 80BD     		pop	{r7, pc}
 5048              	.L247:
 5049              		.align	2
 5050              	.L246:
 5051 0294 84030000 		.word	.LC26
 5052 0298 B0080000 		.word	.LC61
 5053 029c E4080000 		.word	.LC62
 5054 02a0 E8080000 		.word	.LC63
 5055 02a4 00000000 		.word	X_last_position
 5056 02a8 FC080000 		.word	.LC64
 5057 02ac 00000000 		.word	Y_last_position
 5058 02b0 10090000 		.word	.LC65
 5059 02b4 00000000 		.word	Z_last_position
 5060 02b8 24090000 		.word	.LC66
 5061 02bc 00000000 		.word	Position_X_Requested
 5062 02c0 3C090000 		.word	.LC67
 5063 02c4 00000000 		.word	Position_Y_Requested
 5064 02c8 54090000 		.word	.LC68
 5065 02cc 00000000 		.word	Position_Z_Requested
 5066 02d0 6C090000 		.word	.LC69
 5067 02d4 00000000 		.word	Position_X_Move
 5068 02d8 80090000 		.word	.LC70
 5069 02dc 00000000 		.word	Position_Y_Move
 5070 02e0 94090000 		.word	.LC71
 5071 02e4 00000000 		.word	Position_Z_Move
 5072 02e8 A8090000 		.word	.LC72
 5073 02ec 00000000 		.word	X_QuadPosition
 5074 02f0 BC090000 		.word	.LC73
 5075 02f4 00000000 		.word	Y_QuadPosition
 5076 02f8 D0090000 		.word	.LC74
 5077 02fc 00000000 		.word	Z_QuadPosition
 5078 0300 E4090000 		.word	.LC75
 5079 0304 00000000 		.word	No_of_X_Cycle
 5080 0308 F8090000 		.word	.LC76
 5081 030c 00000000 		.word	No_of_Y_Cycle
 5082 0310 0C0A0000 		.word	.LC77
 5083 0314 00000000 		.word	No_of_Z_Cycle
 5084 0318 200A0000 		.word	.LC78
 5085 031c 00000000 		.word	PWM_comare_value
 5086 0320 3C0A0000 		.word	.LC79
 5087 0324 00000000 		.word	Motor_Speed_X
 5088 0328 500A0000 		.word	.LC80
 5089 032c 00000000 		.word	Motor_Speed_Y
 5090 0330 640A0000 		.word	.LC81
 5091 0334 00000000 		.word	Motor_Speed_Z
 5092 0338 780A0000 		.word	.LC82
 5093 033c 00000000 		.word	step_correction_loop_x
 5094 0340 940A0000 		.word	.LC83
 5095 0344 00000000 		.word	step_correction_loop_y
 5096 0348 B00A0000 		.word	.LC84
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 119


 5097 034c 00000000 		.word	step_correction_loop_z
 5098 0350 CC0A0000 		.word	.LC85
 5099 0354 00000000 		.word	HomeX_done
 5100 0358 E40A0000 		.word	.LC86
 5101 035c 00000000 		.word	HomeY_done
 5102 0360 FC0A0000 		.word	.LC87
 5103 0364 00000000 		.word	HomeZ_done
 5104 0368 140B0000 		.word	.LC88
 5105 036c 00000000 		.word	EncoderXnYSelect
 5106 0370 280B0000 		.word	.LC89
 5107 0374 00000000 		.word	Buffer_X_QuadPosition
 5108 0378 440B0000 		.word	.LC90
 5109 037c 00000000 		.word	Buffer_Y_QuadPosition
 5110              		.cfi_endproc
 5111              	.LFE89:
 5112              		.size	UART_print_all_values, .-UART_print_all_values
 5113              		.section	.text.Reset_All_L6470_Motor,"ax",%progbits
 5114              		.align	2
 5115              		.global	Reset_All_L6470_Motor
 5116              		.thumb
 5117              		.thumb_func
 5118              		.type	Reset_All_L6470_Motor, %function
 5119              	Reset_All_L6470_Motor:
 5120              	.LFB90:
1262:L6470.c       **** //USB Functions Stop-------------------------------------------------------
1263:L6470.c       **** 
1264:L6470.c       **** //L6470 Motor Driver Functions Start-------------------------------------------------------
1265:L6470.c       **** void Reset_All_L6470_Motor()/* Reset all 3 motor one by one. */
1266:L6470.c       **** {
 5121              		.loc 1 1266 0
 5122              		.cfi_startproc
 5123              		@ args = 0, pretend = 0, frame = 0
 5124              		@ frame_needed = 1, uses_anonymous_args = 0
 5125 0000 80B5     		push	{r7, lr}
 5126              		.cfi_def_cfa_offset 8
 5127              		.cfi_offset 7, -8
 5128              		.cfi_offset 14, -4
 5129 0002 00AF     		add	r7, sp, #0
 5130              		.cfi_def_cfa_register 7
1267:L6470.c       ****   Pin_ResetMotorX_Write(1);     /* Make Reset Pin High for motor X. */
 5131              		.loc 1 1267 0
 5132 0004 0120     		movs	r0, #1
 5133 0006 FFF7FEFF 		bl	Pin_ResetMotorX_Write
1268:L6470.c       ****   Pin_ResetMotorY_Write(1);     /* Make Reset Pin High for motor Y. */
 5134              		.loc 1 1268 0
 5135 000a 0120     		movs	r0, #1
 5136 000c FFF7FEFF 		bl	Pin_ResetMotorY_Write
1269:L6470.c       ****   Pin_ResetMotorZ_Write(1);     /* Make Reset Pin High for motor Z. */
 5137              		.loc 1 1269 0
 5138 0010 0120     		movs	r0, #1
 5139 0012 FFF7FEFF 		bl	Pin_ResetMotorZ_Write
1270:L6470.c       ****   CyDelay(1);
 5140              		.loc 1 1270 0
 5141 0016 0120     		movs	r0, #1
 5142 0018 FFF7FEFF 		bl	CyDelay
1271:L6470.c       ****   Pin_ResetMotorX_Write(0);
 5143              		.loc 1 1271 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 120


 5144 001c 0020     		movs	r0, #0
 5145 001e FFF7FEFF 		bl	Pin_ResetMotorX_Write
1272:L6470.c       ****   Pin_ResetMotorY_Write(0);
 5146              		.loc 1 1272 0
 5147 0022 0020     		movs	r0, #0
 5148 0024 FFF7FEFF 		bl	Pin_ResetMotorY_Write
1273:L6470.c       ****   Pin_ResetMotorZ_Write(0);
 5149              		.loc 1 1273 0
 5150 0028 0020     		movs	r0, #0
 5151 002a FFF7FEFF 		bl	Pin_ResetMotorZ_Write
1274:L6470.c       ****   CyDelay(1);
 5152              		.loc 1 1274 0
 5153 002e 0120     		movs	r0, #1
 5154 0030 FFF7FEFF 		bl	CyDelay
1275:L6470.c       ****   Pin_ResetMotorX_Write(1);
 5155              		.loc 1 1275 0
 5156 0034 0120     		movs	r0, #1
 5157 0036 FFF7FEFF 		bl	Pin_ResetMotorX_Write
1276:L6470.c       ****   Pin_ResetMotorY_Write(1);
 5158              		.loc 1 1276 0
 5159 003a 0120     		movs	r0, #1
 5160 003c FFF7FEFF 		bl	Pin_ResetMotorY_Write
1277:L6470.c       ****   Pin_ResetMotorZ_Write(1);
 5161              		.loc 1 1277 0
 5162 0040 0120     		movs	r0, #1
 5163 0042 FFF7FEFF 		bl	Pin_ResetMotorZ_Write
1278:L6470.c       ****   CyDelay(1);
 5164              		.loc 1 1278 0
 5165 0046 0120     		movs	r0, #1
 5166 0048 FFF7FEFF 		bl	CyDelay
1279:L6470.c       **** }
 5167              		.loc 1 1279 0
 5168 004c 00BF     		nop
 5169 004e 80BD     		pop	{r7, pc}
 5170              		.cfi_endproc
 5171              	.LFE90:
 5172              		.size	Reset_All_L6470_Motor, .-Reset_All_L6470_Motor
 5173              		.section	.text.Configure_All_XYZ_L6470_Motor,"ax",%progbits
 5174              		.align	2
 5175              		.global	Configure_All_XYZ_L6470_Motor
 5176              		.thumb
 5177              		.thumb_func
 5178              		.type	Configure_All_XYZ_L6470_Motor, %function
 5179              	Configure_All_XYZ_L6470_Motor:
 5180              	.LFB91:
1280:L6470.c       **** void Configure_All_XYZ_L6470_Motor()/* Configure all 3 motor one by one. */
1281:L6470.c       **** {
 5181              		.loc 1 1281 0
 5182              		.cfi_startproc
 5183              		@ args = 0, pretend = 0, frame = 0
 5184              		@ frame_needed = 1, uses_anonymous_args = 0
 5185 0000 80B5     		push	{r7, lr}
 5186              		.cfi_def_cfa_offset 8
 5187              		.cfi_offset 7, -8
 5188              		.cfi_offset 14, -4
 5189 0002 00AF     		add	r7, sp, #0
 5190              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 121


1282:L6470.c       ****     SPI_SS_Control_Reg_Write(00);/* Select SPI for motor X. */
 5191              		.loc 1 1282 0
 5192 0004 0020     		movs	r0, #0
 5193 0006 FFF7FEFF 		bl	SPI_SS_Control_Reg_Write
1283:L6470.c       ****     CyDelay(1);
 5194              		.loc 1 1283 0
 5195 000a 0120     		movs	r0, #1
 5196 000c FFF7FEFF 		bl	CyDelay
1284:L6470.c       ****     Configure_L6470_For_X_Motor();/* Configure motor X. */
 5197              		.loc 1 1284 0
 5198 0010 FFF7FEFF 		bl	Configure_L6470_For_X_Motor
1285:L6470.c       ****     CyDelay(1);
 5199              		.loc 1 1285 0
 5200 0014 0120     		movs	r0, #1
 5201 0016 FFF7FEFF 		bl	CyDelay
1286:L6470.c       ****     SPI_SS_Control_Reg_Write(01);/* Select SPI for motor Y. */
 5202              		.loc 1 1286 0
 5203 001a 0120     		movs	r0, #1
 5204 001c FFF7FEFF 		bl	SPI_SS_Control_Reg_Write
1287:L6470.c       ****     CyDelay(1);
 5205              		.loc 1 1287 0
 5206 0020 0120     		movs	r0, #1
 5207 0022 FFF7FEFF 		bl	CyDelay
1288:L6470.c       ****     Configure_L6470_For_Y_Motor();/* Configure motor y. */
 5208              		.loc 1 1288 0
 5209 0026 FFF7FEFF 		bl	Configure_L6470_For_Y_Motor
1289:L6470.c       ****     CyDelay(1);
 5210              		.loc 1 1289 0
 5211 002a 0120     		movs	r0, #1
 5212 002c FFF7FEFF 		bl	CyDelay
1290:L6470.c       ****     SPI_SS_Control_Reg_Write(10);/* Select SPI for motor Z. */
 5213              		.loc 1 1290 0
 5214 0030 0A20     		movs	r0, #10
 5215 0032 FFF7FEFF 		bl	SPI_SS_Control_Reg_Write
1291:L6470.c       ****     CyDelay(1);
 5216              		.loc 1 1291 0
 5217 0036 0120     		movs	r0, #1
 5218 0038 FFF7FEFF 		bl	CyDelay
1292:L6470.c       ****     Configure_L6470_For_Z_Motor();/* Configure motor Z. */
 5219              		.loc 1 1292 0
 5220 003c FFF7FEFF 		bl	Configure_L6470_For_Z_Motor
1293:L6470.c       ****     CyDelay(1);
 5221              		.loc 1 1293 0
 5222 0040 0120     		movs	r0, #1
 5223 0042 FFF7FEFF 		bl	CyDelay
1294:L6470.c       **** }
 5224              		.loc 1 1294 0
 5225 0046 00BF     		nop
 5226 0048 80BD     		pop	{r7, pc}
 5227              		.cfi_endproc
 5228              	.LFE91:
 5229              		.size	Configure_All_XYZ_L6470_Motor, .-Configure_All_XYZ_L6470_Motor
 5230              		.global	__aeabi_ui2f
 5231 004a 00BF     		.section	.text.Configure_L6470_For_X_Motor,"ax",%progbits
 5232              		.align	2
 5233              		.global	Configure_L6470_For_X_Motor
 5234              		.thumb
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 122


 5235              		.thumb_func
 5236              		.type	Configure_L6470_For_X_Motor, %function
 5237              	Configure_L6470_For_X_Motor:
 5238              	.LFB92:
1295:L6470.c       **** void Configure_L6470_For_X_Motor()/* Configure motor X. */
1296:L6470.c       **** { 
 5239              		.loc 1 1296 0
 5240              		.cfi_startproc
 5241              		@ args = 0, pretend = 0, frame = 0
 5242              		@ frame_needed = 1, uses_anonymous_args = 0
 5243 0000 80B5     		push	{r7, lr}
 5244              		.cfi_def_cfa_offset 8
 5245              		.cfi_offset 7, -8
 5246              		.cfi_offset 14, -4
 5247 0002 00AF     		add	r7, sp, #0
 5248              		.cfi_def_cfa_register 7
1297:L6470.c       ****     SPI_SS_Control_Reg_Write(0);//Select SPI for motor Xzzz
 5249              		.loc 1 1297 0
 5250 0004 0020     		movs	r0, #0
 5251 0006 FFF7FEFF 		bl	SPI_SS_Control_Reg_Write
1298:L6470.c       ****     SetParam(x_STEP_MODE, !x_SYNC_EN | x_STEP_SEL_1_128 | x_SYNC_SEL_1);
 5252              		.loc 1 1298 0
 5253 000a 1721     		movs	r1, #23
 5254 000c 1620     		movs	r0, #22
 5255 000e FFF7FEFF 		bl	SetParam
1299:L6470.c       ****     SetParam(x_MAX_SPEED, MaxSpdCalc(Motor_Speed_X));
 5256              		.loc 1 1299 0
 5257 0012 344B     		ldr	r3, .L252
 5258 0014 1B68     		ldr	r3, [r3]
 5259 0016 1846     		mov	r0, r3
 5260 0018 FFF7FEFF 		bl	__aeabi_ui2f
 5261 001c 0346     		mov	r3, r0
 5262 001e 1846     		mov	r0, r3
 5263 0020 FFF7FEFF 		bl	MaxSpdCalc
 5264 0024 0346     		mov	r3, r0
 5265 0026 1946     		mov	r1, r3
 5266 0028 0720     		movs	r0, #7
 5267 002a FFF7FEFF 		bl	SetParam
1300:L6470.c       ****     SetParam(x_FS_SPD, FSCalc(1000));
 5268              		.loc 1 1300 0
 5269 002e 2E48     		ldr	r0, .L252+4
 5270 0030 FFF7FEFF 		bl	FSCalc
 5271 0034 0346     		mov	r3, r0
 5272 0036 1946     		mov	r1, r3
 5273 0038 1520     		movs	r0, #21
 5274 003a FFF7FEFF 		bl	SetParam
1301:L6470.c       ****     SetParam(x_ACC, 0x7ff);
 5275              		.loc 1 1301 0
 5276 003e 40F2FF71 		movw	r1, #2047
 5277 0042 0520     		movs	r0, #5
 5278 0044 FFF7FEFF 		bl	SetParam
1302:L6470.c       ****     SetParam(x_DEC, 0x7ff);
 5279              		.loc 1 1302 0
 5280 0048 40F2FF71 		movw	r1, #2047
 5281 004c 0620     		movs	r0, #6
 5282 004e FFF7FEFF 		bl	SetParam
1303:L6470.c       ****     SetParam(x_OCD_TH, x_OCD_TH_6000mA);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 123


 5283              		.loc 1 1303 0
 5284 0052 0F21     		movs	r1, #15
 5285 0054 1320     		movs	r0, #19
 5286 0056 FFF7FEFF 		bl	SetParam
1304:L6470.c       ****     SetParam(x_CONFIG,  x_CONFIG_PWM_DIV_1 |
 5287              		.loc 1 1304 0
 5288 005a 4FF4E051 		mov	r1, #7168
 5289 005e 1820     		movs	r0, #24
 5290 0060 FFF7FEFF 		bl	SetParam
1305:L6470.c       ****            x_CONFIG_PWM_MUL_2 |
1306:L6470.c       ****            x_CONFIG_SR_180V_us |
1307:L6470.c       ****            x_CONFIG_VS_COMP_DISABLE |
1308:L6470.c       ****            x_CONFIG_VS_COMP_DISABLE |
1309:L6470.c       ****            x_CONFIG_SW_HARD_STOP |
1310:L6470.c       ****            x_CONFIG_INT_16MHZ);
1311:L6470.c       ****     SetParam(x_KVAL_HOLD, 0x3C);
 5291              		.loc 1 1311 0
 5292 0064 3C21     		movs	r1, #60
 5293 0066 0920     		movs	r0, #9
 5294 0068 FFF7FEFF 		bl	SetParam
1312:L6470.c       ****     SetParam(x_KVAL_RUN, 0x7f);
 5295              		.loc 1 1312 0
 5296 006c 7F21     		movs	r1, #127
 5297 006e 0A20     		movs	r0, #10
 5298 0070 FFF7FEFF 		bl	SetParam
1313:L6470.c       ****     SetParam(x_KVAL_ACC, 0x7f);
 5299              		.loc 1 1313 0
 5300 0074 7F21     		movs	r1, #127
 5301 0076 0B20     		movs	r0, #11
 5302 0078 FFF7FEFF 		bl	SetParam
1314:L6470.c       ****     SetParam(x_KVAL_DEC, 0x7f);
 5303              		.loc 1 1314 0
 5304 007c 7F21     		movs	r1, #127
 5305 007e 0C20     		movs	r0, #12
 5306 0080 FFF7FEFF 		bl	SetParam
1315:L6470.c       ****     SetParam(x_ST_SLP, 0x05);
 5307              		.loc 1 1315 0
 5308 0084 0521     		movs	r1, #5
 5309 0086 0E20     		movs	r0, #14
 5310 0088 FFF7FEFF 		bl	SetParam
1316:L6470.c       ****     SetParam(x_INT_SPD, 0x146b);
 5311              		.loc 1 1316 0
 5312 008c 41F26B41 		movw	r1, #5227
 5313 0090 0D20     		movs	r0, #13
 5314 0092 FFF7FEFF 		bl	SetParam
1317:L6470.c       ****     SetParam(x_FN_SLP_ACC, 0xd3);
 5315              		.loc 1 1317 0
 5316 0096 D321     		movs	r1, #211
 5317 0098 0F20     		movs	r0, #15
 5318 009a FFF7FEFF 		bl	SetParam
1318:L6470.c       ****     SetParam(x_FN_SLP_DEC, 0xd3);
 5319              		.loc 1 1318 0
 5320 009e D321     		movs	r1, #211
 5321 00a0 1020     		movs	r0, #16
 5322 00a2 FFF7FEFF 		bl	SetParam
1319:L6470.c       ****     GetStatus();   
 5323              		.loc 1 1319 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 124


 5324 00a6 FFF7FEFF 		bl	GetStatus
1320:L6470.c       ****     SetParam(x_MAX_SPEED, MaxSpdCalc(Motor_Speed_X));  // Change the Speed
 5325              		.loc 1 1320 0
 5326 00aa 0E4B     		ldr	r3, .L252
 5327 00ac 1B68     		ldr	r3, [r3]
 5328 00ae 1846     		mov	r0, r3
 5329 00b0 FFF7FEFF 		bl	__aeabi_ui2f
 5330 00b4 0346     		mov	r3, r0
 5331 00b6 1846     		mov	r0, r3
 5332 00b8 FFF7FEFF 		bl	MaxSpdCalc
 5333 00bc 0346     		mov	r3, r0
 5334 00be 1946     		mov	r1, r3
 5335 00c0 0720     		movs	r0, #7
 5336 00c2 FFF7FEFF 		bl	SetParam
1321:L6470.c       ****     CyDelayUs(1);
 5337              		.loc 1 1321 0
 5338 00c6 0120     		movs	r0, #1
 5339 00c8 FFF7FEFF 		bl	CyDelayUs
1322:L6470.c       ****     Data_To_Transfer(x_SOFT_STOP);
 5340              		.loc 1 1322 0
 5341 00cc B020     		movs	r0, #176
 5342 00ce FFF7FEFF 		bl	Data_To_Transfer
1323:L6470.c       ****     while (Pin_BusyMotorX_Read() == 0) {}
 5343              		.loc 1 1323 0
 5344 00d2 00BF     		nop
 5345              	.L251:
 5346              		.loc 1 1323 0 is_stmt 0 discriminator 1
 5347 00d4 FFF7FEFF 		bl	Pin_BusyMotorX_Read
 5348 00d8 0346     		mov	r3, r0
 5349 00da 002B     		cmp	r3, #0
 5350 00dc FAD0     		beq	.L251
1324:L6470.c       **** }
 5351              		.loc 1 1324 0 is_stmt 1
 5352 00de 00BF     		nop
 5353 00e0 80BD     		pop	{r7, pc}
 5354              	.L253:
 5355 00e2 00BF     		.align	2
 5356              	.L252:
 5357 00e4 00000000 		.word	Motor_Speed_X
 5358 00e8 00007A44 		.word	1148846080
 5359              		.cfi_endproc
 5360              	.LFE92:
 5361              		.size	Configure_L6470_For_X_Motor, .-Configure_L6470_For_X_Motor
 5362              		.section	.text.Configure_L6470_For_Y_Motor,"ax",%progbits
 5363              		.align	2
 5364              		.global	Configure_L6470_For_Y_Motor
 5365              		.thumb
 5366              		.thumb_func
 5367              		.type	Configure_L6470_For_Y_Motor, %function
 5368              	Configure_L6470_For_Y_Motor:
 5369              	.LFB93:
1325:L6470.c       **** void Configure_L6470_For_Y_Motor()/* Configure motor Y. */
1326:L6470.c       **** { 
 5370              		.loc 1 1326 0
 5371              		.cfi_startproc
 5372              		@ args = 0, pretend = 0, frame = 0
 5373              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 125


 5374 0000 80B5     		push	{r7, lr}
 5375              		.cfi_def_cfa_offset 8
 5376              		.cfi_offset 7, -8
 5377              		.cfi_offset 14, -4
 5378 0002 00AF     		add	r7, sp, #0
 5379              		.cfi_def_cfa_register 7
1327:L6470.c       ****     SPI_SS_Control_Reg_Write(1);//Select SPI for motor X
 5380              		.loc 1 1327 0
 5381 0004 0120     		movs	r0, #1
 5382 0006 FFF7FEFF 		bl	SPI_SS_Control_Reg_Write
1328:L6470.c       ****     SetParam(x_STEP_MODE, !x_SYNC_EN | x_STEP_SEL_1_128 | x_SYNC_SEL_1);
 5383              		.loc 1 1328 0
 5384 000a 1721     		movs	r1, #23
 5385 000c 1620     		movs	r0, #22
 5386 000e FFF7FEFF 		bl	SetParam
1329:L6470.c       ****     SetParam(x_MAX_SPEED, MaxSpdCalc(Motor_Speed_Y));
 5387              		.loc 1 1329 0
 5388 0012 344B     		ldr	r3, .L256
 5389 0014 1B68     		ldr	r3, [r3]
 5390 0016 1846     		mov	r0, r3
 5391 0018 FFF7FEFF 		bl	__aeabi_ui2f
 5392 001c 0346     		mov	r3, r0
 5393 001e 1846     		mov	r0, r3
 5394 0020 FFF7FEFF 		bl	MaxSpdCalc
 5395 0024 0346     		mov	r3, r0
 5396 0026 1946     		mov	r1, r3
 5397 0028 0720     		movs	r0, #7
 5398 002a FFF7FEFF 		bl	SetParam
1330:L6470.c       ****     SetParam(x_FS_SPD, FSCalc(1000));
 5399              		.loc 1 1330 0
 5400 002e 2E48     		ldr	r0, .L256+4
 5401 0030 FFF7FEFF 		bl	FSCalc
 5402 0034 0346     		mov	r3, r0
 5403 0036 1946     		mov	r1, r3
 5404 0038 1520     		movs	r0, #21
 5405 003a FFF7FEFF 		bl	SetParam
1331:L6470.c       ****     SetParam(x_ACC, 0x7ff);
 5406              		.loc 1 1331 0
 5407 003e 40F2FF71 		movw	r1, #2047
 5408 0042 0520     		movs	r0, #5
 5409 0044 FFF7FEFF 		bl	SetParam
1332:L6470.c       ****     SetParam(x_DEC, 0x7ff);
 5410              		.loc 1 1332 0
 5411 0048 40F2FF71 		movw	r1, #2047
 5412 004c 0620     		movs	r0, #6
 5413 004e FFF7FEFF 		bl	SetParam
1333:L6470.c       ****     SetParam(x_OCD_TH, x_OCD_TH_6000mA);
 5414              		.loc 1 1333 0
 5415 0052 0F21     		movs	r1, #15
 5416 0054 1320     		movs	r0, #19
 5417 0056 FFF7FEFF 		bl	SetParam
1334:L6470.c       ****     SetParam(x_CONFIG,  x_CONFIG_PWM_DIV_1 |
 5418              		.loc 1 1334 0
 5419 005a 4FF4E051 		mov	r1, #7168
 5420 005e 1820     		movs	r0, #24
 5421 0060 FFF7FEFF 		bl	SetParam
1335:L6470.c       ****            x_CONFIG_PWM_MUL_2 |
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 126


1336:L6470.c       ****            x_CONFIG_SR_180V_us |
1337:L6470.c       ****            x_CONFIG_VS_COMP_DISABLE |
1338:L6470.c       ****            x_CONFIG_VS_COMP_DISABLE |
1339:L6470.c       ****            x_CONFIG_SW_HARD_STOP |
1340:L6470.c       ****            x_CONFIG_INT_16MHZ);
1341:L6470.c       ****     SetParam(x_KVAL_HOLD, 0x3C);
 5422              		.loc 1 1341 0
 5423 0064 3C21     		movs	r1, #60
 5424 0066 0920     		movs	r0, #9
 5425 0068 FFF7FEFF 		bl	SetParam
1342:L6470.c       ****     SetParam(x_KVAL_RUN, 0x7f);
 5426              		.loc 1 1342 0
 5427 006c 7F21     		movs	r1, #127
 5428 006e 0A20     		movs	r0, #10
 5429 0070 FFF7FEFF 		bl	SetParam
1343:L6470.c       ****     SetParam(x_KVAL_ACC, 0x7f);
 5430              		.loc 1 1343 0
 5431 0074 7F21     		movs	r1, #127
 5432 0076 0B20     		movs	r0, #11
 5433 0078 FFF7FEFF 		bl	SetParam
1344:L6470.c       ****     SetParam(x_KVAL_DEC, 0x7f);
 5434              		.loc 1 1344 0
 5435 007c 7F21     		movs	r1, #127
 5436 007e 0C20     		movs	r0, #12
 5437 0080 FFF7FEFF 		bl	SetParam
1345:L6470.c       ****     SetParam(x_ST_SLP, 0x05);
 5438              		.loc 1 1345 0
 5439 0084 0521     		movs	r1, #5
 5440 0086 0E20     		movs	r0, #14
 5441 0088 FFF7FEFF 		bl	SetParam
1346:L6470.c       ****     SetParam(x_INT_SPD, 0x146b);
 5442              		.loc 1 1346 0
 5443 008c 41F26B41 		movw	r1, #5227
 5444 0090 0D20     		movs	r0, #13
 5445 0092 FFF7FEFF 		bl	SetParam
1347:L6470.c       ****     SetParam(x_FN_SLP_ACC, 0xd3);
 5446              		.loc 1 1347 0
 5447 0096 D321     		movs	r1, #211
 5448 0098 0F20     		movs	r0, #15
 5449 009a FFF7FEFF 		bl	SetParam
1348:L6470.c       ****     SetParam(x_FN_SLP_DEC, 0xd3);
 5450              		.loc 1 1348 0
 5451 009e D321     		movs	r1, #211
 5452 00a0 1020     		movs	r0, #16
 5453 00a2 FFF7FEFF 		bl	SetParam
1349:L6470.c       ****     GetStatus();  
 5454              		.loc 1 1349 0
 5455 00a6 FFF7FEFF 		bl	GetStatus
1350:L6470.c       ****     SetParam(x_MAX_SPEED, MaxSpdCalc(Motor_Speed_Y));  // Change the Speed
 5456              		.loc 1 1350 0
 5457 00aa 0E4B     		ldr	r3, .L256
 5458 00ac 1B68     		ldr	r3, [r3]
 5459 00ae 1846     		mov	r0, r3
 5460 00b0 FFF7FEFF 		bl	__aeabi_ui2f
 5461 00b4 0346     		mov	r3, r0
 5462 00b6 1846     		mov	r0, r3
 5463 00b8 FFF7FEFF 		bl	MaxSpdCalc
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 127


 5464 00bc 0346     		mov	r3, r0
 5465 00be 1946     		mov	r1, r3
 5466 00c0 0720     		movs	r0, #7
 5467 00c2 FFF7FEFF 		bl	SetParam
1351:L6470.c       ****     CyDelayUs(1);
 5468              		.loc 1 1351 0
 5469 00c6 0120     		movs	r0, #1
 5470 00c8 FFF7FEFF 		bl	CyDelayUs
1352:L6470.c       ****     Data_To_Transfer(x_SOFT_STOP);
 5471              		.loc 1 1352 0
 5472 00cc B020     		movs	r0, #176
 5473 00ce FFF7FEFF 		bl	Data_To_Transfer
1353:L6470.c       ****     while (Pin_BusyMotorY_Read() == 0) {}
 5474              		.loc 1 1353 0
 5475 00d2 00BF     		nop
 5476              	.L255:
 5477              		.loc 1 1353 0 is_stmt 0 discriminator 1
 5478 00d4 FFF7FEFF 		bl	Pin_BusyMotorY_Read
 5479 00d8 0346     		mov	r3, r0
 5480 00da 002B     		cmp	r3, #0
 5481 00dc FAD0     		beq	.L255
1354:L6470.c       **** }
 5482              		.loc 1 1354 0 is_stmt 1
 5483 00de 00BF     		nop
 5484 00e0 80BD     		pop	{r7, pc}
 5485              	.L257:
 5486 00e2 00BF     		.align	2
 5487              	.L256:
 5488 00e4 00000000 		.word	Motor_Speed_Y
 5489 00e8 00007A44 		.word	1148846080
 5490              		.cfi_endproc
 5491              	.LFE93:
 5492              		.size	Configure_L6470_For_Y_Motor, .-Configure_L6470_For_Y_Motor
 5493              		.section	.text.Configure_L6470_For_Z_Motor,"ax",%progbits
 5494              		.align	2
 5495              		.global	Configure_L6470_For_Z_Motor
 5496              		.thumb
 5497              		.thumb_func
 5498              		.type	Configure_L6470_For_Z_Motor, %function
 5499              	Configure_L6470_For_Z_Motor:
 5500              	.LFB94:
1355:L6470.c       **** void Configure_L6470_For_Z_Motor()/* Configure motor Z. */
1356:L6470.c       **** { 
 5501              		.loc 1 1356 0
 5502              		.cfi_startproc
 5503              		@ args = 0, pretend = 0, frame = 0
 5504              		@ frame_needed = 1, uses_anonymous_args = 0
 5505 0000 80B5     		push	{r7, lr}
 5506              		.cfi_def_cfa_offset 8
 5507              		.cfi_offset 7, -8
 5508              		.cfi_offset 14, -4
 5509 0002 00AF     		add	r7, sp, #0
 5510              		.cfi_def_cfa_register 7
1357:L6470.c       ****     SPI_SS_Control_Reg_Write(2);//Select SPI for motor Z
 5511              		.loc 1 1357 0
 5512 0004 0220     		movs	r0, #2
 5513 0006 FFF7FEFF 		bl	SPI_SS_Control_Reg_Write
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 128


1358:L6470.c       ****     SetParam(x_STEP_MODE, !x_SYNC_EN | x_STEP_SEL_1_128 | x_SYNC_SEL_1);
 5514              		.loc 1 1358 0
 5515 000a 1721     		movs	r1, #23
 5516 000c 1620     		movs	r0, #22
 5517 000e FFF7FEFF 		bl	SetParam
1359:L6470.c       ****     SetParam(x_MAX_SPEED, MaxSpdCalc(Motor_Speed_Z));
 5518              		.loc 1 1359 0
 5519 0012 344B     		ldr	r3, .L260
 5520 0014 1B68     		ldr	r3, [r3]
 5521 0016 1846     		mov	r0, r3
 5522 0018 FFF7FEFF 		bl	__aeabi_ui2f
 5523 001c 0346     		mov	r3, r0
 5524 001e 1846     		mov	r0, r3
 5525 0020 FFF7FEFF 		bl	MaxSpdCalc
 5526 0024 0346     		mov	r3, r0
 5527 0026 1946     		mov	r1, r3
 5528 0028 0720     		movs	r0, #7
 5529 002a FFF7FEFF 		bl	SetParam
1360:L6470.c       ****     SetParam(x_FS_SPD, FSCalc(1000));
 5530              		.loc 1 1360 0
 5531 002e 2E48     		ldr	r0, .L260+4
 5532 0030 FFF7FEFF 		bl	FSCalc
 5533 0034 0346     		mov	r3, r0
 5534 0036 1946     		mov	r1, r3
 5535 0038 1520     		movs	r0, #21
 5536 003a FFF7FEFF 		bl	SetParam
1361:L6470.c       ****     SetParam(x_ACC, 0x7ff);
 5537              		.loc 1 1361 0
 5538 003e 40F2FF71 		movw	r1, #2047
 5539 0042 0520     		movs	r0, #5
 5540 0044 FFF7FEFF 		bl	SetParam
1362:L6470.c       ****     SetParam(x_DEC, 0x7ff);
 5541              		.loc 1 1362 0
 5542 0048 40F2FF71 		movw	r1, #2047
 5543 004c 0620     		movs	r0, #6
 5544 004e FFF7FEFF 		bl	SetParam
1363:L6470.c       ****     SetParam(x_OCD_TH, x_OCD_TH_6000mA);
 5545              		.loc 1 1363 0
 5546 0052 0F21     		movs	r1, #15
 5547 0054 1320     		movs	r0, #19
 5548 0056 FFF7FEFF 		bl	SetParam
1364:L6470.c       ****     SetParam(x_CONFIG,  x_CONFIG_PWM_DIV_1 |
 5549              		.loc 1 1364 0
 5550 005a 4FF4E051 		mov	r1, #7168
 5551 005e 1820     		movs	r0, #24
 5552 0060 FFF7FEFF 		bl	SetParam
1365:L6470.c       ****            x_CONFIG_PWM_MUL_2 |
1366:L6470.c       ****            x_CONFIG_SR_180V_us |
1367:L6470.c       ****            x_CONFIG_VS_COMP_DISABLE |
1368:L6470.c       ****            x_CONFIG_VS_COMP_DISABLE |
1369:L6470.c       ****            x_CONFIG_SW_HARD_STOP |
1370:L6470.c       ****            x_CONFIG_INT_16MHZ);
1371:L6470.c       ****     SetParam(x_KVAL_HOLD, 0x0f);
 5553              		.loc 1 1371 0
 5554 0064 0F21     		movs	r1, #15
 5555 0066 0920     		movs	r0, #9
 5556 0068 FFF7FEFF 		bl	SetParam
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 129


1372:L6470.c       ****     SetParam(x_KVAL_RUN, 0x7f);
 5557              		.loc 1 1372 0
 5558 006c 7F21     		movs	r1, #127
 5559 006e 0A20     		movs	r0, #10
 5560 0070 FFF7FEFF 		bl	SetParam
1373:L6470.c       ****     SetParam(x_KVAL_ACC, 0x7f);
 5561              		.loc 1 1373 0
 5562 0074 7F21     		movs	r1, #127
 5563 0076 0B20     		movs	r0, #11
 5564 0078 FFF7FEFF 		bl	SetParam
1374:L6470.c       ****     SetParam(x_KVAL_DEC, 0x7f);
 5565              		.loc 1 1374 0
 5566 007c 7F21     		movs	r1, #127
 5567 007e 0C20     		movs	r0, #12
 5568 0080 FFF7FEFF 		bl	SetParam
1375:L6470.c       ****     SetParam(x_ST_SLP, 0x05);
 5569              		.loc 1 1375 0
 5570 0084 0521     		movs	r1, #5
 5571 0086 0E20     		movs	r0, #14
 5572 0088 FFF7FEFF 		bl	SetParam
1376:L6470.c       ****     SetParam(x_INT_SPD, 0x146b);
 5573              		.loc 1 1376 0
 5574 008c 41F26B41 		movw	r1, #5227
 5575 0090 0D20     		movs	r0, #13
 5576 0092 FFF7FEFF 		bl	SetParam
1377:L6470.c       ****     SetParam(x_FN_SLP_ACC, 0xd3);
 5577              		.loc 1 1377 0
 5578 0096 D321     		movs	r1, #211
 5579 0098 0F20     		movs	r0, #15
 5580 009a FFF7FEFF 		bl	SetParam
1378:L6470.c       ****     SetParam(x_FN_SLP_DEC, 0xd3);
 5581              		.loc 1 1378 0
 5582 009e D321     		movs	r1, #211
 5583 00a0 1020     		movs	r0, #16
 5584 00a2 FFF7FEFF 		bl	SetParam
1379:L6470.c       ****     GetStatus();
 5585              		.loc 1 1379 0
 5586 00a6 FFF7FEFF 		bl	GetStatus
1380:L6470.c       ****     SetParam(x_MAX_SPEED, MaxSpdCalc(Motor_Speed_Z));  // Change the Speed
 5587              		.loc 1 1380 0
 5588 00aa 0E4B     		ldr	r3, .L260
 5589 00ac 1B68     		ldr	r3, [r3]
 5590 00ae 1846     		mov	r0, r3
 5591 00b0 FFF7FEFF 		bl	__aeabi_ui2f
 5592 00b4 0346     		mov	r3, r0
 5593 00b6 1846     		mov	r0, r3
 5594 00b8 FFF7FEFF 		bl	MaxSpdCalc
 5595 00bc 0346     		mov	r3, r0
 5596 00be 1946     		mov	r1, r3
 5597 00c0 0720     		movs	r0, #7
 5598 00c2 FFF7FEFF 		bl	SetParam
1381:L6470.c       ****     CyDelayUs(1);
 5599              		.loc 1 1381 0
 5600 00c6 0120     		movs	r0, #1
 5601 00c8 FFF7FEFF 		bl	CyDelayUs
1382:L6470.c       ****     Data_To_Transfer(x_SOFT_STOP);
 5602              		.loc 1 1382 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 130


 5603 00cc B020     		movs	r0, #176
 5604 00ce FFF7FEFF 		bl	Data_To_Transfer
1383:L6470.c       ****     while (Pin_BusyMotorZ_Read() == 0) {}
 5605              		.loc 1 1383 0
 5606 00d2 00BF     		nop
 5607              	.L259:
 5608              		.loc 1 1383 0 is_stmt 0 discriminator 1
 5609 00d4 FFF7FEFF 		bl	Pin_BusyMotorZ_Read
 5610 00d8 0346     		mov	r3, r0
 5611 00da 002B     		cmp	r3, #0
 5612 00dc FAD0     		beq	.L259
1384:L6470.c       **** }
 5613              		.loc 1 1384 0 is_stmt 1
 5614 00de 00BF     		nop
 5615 00e0 80BD     		pop	{r7, pc}
 5616              	.L261:
 5617 00e2 00BF     		.align	2
 5618              	.L260:
 5619 00e4 00000000 		.word	Motor_Speed_Z
 5620 00e8 00007A44 		.word	1148846080
 5621              		.cfi_endproc
 5622              	.LFE94:
 5623              		.size	Configure_L6470_For_Z_Motor, .-Configure_L6470_For_Z_Motor
 5624              		.section	.text.Check_Thermal_Shoutdown,"ax",%progbits
 5625              		.align	2
 5626              		.global	Check_Thermal_Shoutdown
 5627              		.thumb
 5628              		.thumb_func
 5629              		.type	Check_Thermal_Shoutdown, %function
 5630              	Check_Thermal_Shoutdown:
 5631              	.LFB95:
1385:L6470.c       **** void Check_Thermal_Shoutdown()/* Check thr Flag Pin of All Motor Driver for Thermal Shoutdown. */
1386:L6470.c       **** {
 5632              		.loc 1 1386 0
 5633              		.cfi_startproc
 5634              		@ args = 0, pretend = 0, frame = 0
 5635              		@ frame_needed = 1, uses_anonymous_args = 0
 5636 0000 80B5     		push	{r7, lr}
 5637              		.cfi_def_cfa_offset 8
 5638              		.cfi_offset 7, -8
 5639              		.cfi_offset 14, -4
 5640 0002 00AF     		add	r7, sp, #0
 5641              		.cfi_def_cfa_register 7
1387:L6470.c       ****     if(Pin_FlagMotorZ_Read()==0)
 5642              		.loc 1 1387 0
 5643 0004 FFF7FEFF 		bl	Pin_FlagMotorZ_Read
 5644 0008 0346     		mov	r3, r0
 5645 000a 002B     		cmp	r3, #0
 5646 000c 03D1     		bne	.L264
1388:L6470.c       ****     {
1389:L6470.c       ****         CyDelay(5000);   /* % second delay for cool down. */
 5647              		.loc 1 1389 0
 5648 000e 41F28830 		movw	r0, #5000
 5649 0012 FFF7FEFF 		bl	CyDelay
 5650              	.L264:
1390:L6470.c       ****     }
1391:L6470.c       **** }
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 131


 5651              		.loc 1 1391 0
 5652 0016 00BF     		nop
 5653 0018 80BD     		pop	{r7, pc}
 5654              		.cfi_endproc
 5655              	.LFE95:
 5656              		.size	Check_Thermal_Shoutdown, .-Check_Thermal_Shoutdown
 5657 001a 00BF     		.section	.text.check_Error,"ax",%progbits
 5658              		.align	2
 5659              		.global	check_Error
 5660              		.thumb
 5661              		.thumb_func
 5662              		.type	check_Error, %function
 5663              	check_Error:
 5664              	.LFB96:
1392:L6470.c       **** int check_Error(char Axis, char command_in_progress )/* Configure motor Y. */
1393:L6470.c       **** {
 5665              		.loc 1 1393 0
 5666              		.cfi_startproc
 5667              		@ args = 0, pretend = 0, frame = 8
 5668              		@ frame_needed = 1, uses_anonymous_args = 0
 5669 0000 80B5     		push	{r7, lr}
 5670              		.cfi_def_cfa_offset 8
 5671              		.cfi_offset 7, -8
 5672              		.cfi_offset 14, -4
 5673 0002 82B0     		sub	sp, sp, #8
 5674              		.cfi_def_cfa_offset 16
 5675 0004 00AF     		add	r7, sp, #0
 5676              		.cfi_def_cfa_register 7
 5677 0006 0346     		mov	r3, r0
 5678 0008 0A46     		mov	r2, r1
 5679 000a FB71     		strb	r3, [r7, #7]
 5680 000c 1346     		mov	r3, r2
 5681 000e BB71     		strb	r3, [r7, #6]
1394:L6470.c       ****     Error = 0;
 5682              		.loc 1 1394 0
 5683 0010 264B     		ldr	r3, .L274
 5684 0012 0022     		movs	r2, #0
 5685 0014 1A60     		str	r2, [r3]
1395:L6470.c       ****     Is_USB_Unpluged();
 5686              		.loc 1 1395 0
 5687 0016 FFF7FEFF 		bl	Is_USB_Unpluged
1396:L6470.c       ****     if((Pin_FlagMotorX_Read() == 0) && (Axis == 'X'))
 5688              		.loc 1 1396 0
 5689 001a FFF7FEFF 		bl	Pin_FlagMotorX_Read
 5690 001e 0346     		mov	r3, r0
 5691 0020 002B     		cmp	r3, #0
 5692 0022 05D1     		bne	.L266
 5693              		.loc 1 1396 0 is_stmt 0 discriminator 1
 5694 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5695 0026 582B     		cmp	r3, #88
 5696 0028 02D1     		bne	.L266
1397:L6470.c       ****         Error = 4;//X_Motor_Driver_Fault
 5697              		.loc 1 1397 0 is_stmt 1
 5698 002a 204B     		ldr	r3, .L274
 5699 002c 0422     		movs	r2, #4
 5700 002e 1A60     		str	r2, [r3]
 5701              	.L266:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 132


1398:L6470.c       ****     if((Pin_FlagMotorY_Read() == 0) && (Axis == 'Y'))
 5702              		.loc 1 1398 0
 5703 0030 FFF7FEFF 		bl	Pin_FlagMotorY_Read
 5704 0034 0346     		mov	r3, r0
 5705 0036 002B     		cmp	r3, #0
 5706 0038 05D1     		bne	.L267
 5707              		.loc 1 1398 0 is_stmt 0 discriminator 1
 5708 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5709 003c 592B     		cmp	r3, #89
 5710 003e 02D1     		bne	.L267
1399:L6470.c       ****         Error = 10;//Y_Motor_Driver_Fault
 5711              		.loc 1 1399 0 is_stmt 1
 5712 0040 1A4B     		ldr	r3, .L274
 5713 0042 0A22     		movs	r2, #10
 5714 0044 1A60     		str	r2, [r3]
 5715              	.L267:
1400:L6470.c       ****     if((Pin_FlagMotorZ_Read() == 0) && (Axis == 'Z'))
 5716              		.loc 1 1400 0
 5717 0046 FFF7FEFF 		bl	Pin_FlagMotorZ_Read
 5718 004a 0346     		mov	r3, r0
 5719 004c 002B     		cmp	r3, #0
 5720 004e 05D1     		bne	.L268
 5721              		.loc 1 1400 0 is_stmt 0 discriminator 1
 5722 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5723 0052 5A2B     		cmp	r3, #90
 5724 0054 02D1     		bne	.L268
1401:L6470.c       ****         Error = 16;//Z_Motor_Driver_Fault
 5725              		.loc 1 1401 0 is_stmt 1
 5726 0056 154B     		ldr	r3, .L274
 5727 0058 1022     		movs	r2, #16
 5728 005a 1A60     		str	r2, [r3]
 5729              	.L268:
1402:L6470.c       **** 
1403:L6470.c       ****     
1404:L6470.c       ****     if((Pin_FlagMotorX_Read() == 0) && (Axis == 'A'))//A stand for All Motors
 5730              		.loc 1 1404 0
 5731 005c FFF7FEFF 		bl	Pin_FlagMotorX_Read
 5732 0060 0346     		mov	r3, r0
 5733 0062 002B     		cmp	r3, #0
 5734 0064 05D1     		bne	.L269
 5735              		.loc 1 1404 0 is_stmt 0 discriminator 1
 5736 0066 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5737 0068 412B     		cmp	r3, #65
 5738 006a 02D1     		bne	.L269
1405:L6470.c       ****         Error = 4;//X_Motor_Driver_Fault
 5739              		.loc 1 1405 0 is_stmt 1
 5740 006c 0F4B     		ldr	r3, .L274
 5741 006e 0422     		movs	r2, #4
 5742 0070 1A60     		str	r2, [r3]
 5743              	.L269:
1406:L6470.c       ****     if((Pin_FlagMotorY_Read() == 0) && (Axis == 'A'))
 5744              		.loc 1 1406 0
 5745 0072 FFF7FEFF 		bl	Pin_FlagMotorY_Read
 5746 0076 0346     		mov	r3, r0
 5747 0078 002B     		cmp	r3, #0
 5748 007a 05D1     		bne	.L270
 5749              		.loc 1 1406 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 133


 5750 007c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5751 007e 412B     		cmp	r3, #65
 5752 0080 02D1     		bne	.L270
1407:L6470.c       ****         Error = 10;//Y_Motor_Driver_Fault
 5753              		.loc 1 1407 0 is_stmt 1
 5754 0082 0A4B     		ldr	r3, .L274
 5755 0084 0A22     		movs	r2, #10
 5756 0086 1A60     		str	r2, [r3]
 5757              	.L270:
1408:L6470.c       ****     if((Pin_FlagMotorZ_Read() == 0) && (Axis == 'A'))
 5758              		.loc 1 1408 0
 5759 0088 FFF7FEFF 		bl	Pin_FlagMotorZ_Read
 5760 008c 0346     		mov	r3, r0
 5761 008e 002B     		cmp	r3, #0
 5762 0090 05D1     		bne	.L273
 5763              		.loc 1 1408 0 is_stmt 0 discriminator 1
 5764 0092 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5765 0094 412B     		cmp	r3, #65
 5766 0096 02D1     		bne	.L273
1409:L6470.c       ****         Error = 16;//Z_Motor_Driver_Fault
 5767              		.loc 1 1409 0 is_stmt 1
 5768 0098 044B     		ldr	r3, .L274
 5769 009a 1022     		movs	r2, #16
 5770 009c 1A60     		str	r2, [r3]
 5771              	.L273:
1410:L6470.c       ****     
1411:L6470.c       ****     //Checking if in goto command it is going below 0(Home limit)
1412:L6470.c       ****     if(command_in_progress == 'G')//G for Goto command
1413:L6470.c       ****     {
1414:L6470.c       **** //        if(ADC_SAR_Seq_GetResult16(0) > Proxy_Sensor_Threshold)
1415:L6470.c       **** //        {
1416:L6470.c       **** //            Data_To_Transfer(x_HARD_STOP);
1417:L6470.c       **** //            Error = 2;//X_Encoder_Not_Working
1418:L6470.c       **** //            Write_Debug_UART_Char("X_Encoder_Not_Working********** [In the range of Proxy Sens] \
1419:L6470.c       **** //            return false;
1420:L6470.c       **** //        }
1421:L6470.c       **** //        if(ADC_SAR_Seq_GetResult16(1) > Proxy_Sensor_Threshold)
1422:L6470.c       **** //        {
1423:L6470.c       **** //            Data_To_Transfer(x_HARD_STOP);
1424:L6470.c       **** //            Error = 8;//Y_Encoder_Not_Working
1425:L6470.c       **** //            Write_Debug_UART_Char("Y_Encoder_Not_Working********** [In the range of Proxy Sens] \
1426:L6470.c       **** //            return false;
1427:L6470.c       **** //        }
1428:L6470.c       **** //        if(ADC_SAR_Seq_GetResult16(2) > Proxy_Sensor_Threshold)
1429:L6470.c       **** //        {
1430:L6470.c       **** //            Data_To_Transfer(x_HARD_STOP);
1431:L6470.c       **** //            Error = 14;//Z_Encoder_Not_Working
1432:L6470.c       **** //            Write_Debug_UART_Char("Z_Encoder_Not_Working********** [In the range of Proxy Sens] \
1433:L6470.c       **** //            return false;
1434:L6470.c       **** //        }
1435:L6470.c       ****     }
1436:L6470.c       ****     if(command_in_progress == 'H')//H for Home command
1437:L6470.c       ****     {    }
1438:L6470.c       ****     return Error;
 5772              		.loc 1 1438 0
 5773 009e 034B     		ldr	r3, .L274
 5774 00a0 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 134


1439:L6470.c       **** }
 5775              		.loc 1 1439 0
 5776 00a2 1846     		mov	r0, r3
 5777 00a4 0837     		adds	r7, r7, #8
 5778              		.cfi_def_cfa_offset 8
 5779 00a6 BD46     		mov	sp, r7
 5780              		.cfi_def_cfa_register 13
 5781              		@ sp needed
 5782 00a8 80BD     		pop	{r7, pc}
 5783              	.L275:
 5784 00aa 00BF     		.align	2
 5785              	.L274:
 5786 00ac 00000000 		.word	Error
 5787              		.cfi_endproc
 5788              	.LFE96:
 5789              		.size	check_Error, .-check_Error
 5790              		.section	.text.disconnect_all_motor,"ax",%progbits
 5791              		.align	2
 5792              		.global	disconnect_all_motor
 5793              		.thumb
 5794              		.thumb_func
 5795              		.type	disconnect_all_motor, %function
 5796              	disconnect_all_motor:
 5797              	.LFB97:
1440:L6470.c       **** void disconnect_all_motor()
1441:L6470.c       **** {
 5798              		.loc 1 1441 0
 5799              		.cfi_startproc
 5800              		@ args = 0, pretend = 0, frame = 0
 5801              		@ frame_needed = 1, uses_anonymous_args = 0
 5802 0000 80B5     		push	{r7, lr}
 5803              		.cfi_def_cfa_offset 8
 5804              		.cfi_offset 7, -8
 5805              		.cfi_offset 14, -4
 5806 0002 00AF     		add	r7, sp, #0
 5807              		.cfi_def_cfa_register 7
1442:L6470.c       ****     SPI_SS_Control_Reg_Write(3);//Select No motor   
 5808              		.loc 1 1442 0
 5809 0004 0320     		movs	r0, #3
 5810 0006 FFF7FEFF 		bl	SPI_SS_Control_Reg_Write
1443:L6470.c       **** }
 5811              		.loc 1 1443 0
 5812 000a 00BF     		nop
 5813 000c 80BD     		pop	{r7, pc}
 5814              		.cfi_endproc
 5815              	.LFE97:
 5816              		.size	disconnect_all_motor, .-disconnect_all_motor
 5817 000e 00BF     		.section	.rodata
 5818 0b5d 000000   		.align	2
 5819              	.LC91:
 5820 0b60 5365744E 		.ascii	"SetNoOfExecution Command Recived  \015\012\000"
 5820      6F4F6645 
 5820      78656375 
 5820      74696F6E 
 5820      20436F6D 
 5821 0b85 000000   		.align	2
 5822              	.LC92:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 135


 5823 0b88 56616C75 		.ascii	"Value received for x,y and z is --->\000"
 5823      65207265 
 5823      63656976 
 5823      65642066 
 5823      6F722078 
 5824 0bad 000000   		.align	2
 5825              	.LC93:
 5826 0bb0 2C00     		.ascii	",\000"
 5827              		.section	.text.set_no_of_execution,"ax",%progbits
 5828              		.align	2
 5829              		.global	set_no_of_execution
 5830              		.thumb
 5831              		.thumb_func
 5832              		.type	set_no_of_execution, %function
 5833              	set_no_of_execution:
 5834              	.LFB98:
1444:L6470.c       **** void set_no_of_execution()
1445:L6470.c       **** {
 5835              		.loc 1 1445 0
 5836              		.cfi_startproc
 5837              		@ args = 0, pretend = 0, frame = 0
 5838              		@ frame_needed = 1, uses_anonymous_args = 0
 5839 0000 80B5     		push	{r7, lr}
 5840              		.cfi_def_cfa_offset 8
 5841              		.cfi_offset 7, -8
 5842              		.cfi_offset 14, -4
 5843 0002 00AF     		add	r7, sp, #0
 5844              		.cfi_def_cfa_register 7
1446:L6470.c       ****     Write_Debug_UART_Char("SetNoOfExecution Command Recived  \r\n");
 5845              		.loc 1 1446 0
 5846 0004 1D48     		ldr	r0, .L278
 5847 0006 FFF7FEFF 		bl	Write_Debug_UART_Char
1447:L6470.c       ****     step_correction_loop_x = ((unsigned int)USB_received[3] << 8) + USB_received[2];
 5848              		.loc 1 1447 0
 5849 000a 1D4B     		ldr	r3, .L278+4
 5850 000c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 5851 000e 1B02     		lsls	r3, r3, #8
 5852 0010 1B4A     		ldr	r2, .L278+4
 5853 0012 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 5854 0014 1344     		add	r3, r3, r2
 5855 0016 1A46     		mov	r2, r3
 5856 0018 1A4B     		ldr	r3, .L278+8
 5857 001a 1A60     		str	r2, [r3]
1448:L6470.c       ****     step_correction_loop_y = ((unsigned int)USB_received[5] << 8) + USB_received[4];
 5858              		.loc 1 1448 0
 5859 001c 184B     		ldr	r3, .L278+4
 5860 001e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 5861 0020 1B02     		lsls	r3, r3, #8
 5862 0022 174A     		ldr	r2, .L278+4
 5863 0024 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 5864 0026 1344     		add	r3, r3, r2
 5865 0028 1A46     		mov	r2, r3
 5866 002a 174B     		ldr	r3, .L278+12
 5867 002c 1A60     		str	r2, [r3]
1449:L6470.c       ****     step_correction_loop_z = ((unsigned int)USB_received[7] << 8) + USB_received[6];     
 5868              		.loc 1 1449 0
 5869 002e 144B     		ldr	r3, .L278+4
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 136


 5870 0030 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 5871 0032 1B02     		lsls	r3, r3, #8
 5872 0034 124A     		ldr	r2, .L278+4
 5873 0036 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 5874 0038 1344     		add	r3, r3, r2
 5875 003a 1A46     		mov	r2, r3
 5876 003c 134B     		ldr	r3, .L278+16
 5877 003e 1A60     		str	r2, [r3]
1450:L6470.c       ****     Write_Debug_UART_Char("Value received for x,y and z is --->");
 5878              		.loc 1 1450 0
 5879 0040 1348     		ldr	r0, .L278+20
 5880 0042 FFF7FEFF 		bl	Write_Debug_UART_Char
1451:L6470.c       ****     Write_Debug_UART_Int(step_correction_loop_x);
 5881              		.loc 1 1451 0
 5882 0046 0F4B     		ldr	r3, .L278+8
 5883 0048 1B68     		ldr	r3, [r3]
 5884 004a 1846     		mov	r0, r3
 5885 004c FFF7FEFF 		bl	Write_Debug_UART_Int
1452:L6470.c       ****     Write_Debug_UART_Char(",");
 5886              		.loc 1 1452 0
 5887 0050 1048     		ldr	r0, .L278+24
 5888 0052 FFF7FEFF 		bl	Write_Debug_UART_Char
1453:L6470.c       ****     Write_Debug_UART_Int(step_correction_loop_y);
 5889              		.loc 1 1453 0
 5890 0056 0C4B     		ldr	r3, .L278+12
 5891 0058 1B68     		ldr	r3, [r3]
 5892 005a 1846     		mov	r0, r3
 5893 005c FFF7FEFF 		bl	Write_Debug_UART_Int
1454:L6470.c       ****     Write_Debug_UART_Char(",");
 5894              		.loc 1 1454 0
 5895 0060 0C48     		ldr	r0, .L278+24
 5896 0062 FFF7FEFF 		bl	Write_Debug_UART_Char
1455:L6470.c       ****     Write_Debug_UART_Int(step_correction_loop_z);
 5897              		.loc 1 1455 0
 5898 0066 094B     		ldr	r3, .L278+16
 5899 0068 1B68     		ldr	r3, [r3]
 5900 006a 1846     		mov	r0, r3
 5901 006c FFF7FEFF 		bl	Write_Debug_UART_Int
1456:L6470.c       ****     Write_Debug_UART_Char(",");
 5902              		.loc 1 1456 0
 5903 0070 0848     		ldr	r0, .L278+24
 5904 0072 FFF7FEFF 		bl	Write_Debug_UART_Char
1457:L6470.c       **** }
 5905              		.loc 1 1457 0
 5906 0076 00BF     		nop
 5907 0078 80BD     		pop	{r7, pc}
 5908              	.L279:
 5909 007a 00BF     		.align	2
 5910              	.L278:
 5911 007c 600B0000 		.word	.LC91
 5912 0080 00000000 		.word	USB_received
 5913 0084 00000000 		.word	step_correction_loop_x
 5914 0088 00000000 		.word	step_correction_loop_y
 5915 008c 00000000 		.word	step_correction_loop_z
 5916 0090 880B0000 		.word	.LC92
 5917 0094 B00B0000 		.word	.LC93
 5918              		.cfi_endproc
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 137


 5919              	.LFE98:
 5920              		.size	set_no_of_execution, .-set_no_of_execution
 5921              		.section	.text.Set_Speed,"ax",%progbits
 5922              		.align	2
 5923              		.global	Set_Speed
 5924              		.thumb
 5925              		.thumb_func
 5926              		.type	Set_Speed, %function
 5927              	Set_Speed:
 5928              	.LFB99:
1458:L6470.c       **** void Set_Speed()/* Set the maximum Speed Limit. */
1459:L6470.c       **** {
 5929              		.loc 1 1459 0
 5930              		.cfi_startproc
 5931              		@ args = 0, pretend = 0, frame = 0
 5932              		@ frame_needed = 1, uses_anonymous_args = 0
 5933 0000 80B5     		push	{r7, lr}
 5934              		.cfi_def_cfa_offset 8
 5935              		.cfi_offset 7, -8
 5936              		.cfi_offset 14, -4
 5937 0002 00AF     		add	r7, sp, #0
 5938              		.cfi_def_cfa_register 7
1460:L6470.c       ****     Write_Debug_UART_Char("SetNoOfExecution Command Recived  \r\n");
 5939              		.loc 1 1460 0
 5940 0004 1B48     		ldr	r0, .L281
 5941 0006 FFF7FEFF 		bl	Write_Debug_UART_Char
1461:L6470.c       ****     Motor_Speed_X = ((unsigned int)USB_received[3] << 8) + USB_received[2];
 5942              		.loc 1 1461 0
 5943 000a 1B4B     		ldr	r3, .L281+4
 5944 000c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 5945 000e 1B02     		lsls	r3, r3, #8
 5946 0010 194A     		ldr	r2, .L281+4
 5947 0012 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 5948 0014 1344     		add	r3, r3, r2
 5949 0016 194A     		ldr	r2, .L281+8
 5950 0018 1360     		str	r3, [r2]
1462:L6470.c       ****     Motor_Speed_Y = ((unsigned int)USB_received[5] << 8) + USB_received[4];
 5951              		.loc 1 1462 0
 5952 001a 174B     		ldr	r3, .L281+4
 5953 001c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 5954 001e 1B02     		lsls	r3, r3, #8
 5955 0020 154A     		ldr	r2, .L281+4
 5956 0022 1279     		ldrb	r2, [r2, #4]	@ zero_extendqisi2
 5957 0024 1344     		add	r3, r3, r2
 5958 0026 164A     		ldr	r2, .L281+12
 5959 0028 1360     		str	r3, [r2]
1463:L6470.c       ****     Motor_Speed_Z = ((unsigned int)USB_received[7] << 8) + USB_received[6];
 5960              		.loc 1 1463 0
 5961 002a 134B     		ldr	r3, .L281+4
 5962 002c DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 5963 002e 1B02     		lsls	r3, r3, #8
 5964 0030 114A     		ldr	r2, .L281+4
 5965 0032 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 5966 0034 1344     		add	r3, r3, r2
 5967 0036 134A     		ldr	r2, .L281+16
 5968 0038 1360     		str	r3, [r2]
1464:L6470.c       ****     Write_Debug_UART_Char("Value received for x,y and z is --->");
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 138


 5969              		.loc 1 1464 0
 5970 003a 1348     		ldr	r0, .L281+20
 5971 003c FFF7FEFF 		bl	Write_Debug_UART_Char
1465:L6470.c       ****     Write_Debug_UART_Int(Motor_Speed_X);
 5972              		.loc 1 1465 0
 5973 0040 0E4B     		ldr	r3, .L281+8
 5974 0042 1B68     		ldr	r3, [r3]
 5975 0044 1846     		mov	r0, r3
 5976 0046 FFF7FEFF 		bl	Write_Debug_UART_Int
1466:L6470.c       ****     Write_Debug_UART_Char(",");
 5977              		.loc 1 1466 0
 5978 004a 1048     		ldr	r0, .L281+24
 5979 004c FFF7FEFF 		bl	Write_Debug_UART_Char
1467:L6470.c       ****     Write_Debug_UART_Int(Motor_Speed_Y);
 5980              		.loc 1 1467 0
 5981 0050 0B4B     		ldr	r3, .L281+12
 5982 0052 1B68     		ldr	r3, [r3]
 5983 0054 1846     		mov	r0, r3
 5984 0056 FFF7FEFF 		bl	Write_Debug_UART_Int
1468:L6470.c       ****     Write_Debug_UART_Char(",");
 5985              		.loc 1 1468 0
 5986 005a 0C48     		ldr	r0, .L281+24
 5987 005c FFF7FEFF 		bl	Write_Debug_UART_Char
1469:L6470.c       ****     Write_Debug_UART_Int(Motor_Speed_Z);
 5988              		.loc 1 1469 0
 5989 0060 084B     		ldr	r3, .L281+16
 5990 0062 1B68     		ldr	r3, [r3]
 5991 0064 1846     		mov	r0, r3
 5992 0066 FFF7FEFF 		bl	Write_Debug_UART_Int
1470:L6470.c       ****     Write_Debug_UART_Char(",");
 5993              		.loc 1 1470 0
 5994 006a 0848     		ldr	r0, .L281+24
 5995 006c FFF7FEFF 		bl	Write_Debug_UART_Char
1471:L6470.c       **** }
 5996              		.loc 1 1471 0
 5997 0070 00BF     		nop
 5998 0072 80BD     		pop	{r7, pc}
 5999              	.L282:
 6000              		.align	2
 6001              	.L281:
 6002 0074 600B0000 		.word	.LC91
 6003 0078 00000000 		.word	USB_received
 6004 007c 00000000 		.word	Motor_Speed_X
 6005 0080 00000000 		.word	Motor_Speed_Y
 6006 0084 00000000 		.word	Motor_Speed_Z
 6007 0088 880B0000 		.word	.LC92
 6008 008c B00B0000 		.word	.LC93
 6009              		.cfi_endproc
 6010              	.LFE99:
 6011              		.size	Set_Speed, .-Set_Speed
 6012              		.global	__aeabi_f2d
 6013              		.global	__aeabi_dsub
 6014              		.global	__aeabi_d2f
 6015              		.global	__aeabi_f2uiz
 6016              		.section	.text.FSCalc,"ax",%progbits
 6017              		.align	2
 6018              		.global	FSCalc
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 139


 6019              		.thumb
 6020              		.thumb_func
 6021              		.type	FSCalc, %function
 6022              	FSCalc:
 6023              	.LFB100:
1472:L6470.c       **** //L6470 Motor Driver Functions Stop-------------------------------------------------------
1473:L6470.c       **** 
1474:L6470.c       **** 
1475:L6470.c       **** //Motor Driver Command Function Start-------------------------------------------------------
1476:L6470.c       **** unsigned long FSCalc(float stepsPerSec)
1477:L6470.c       **** {
 6024              		.loc 1 1477 0
 6025              		.cfi_startproc
 6026              		@ args = 0, pretend = 0, frame = 16
 6027              		@ frame_needed = 1, uses_anonymous_args = 0
 6028 0000 90B5     		push	{r4, r7, lr}
 6029              		.cfi_def_cfa_offset 12
 6030              		.cfi_offset 4, -12
 6031              		.cfi_offset 7, -8
 6032              		.cfi_offset 14, -4
 6033 0002 85B0     		sub	sp, sp, #20
 6034              		.cfi_def_cfa_offset 32
 6035 0004 00AF     		add	r7, sp, #0
 6036              		.cfi_def_cfa_register 7
 6037 0006 7860     		str	r0, [r7, #4]	@ float
1478:L6470.c       ****   float temp = (stepsPerSec * .065536) - .5;
 6038              		.loc 1 1478 0
 6039 0008 7868     		ldr	r0, [r7, #4]	@ float
 6040 000a FFF7FEFF 		bl	__aeabi_f2d
 6041 000e 14A3     		adr	r3, .L286
 6042 0010 D3E90023 		ldrd	r2, [r3]
 6043 0014 FFF7FEFF 		bl	__aeabi_dmul
 6044 0018 0346     		mov	r3, r0
 6045 001a 0C46     		mov	r4, r1
 6046 001c 1846     		mov	r0, r3
 6047 001e 2146     		mov	r1, r4
 6048 0020 4FF00002 		mov	r2, #0
 6049 0024 104B     		ldr	r3, .L286+8
 6050 0026 FFF7FEFF 		bl	__aeabi_dsub
 6051 002a 0346     		mov	r3, r0
 6052 002c 0C46     		mov	r4, r1
 6053 002e 1846     		mov	r0, r3
 6054 0030 2146     		mov	r1, r4
 6055 0032 FFF7FEFF 		bl	__aeabi_d2f
 6056 0036 0346     		mov	r3, r0
 6057 0038 FB60     		str	r3, [r7, #12]	@ float
1479:L6470.c       ****   if ( (unsigned long) (temp) > 0x000003FF) return 0x000003FF;
 6058              		.loc 1 1479 0
 6059 003a F868     		ldr	r0, [r7, #12]	@ float
 6060 003c FFF7FEFF 		bl	__aeabi_f2uiz
 6061 0040 0346     		mov	r3, r0
 6062 0042 B3F5806F 		cmp	r3, #1024
 6063 0046 02D3     		bcc	.L284
 6064              		.loc 1 1479 0 is_stmt 0 discriminator 1
 6065 0048 40F2FF33 		movw	r3, #1023
 6066 004c 03E0     		b	.L285
 6067              	.L284:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 140


1480:L6470.c       ****   else return (unsigned long) (temp);
 6068              		.loc 1 1480 0 is_stmt 1
 6069 004e F868     		ldr	r0, [r7, #12]	@ float
 6070 0050 FFF7FEFF 		bl	__aeabi_f2uiz
 6071 0054 0346     		mov	r3, r0
 6072              	.L285:
1481:L6470.c       **** }
 6073              		.loc 1 1481 0
 6074 0056 1846     		mov	r0, r3
 6075 0058 1437     		adds	r7, r7, #20
 6076              		.cfi_def_cfa_offset 12
 6077 005a BD46     		mov	sp, r7
 6078              		.cfi_def_cfa_register 13
 6079              		@ sp needed
 6080 005c 90BD     		pop	{r4, r7, pc}
 6081              	.L287:
 6082 005e 00BF     		.align	3
 6083              	.L286:
 6084 0060 8DEDB5A0 		.word	-1598689907
 6085 0064 F7C6B03F 		.word	1068549879
 6086 0068 0000E03F 		.word	1071644672
 6087              		.cfi_endproc
 6088              	.LFE100:
 6089              		.size	FSCalc, .-FSCalc
 6090              		.section	.text.MaxSpdCalc,"ax",%progbits
 6091              		.align	2
 6092              		.global	MaxSpdCalc
 6093              		.thumb
 6094              		.thumb_func
 6095              		.type	MaxSpdCalc, %function
 6096              	MaxSpdCalc:
 6097              	.LFB101:
1482:L6470.c       **** unsigned long MaxSpdCalc(float stepsPerSec)
1483:L6470.c       **** {
 6098              		.loc 1 1483 0
 6099              		.cfi_startproc
 6100              		@ args = 0, pretend = 0, frame = 16
 6101              		@ frame_needed = 1, uses_anonymous_args = 0
 6102 0000 90B5     		push	{r4, r7, lr}
 6103              		.cfi_def_cfa_offset 12
 6104              		.cfi_offset 4, -12
 6105              		.cfi_offset 7, -8
 6106              		.cfi_offset 14, -4
 6107 0002 85B0     		sub	sp, sp, #20
 6108              		.cfi_def_cfa_offset 32
 6109 0004 00AF     		add	r7, sp, #0
 6110              		.cfi_def_cfa_register 7
 6111 0006 7860     		str	r0, [r7, #4]	@ float
1484:L6470.c       ****   float temp = stepsPerSec * .065536;
 6112              		.loc 1 1484 0
 6113 0008 7868     		ldr	r0, [r7, #4]	@ float
 6114 000a FFF7FEFF 		bl	__aeabi_f2d
 6115 000e 10A3     		adr	r3, .L291
 6116 0010 D3E90023 		ldrd	r2, [r3]
 6117 0014 FFF7FEFF 		bl	__aeabi_dmul
 6118 0018 0346     		mov	r3, r0
 6119 001a 0C46     		mov	r4, r1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 141


 6120 001c 1846     		mov	r0, r3
 6121 001e 2146     		mov	r1, r4
 6122 0020 FFF7FEFF 		bl	__aeabi_d2f
 6123 0024 0346     		mov	r3, r0
 6124 0026 FB60     		str	r3, [r7, #12]	@ float
1485:L6470.c       ****   if ( (unsigned long) (temp) > 0x000003FF) return 0x000003FF;
 6125              		.loc 1 1485 0
 6126 0028 F868     		ldr	r0, [r7, #12]	@ float
 6127 002a FFF7FEFF 		bl	__aeabi_f2uiz
 6128 002e 0346     		mov	r3, r0
 6129 0030 B3F5806F 		cmp	r3, #1024
 6130 0034 02D3     		bcc	.L289
 6131              		.loc 1 1485 0 is_stmt 0 discriminator 1
 6132 0036 40F2FF33 		movw	r3, #1023
 6133 003a 03E0     		b	.L290
 6134              	.L289:
1486:L6470.c       ****   else
1487:L6470.c       ****     return (unsigned long) (temp);
 6135              		.loc 1 1487 0 is_stmt 1
 6136 003c F868     		ldr	r0, [r7, #12]	@ float
 6137 003e FFF7FEFF 		bl	__aeabi_f2uiz
 6138 0042 0346     		mov	r3, r0
 6139              	.L290:
1488:L6470.c       **** }
 6140              		.loc 1 1488 0
 6141 0044 1846     		mov	r0, r3
 6142 0046 1437     		adds	r7, r7, #20
 6143              		.cfi_def_cfa_offset 12
 6144 0048 BD46     		mov	sp, r7
 6145              		.cfi_def_cfa_register 13
 6146              		@ sp needed
 6147 004a 90BD     		pop	{r4, r7, pc}
 6148              	.L292:
 6149 004c AFF30080 		.align	3
 6150              	.L291:
 6151 0050 8DEDB5A0 		.word	-1598689907
 6152 0054 F7C6B03F 		.word	1068549879
 6153              		.cfi_endproc
 6154              	.LFE101:
 6155              		.size	MaxSpdCalc, .-MaxSpdCalc
 6156              		.section	.text.Data_To_Transfer,"ax",%progbits
 6157              		.align	2
 6158              		.global	Data_To_Transfer
 6159              		.thumb
 6160              		.thumb_func
 6161              		.type	Data_To_Transfer, %function
 6162              	Data_To_Transfer:
 6163              	.LFB102:
1489:L6470.c       **** uint8_t Data_To_Transfer(uint8_t data)
1490:L6470.c       **** {   
 6164              		.loc 1 1490 0
 6165              		.cfi_startproc
 6166              		@ args = 0, pretend = 0, frame = 8
 6167              		@ frame_needed = 1, uses_anonymous_args = 0
 6168 0000 80B5     		push	{r7, lr}
 6169              		.cfi_def_cfa_offset 8
 6170              		.cfi_offset 7, -8
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 142


 6171              		.cfi_offset 14, -4
 6172 0002 82B0     		sub	sp, sp, #8
 6173              		.cfi_def_cfa_offset 16
 6174 0004 00AF     		add	r7, sp, #0
 6175              		.cfi_def_cfa_register 7
 6176 0006 0346     		mov	r3, r0
 6177 0008 FB71     		strb	r3, [r7, #7]
1491:L6470.c       ****     SPIM_WriteTxData(data);
 6178              		.loc 1 1491 0
 6179 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6180 000c 1846     		mov	r0, r3
 6181 000e FFF7FEFF 		bl	SPIM_WriteTxData
1492:L6470.c       ****     CyDelayUs(10);
 6182              		.loc 1 1492 0
 6183 0012 0A20     		movs	r0, #10
 6184 0014 FFF7FEFF 		bl	CyDelayUs
1493:L6470.c       ****     return 1;
 6185              		.loc 1 1493 0
 6186 0018 0123     		movs	r3, #1
1494:L6470.c       **** }
 6187              		.loc 1 1494 0
 6188 001a 1846     		mov	r0, r3
 6189 001c 0837     		adds	r7, r7, #8
 6190              		.cfi_def_cfa_offset 8
 6191 001e BD46     		mov	sp, r7
 6192              		.cfi_def_cfa_register 13
 6193              		@ sp needed
 6194 0020 80BD     		pop	{r7, pc}
 6195              		.cfi_endproc
 6196              	.LFE102:
 6197              		.size	Data_To_Transfer, .-Data_To_Transfer
 6198 0022 00BF     		.section	.text.SetParam,"ax",%progbits
 6199              		.align	2
 6200              		.global	SetParam
 6201              		.thumb
 6202              		.thumb_func
 6203              		.type	SetParam, %function
 6204              	SetParam:
 6205              	.LFB103:
1495:L6470.c       **** void SetParam(uint8_t param, unsigned long value)
1496:L6470.c       **** {
 6206              		.loc 1 1496 0
 6207              		.cfi_startproc
 6208              		@ args = 0, pretend = 0, frame = 8
 6209              		@ frame_needed = 1, uses_anonymous_args = 0
 6210 0000 80B5     		push	{r7, lr}
 6211              		.cfi_def_cfa_offset 8
 6212              		.cfi_offset 7, -8
 6213              		.cfi_offset 14, -4
 6214 0002 82B0     		sub	sp, sp, #8
 6215              		.cfi_def_cfa_offset 16
 6216 0004 00AF     		add	r7, sp, #0
 6217              		.cfi_def_cfa_register 7
 6218 0006 0346     		mov	r3, r0
 6219 0008 3960     		str	r1, [r7]
 6220 000a FB71     		strb	r3, [r7, #7]
1497:L6470.c       ****   Data_To_Transfer(x_SET_PARAM | param);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 143


 6221              		.loc 1 1497 0
 6222 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6223 000e 1846     		mov	r0, r3
 6224 0010 FFF7FEFF 		bl	Data_To_Transfer
1498:L6470.c       ****   ParamHandler(param, value);
 6225              		.loc 1 1498 0
 6226 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6227 0016 3968     		ldr	r1, [r7]
 6228 0018 1846     		mov	r0, r3
 6229 001a FFF7FEFF 		bl	ParamHandler
1499:L6470.c       **** }
 6230              		.loc 1 1499 0
 6231 001e 00BF     		nop
 6232 0020 0837     		adds	r7, r7, #8
 6233              		.cfi_def_cfa_offset 8
 6234 0022 BD46     		mov	sp, r7
 6235              		.cfi_def_cfa_register 13
 6236              		@ sp needed
 6237 0024 80BD     		pop	{r7, pc}
 6238              		.cfi_endproc
 6239              	.LFE103:
 6240              		.size	SetParam, .-SetParam
 6241              		.global	__aeabi_ui2d
 6242              		.global	__aeabi_d2iz
 6243 0026 00BF     		.section	.text.Move,"ax",%progbits
 6244              		.align	2
 6245              		.global	Move
 6246              		.thumb
 6247              		.thumb_func
 6248              		.type	Move, %function
 6249              	Move:
 6250              	.LFB104:
1500:L6470.c       **** void Move(uint8_t dir, unsigned long n_step)
1501:L6470.c       **** {
 6251              		.loc 1 1501 0
 6252              		.cfi_startproc
 6253              		@ args = 0, pretend = 0, frame = 8
 6254              		@ frame_needed = 1, uses_anonymous_args = 0
 6255 0000 90B5     		push	{r4, r7, lr}
 6256              		.cfi_def_cfa_offset 12
 6257              		.cfi_offset 4, -12
 6258              		.cfi_offset 7, -8
 6259              		.cfi_offset 14, -4
 6260 0002 83B0     		sub	sp, sp, #12
 6261              		.cfi_def_cfa_offset 24
 6262 0004 00AF     		add	r7, sp, #0
 6263              		.cfi_def_cfa_register 7
 6264 0006 0346     		mov	r3, r0
 6265 0008 3960     		str	r1, [r7]
 6266 000a FB71     		strb	r3, [r7, #7]
1502:L6470.c       ****     CyDelayUs(1);
 6267              		.loc 1 1502 0
 6268 000c 0120     		movs	r0, #1
 6269 000e FFF7FEFF 		bl	CyDelayUs
1503:L6470.c       ****     n_step = (int)(n_step * Step_Multiplier);
 6270              		.loc 1 1503 0
 6271 0012 3868     		ldr	r0, [r7]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 144


 6272 0014 FFF7FEFF 		bl	__aeabi_ui2d
 6273 0018 19A3     		adr	r3, .L298
 6274 001a D3E90023 		ldrd	r2, [r3]
 6275 001e FFF7FEFF 		bl	__aeabi_dmul
 6276 0022 0346     		mov	r3, r0
 6277 0024 0C46     		mov	r4, r1
 6278 0026 1846     		mov	r0, r3
 6279 0028 2146     		mov	r1, r4
 6280 002a FFF7FEFF 		bl	__aeabi_d2iz
 6281 002e 0346     		mov	r3, r0
 6282 0030 3B60     		str	r3, [r7]
1504:L6470.c       ****     Data_To_Transfer(x_MOVE | dir);
 6283              		.loc 1 1504 0
 6284 0032 FB79     		ldrb	r3, [r7, #7]
 6285 0034 43F04003 		orr	r3, r3, #64
 6286 0038 DBB2     		uxtb	r3, r3
 6287 003a 1846     		mov	r0, r3
 6288 003c FFF7FEFF 		bl	Data_To_Transfer
1505:L6470.c       ****     if (n_step > 0x3FFFFF) n_step = 0x3FFFFF;
 6289              		.loc 1 1505 0
 6290 0040 3B68     		ldr	r3, [r7]
 6291 0042 B3F5800F 		cmp	r3, #4194304
 6292 0046 01D3     		bcc	.L297
 6293              		.loc 1 1505 0 is_stmt 0 discriminator 1
 6294 0048 0F4B     		ldr	r3, .L298+8
 6295 004a 3B60     		str	r3, [r7]
 6296              	.L297:
1506:L6470.c       ****     Data_To_Transfer((uint8_t)(n_step >> 16));
 6297              		.loc 1 1506 0 is_stmt 1
 6298 004c 3B68     		ldr	r3, [r7]
 6299 004e 1B0C     		lsrs	r3, r3, #16
 6300 0050 DBB2     		uxtb	r3, r3
 6301 0052 1846     		mov	r0, r3
 6302 0054 FFF7FEFF 		bl	Data_To_Transfer
1507:L6470.c       ****     Data_To_Transfer((uint8_t)(n_step >> 8));
 6303              		.loc 1 1507 0
 6304 0058 3B68     		ldr	r3, [r7]
 6305 005a 1B0A     		lsrs	r3, r3, #8
 6306 005c DBB2     		uxtb	r3, r3
 6307 005e 1846     		mov	r0, r3
 6308 0060 FFF7FEFF 		bl	Data_To_Transfer
1508:L6470.c       ****     Data_To_Transfer((uint8_t)(n_step));
 6309              		.loc 1 1508 0
 6310 0064 3B68     		ldr	r3, [r7]
 6311 0066 DBB2     		uxtb	r3, r3
 6312 0068 1846     		mov	r0, r3
 6313 006a FFF7FEFF 		bl	Data_To_Transfer
1509:L6470.c       ****     CyDelayUs(1);
 6314              		.loc 1 1509 0
 6315 006e 0120     		movs	r0, #1
 6316 0070 FFF7FEFF 		bl	CyDelayUs
1510:L6470.c       **** }
 6317              		.loc 1 1510 0
 6318 0074 00BF     		nop
 6319 0076 0C37     		adds	r7, r7, #12
 6320              		.cfi_def_cfa_offset 12
 6321 0078 BD46     		mov	sp, r7
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 145


 6322              		.cfi_def_cfa_register 13
 6323              		@ sp needed
 6324 007a 90BD     		pop	{r4, r7, pc}
 6325              	.L299:
 6326 007c AFF30080 		.align	3
 6327              	.L298:
 6328 0080 9A999999 		.word	-1717986918
 6329 0084 9999F93F 		.word	1073322393
 6330 0088 FFFF3F00 		.word	4194303
 6331              		.cfi_endproc
 6332              	.LFE104:
 6333              		.size	Move, .-Move
 6334              		.section	.text.goTo,"ax",%progbits
 6335              		.align	2
 6336              		.global	goTo
 6337              		.thumb
 6338              		.thumb_func
 6339              		.type	goTo, %function
 6340              	goTo:
 6341              	.LFB105:
1511:L6470.c       **** void goTo(long pos)
1512:L6470.c       **** {
 6342              		.loc 1 1512 0
 6343              		.cfi_startproc
 6344              		@ args = 0, pretend = 0, frame = 8
 6345              		@ frame_needed = 1, uses_anonymous_args = 0
 6346 0000 80B5     		push	{r7, lr}
 6347              		.cfi_def_cfa_offset 8
 6348              		.cfi_offset 7, -8
 6349              		.cfi_offset 14, -4
 6350 0002 82B0     		sub	sp, sp, #8
 6351              		.cfi_def_cfa_offset 16
 6352 0004 00AF     		add	r7, sp, #0
 6353              		.cfi_def_cfa_register 7
 6354 0006 7860     		str	r0, [r7, #4]
1513:L6470.c       ****     Data_To_Transfer(x_GOTO);
 6355              		.loc 1 1513 0
 6356 0008 6020     		movs	r0, #96
 6357 000a FFF7FEFF 		bl	Data_To_Transfer
1514:L6470.c       ****     if (pos > 0x3FFFFF) pos = 0x3FFFFF;
 6358              		.loc 1 1514 0
 6359 000e 7B68     		ldr	r3, [r7, #4]
 6360 0010 B3F5800F 		cmp	r3, #4194304
 6361 0014 01DB     		blt	.L301
 6362              		.loc 1 1514 0 is_stmt 0 discriminator 1
 6363 0016 0B4B     		ldr	r3, .L302
 6364 0018 7B60     		str	r3, [r7, #4]
 6365              	.L301:
1515:L6470.c       ****     Data_To_Transfer((uint8_t)(pos >> 16));
 6366              		.loc 1 1515 0 is_stmt 1
 6367 001a 7B68     		ldr	r3, [r7, #4]
 6368 001c 1B14     		asrs	r3, r3, #16
 6369 001e DBB2     		uxtb	r3, r3
 6370 0020 1846     		mov	r0, r3
 6371 0022 FFF7FEFF 		bl	Data_To_Transfer
1516:L6470.c       ****     Data_To_Transfer((uint8_t)(pos >> 8));
 6372              		.loc 1 1516 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 146


 6373 0026 7B68     		ldr	r3, [r7, #4]
 6374 0028 1B12     		asrs	r3, r3, #8
 6375 002a DBB2     		uxtb	r3, r3
 6376 002c 1846     		mov	r0, r3
 6377 002e FFF7FEFF 		bl	Data_To_Transfer
1517:L6470.c       ****     Data_To_Transfer((uint8_t)(pos));
 6378              		.loc 1 1517 0
 6379 0032 7B68     		ldr	r3, [r7, #4]
 6380 0034 DBB2     		uxtb	r3, r3
 6381 0036 1846     		mov	r0, r3
 6382 0038 FFF7FEFF 		bl	Data_To_Transfer
1518:L6470.c       **** }
 6383              		.loc 1 1518 0
 6384 003c 00BF     		nop
 6385 003e 0837     		adds	r7, r7, #8
 6386              		.cfi_def_cfa_offset 8
 6387 0040 BD46     		mov	sp, r7
 6388              		.cfi_def_cfa_register 13
 6389              		@ sp needed
 6390 0042 80BD     		pop	{r7, pc}
 6391              	.L303:
 6392              		.align	2
 6393              	.L302:
 6394 0044 FFFF3F00 		.word	4194303
 6395              		.cfi_endproc
 6396              	.LFE105:
 6397              		.size	goTo, .-goTo
 6398              		.section	.text.ResetPos,"ax",%progbits
 6399              		.align	2
 6400              		.global	ResetPos
 6401              		.thumb
 6402              		.thumb_func
 6403              		.type	ResetPos, %function
 6404              	ResetPos:
 6405              	.LFB106:
1519:L6470.c       **** void ResetPos()
1520:L6470.c       **** {
 6406              		.loc 1 1520 0
 6407              		.cfi_startproc
 6408              		@ args = 0, pretend = 0, frame = 0
 6409              		@ frame_needed = 1, uses_anonymous_args = 0
 6410 0000 80B5     		push	{r7, lr}
 6411              		.cfi_def_cfa_offset 8
 6412              		.cfi_offset 7, -8
 6413              		.cfi_offset 14, -4
 6414 0002 00AF     		add	r7, sp, #0
 6415              		.cfi_def_cfa_register 7
1521:L6470.c       ****     Data_To_Transfer(x_RESET_POS);
 6416              		.loc 1 1521 0
 6417 0004 D820     		movs	r0, #216
 6418 0006 FFF7FEFF 		bl	Data_To_Transfer
1522:L6470.c       **** }
 6419              		.loc 1 1522 0
 6420 000a 00BF     		nop
 6421 000c 80BD     		pop	{r7, pc}
 6422              		.cfi_endproc
 6423              	.LFE106:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 147


 6424              		.size	ResetPos, .-ResetPos
 6425 000e 00BF     		.section	.text.GetStatus,"ax",%progbits
 6426              		.align	2
 6427              		.global	GetStatus
 6428              		.thumb
 6429              		.thumb_func
 6430              		.type	GetStatus, %function
 6431              	GetStatus:
 6432              	.LFB107:
1523:L6470.c       **** int GetStatus()
1524:L6470.c       **** {
 6433              		.loc 1 1524 0
 6434              		.cfi_startproc
 6435              		@ args = 0, pretend = 0, frame = 8
 6436              		@ frame_needed = 1, uses_anonymous_args = 0
 6437 0000 80B5     		push	{r7, lr}
 6438              		.cfi_def_cfa_offset 8
 6439              		.cfi_offset 7, -8
 6440              		.cfi_offset 14, -4
 6441 0002 82B0     		sub	sp, sp, #8
 6442              		.cfi_def_cfa_offset 16
 6443 0004 00AF     		add	r7, sp, #0
 6444              		.cfi_def_cfa_register 7
1525:L6470.c       ****   int temp = 0;
 6445              		.loc 1 1525 0
 6446 0006 0023     		movs	r3, #0
 6447 0008 7B60     		str	r3, [r7, #4]
1526:L6470.c       ****   Data_To_Transfer(x_GET_STATUS);
 6448              		.loc 1 1526 0
 6449 000a D020     		movs	r0, #208
 6450 000c FFF7FEFF 		bl	Data_To_Transfer
1527:L6470.c       ****   temp = Data_To_Transfer(0) << 8;
 6451              		.loc 1 1527 0
 6452 0010 0020     		movs	r0, #0
 6453 0012 FFF7FEFF 		bl	Data_To_Transfer
 6454 0016 0346     		mov	r3, r0
 6455 0018 1B02     		lsls	r3, r3, #8
 6456 001a 7B60     		str	r3, [r7, #4]
1528:L6470.c       ****   temp |= Data_To_Transfer(0);
 6457              		.loc 1 1528 0
 6458 001c 0020     		movs	r0, #0
 6459 001e FFF7FEFF 		bl	Data_To_Transfer
 6460 0022 0346     		mov	r3, r0
 6461 0024 1A46     		mov	r2, r3
 6462 0026 7B68     		ldr	r3, [r7, #4]
 6463 0028 1343     		orrs	r3, r3, r2
 6464 002a 7B60     		str	r3, [r7, #4]
1529:L6470.c       ****   return temp;
 6465              		.loc 1 1529 0
 6466 002c 7B68     		ldr	r3, [r7, #4]
1530:L6470.c       **** }
 6467              		.loc 1 1530 0
 6468 002e 1846     		mov	r0, r3
 6469 0030 0837     		adds	r7, r7, #8
 6470              		.cfi_def_cfa_offset 8
 6471 0032 BD46     		mov	sp, r7
 6472              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 148


 6473              		@ sp needed
 6474 0034 80BD     		pop	{r7, pc}
 6475              		.cfi_endproc
 6476              	.LFE107:
 6477              		.size	GetStatus, .-GetStatus
 6478 0036 00BF     		.section	.text.ParamHandler,"ax",%progbits
 6479              		.align	2
 6480              		.global	ParamHandler
 6481              		.thumb
 6482              		.thumb_func
 6483              		.type	ParamHandler, %function
 6484              	ParamHandler:
 6485              	.LFB108:
1531:L6470.c       **** unsigned long ParamHandler(uint8_t param, unsigned long value)
1532:L6470.c       **** {
 6486              		.loc 1 1532 0
 6487              		.cfi_startproc
 6488              		@ args = 0, pretend = 0, frame = 16
 6489              		@ frame_needed = 1, uses_anonymous_args = 0
 6490 0000 80B5     		push	{r7, lr}
 6491              		.cfi_def_cfa_offset 8
 6492              		.cfi_offset 7, -8
 6493              		.cfi_offset 14, -4
 6494 0002 84B0     		sub	sp, sp, #16
 6495              		.cfi_def_cfa_offset 24
 6496 0004 00AF     		add	r7, sp, #0
 6497              		.cfi_def_cfa_register 7
 6498 0006 0346     		mov	r3, r0
 6499 0008 3960     		str	r1, [r7]
 6500 000a FB71     		strb	r3, [r7, #7]
1533:L6470.c       ****   unsigned long ret_val = 0;   // This is a temp for the value to return.
 6501              		.loc 1 1533 0
 6502 000c 0023     		movs	r3, #0
 6503 000e FB60     		str	r3, [r7, #12]
1534:L6470.c       ****   // This switch structure handles the appropriate action for each register.
1535:L6470.c       ****   //  This is necessary since not all registers are of the same length, either
1536:L6470.c       ****   //  bit-wise or uint8_t-wise, so we want to make sure we mask out any spurious
1537:L6470.c       ****   //  bits and do the right number of transfers. That is handled by the x_Param()
1538:L6470.c       ****   //  function, in most cases, but for 1-uint8_t or smaller transfers, we call
1539:L6470.c       ****   //  Data_To_Transfer() directly.
1540:L6470.c       ****   switch (param)
 6504              		.loc 1 1540 0
 6505 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6506 0012 013B     		subs	r3, r3, #1
 6507 0014 182B     		cmp	r3, #24
 6508 0016 00F2EC80 		bhi	.L308
 6509 001a 01A2     		adr	r2, .L310
 6510 001c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6511              		.p2align 2
 6512              	.L310:
 6513 0020 85000000 		.word	.L309+1
 6514 0024 91000000 		.word	.L311+1
 6515 0028 9D000000 		.word	.L312+1
 6516 002c A9000000 		.word	.L313+1
 6517 0030 B5000000 		.word	.L314+1
 6518 0034 C1000000 		.word	.L315+1
 6519 0038 CD000000 		.word	.L316+1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 149


 6520 003c D9000000 		.word	.L317+1
 6521 0040 F1000000 		.word	.L318+1
 6522 0044 01010000 		.word	.L319+1
 6523 0048 11010000 		.word	.L320+1
 6524 004c 21010000 		.word	.L321+1
 6525 0050 31010000 		.word	.L322+1
 6526 0054 3D010000 		.word	.L323+1
 6527 0058 4D010000 		.word	.L324+1
 6528 005c 5D010000 		.word	.L325+1
 6529 0060 6D010000 		.word	.L326+1
 6530 0064 83010000 		.word	.L327+1
 6531 0068 8F010000 		.word	.L328+1
 6532 006c A5010000 		.word	.L329+1
 6533 0070 E5000000 		.word	.L330+1
 6534 0074 BB010000 		.word	.L331+1
 6535 0078 CB010000 		.word	.L332+1
 6536 007c DB010000 		.word	.L333+1
 6537 0080 E7010000 		.word	.L334+1
 6538              		.p2align 1
 6539              	.L309:
1541:L6470.c       ****   {
1542:L6470.c       ****     // ABS_POS is the current absolute offset from home. It is a 22 bit number expressed
1543:L6470.c       ****     //  in two's complement. At power up, this value is 0. It cannot be written when
1544:L6470.c       ****     //  the motor is running, but at any other time, it can be updated to change the
1545:L6470.c       ****     //  interpreted position of the motor.
1546:L6470.c       ****     case x_ABS_POS:
1547:L6470.c       ****       ret_val = Param(value, 22);
 6540              		.loc 1 1547 0
 6541 0084 1621     		movs	r1, #22
 6542 0086 3868     		ldr	r0, [r7]
 6543 0088 FFF7FEFF 		bl	Param
 6544 008c F860     		str	r0, [r7, #12]
1548:L6470.c       ****       break;
 6545              		.loc 1 1548 0
 6546 008e B8E0     		b	.L335
 6547              	.L311:
1549:L6470.c       ****     // EL_POS is the current electrical position in the step generation cycle. It can
1550:L6470.c       ****     //  be set when the motor is not in motion. Value is 0 on power up.
1551:L6470.c       ****     case x_EL_POS:
1552:L6470.c       ****       ret_val = Param(value, 9);
 6548              		.loc 1 1552 0
 6549 0090 0921     		movs	r1, #9
 6550 0092 3868     		ldr	r0, [r7]
 6551 0094 FFF7FEFF 		bl	Param
 6552 0098 F860     		str	r0, [r7, #12]
1553:L6470.c       ****       break;
 6553              		.loc 1 1553 0
 6554 009a B2E0     		b	.L335
 6555              	.L312:
1554:L6470.c       ****     // MARK is a second position other than 0 that the motor can be told to go to. As
1555:L6470.c       ****     //  with ABS_POS, it is 22-bit two's complement. Value is 0 on power up.
1556:L6470.c       ****     case x_MARK:
1557:L6470.c       ****       ret_val = Param(value, 22);
 6556              		.loc 1 1557 0
 6557 009c 1621     		movs	r1, #22
 6558 009e 3868     		ldr	r0, [r7]
 6559 00a0 FFF7FEFF 		bl	Param
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 150


 6560 00a4 F860     		str	r0, [r7, #12]
1558:L6470.c       ****       break;
 6561              		.loc 1 1558 0
 6562 00a6 ACE0     		b	.L335
 6563              	.L313:
1559:L6470.c       ****     // SPEED contains information about the current speed. It is read-only. It does
1560:L6470.c       ****     //  NOT provide direction information.
1561:L6470.c       ****     case x_SPEED:
1562:L6470.c       ****       ret_val = Param(0, 20);
 6564              		.loc 1 1562 0
 6565 00a8 1421     		movs	r1, #20
 6566 00aa 0020     		movs	r0, #0
 6567 00ac FFF7FEFF 		bl	Param
 6568 00b0 F860     		str	r0, [r7, #12]
1563:L6470.c       ****       break;
 6569              		.loc 1 1563 0
 6570 00b2 A6E0     		b	.L335
 6571              	.L314:
1564:L6470.c       ****     // ACC and DEC set the acceleration and deceleration rates. Set ACC to 0xFFF
1565:L6470.c       ****     //  to get infinite acceleration/decelaeration- there is no way to get infinite
1566:L6470.c       ****     //  deceleration w/o infinite acceleration (except the HARD STOP command).
1567:L6470.c       ****     //  Cannot be written while motor is running. Both default to 0x08A on power up.
1568:L6470.c       ****     // AccCalc() and DecCalc() functions exist to convert steps/s/s values into
1569:L6470.c       ****     //  12-bit values for these two registers.
1570:L6470.c       ****     case x_ACC:
1571:L6470.c       ****       ret_val = Param(value, 12);
 6572              		.loc 1 1571 0
 6573 00b4 0C21     		movs	r1, #12
 6574 00b6 3868     		ldr	r0, [r7]
 6575 00b8 FFF7FEFF 		bl	Param
 6576 00bc F860     		str	r0, [r7, #12]
1572:L6470.c       ****       break;
 6577              		.loc 1 1572 0
 6578 00be A0E0     		b	.L335
 6579              	.L315:
1573:L6470.c       ****     case x_DEC:
1574:L6470.c       ****       ret_val = Param(value, 12);
 6580              		.loc 1 1574 0
 6581 00c0 0C21     		movs	r1, #12
 6582 00c2 3868     		ldr	r0, [r7]
 6583 00c4 FFF7FEFF 		bl	Param
 6584 00c8 F860     		str	r0, [r7, #12]
1575:L6470.c       ****       break;
 6585              		.loc 1 1575 0
 6586 00ca 9AE0     		b	.L335
 6587              	.L316:
1576:L6470.c       ****     // MAX_SPEED is just what it says- any command which attempts to set the speed
1577:L6470.c       ****     //  of the motor above this value will simply cause the motor to turn at this
1578:L6470.c       ****     //  speed. Value is 0x041 on power up.
1579:L6470.c       ****     // MaxSpdCalc() function exists to convert steps/s value into a 10-bit value
1580:L6470.c       ****     //  for this register.
1581:L6470.c       ****     case x_MAX_SPEED:
1582:L6470.c       ****       ret_val = Param(value, 10);
 6588              		.loc 1 1582 0
 6589 00cc 0A21     		movs	r1, #10
 6590 00ce 3868     		ldr	r0, [r7]
 6591 00d0 FFF7FEFF 		bl	Param
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 151


 6592 00d4 F860     		str	r0, [r7, #12]
1583:L6470.c       ****       break;
 6593              		.loc 1 1583 0
 6594 00d6 94E0     		b	.L335
 6595              	.L317:
1584:L6470.c       ****     // MIN_SPEED controls two things- the activation of the low-speed optimization
1585:L6470.c       ****     //  feature and the lowest speed the motor will be allowed to operate at. LSPD_OPT
1586:L6470.c       ****     //  is the 13th bit, and when it is set, the minimum allowed speed is automatically
1587:L6470.c       ****     //  set to zero. This value is 0 on startup.
1588:L6470.c       ****     // MinSpdCalc() function exists to convert steps/s value into a 12-bit value for this
1589:L6470.c       ****     //  register. SetLSPDOpt() function exists to enable/disable the optimization feature.
1590:L6470.c       ****     case x_MIN_SPEED:
1591:L6470.c       ****       ret_val = Param(value, 12);
 6596              		.loc 1 1591 0
 6597 00d8 0C21     		movs	r1, #12
 6598 00da 3868     		ldr	r0, [r7]
 6599 00dc FFF7FEFF 		bl	Param
 6600 00e0 F860     		str	r0, [r7, #12]
1592:L6470.c       ****       break;
 6601              		.loc 1 1592 0
 6602 00e2 8EE0     		b	.L335
 6603              	.L330:
1593:L6470.c       ****     // FS_SPD register contains a threshold value above which microstepping is disabled
1594:L6470.c       ****     //  and the x operates in full-step mode. Defaults to 0x027 on power up.
1595:L6470.c       ****     // FSCalc() function exists to convert steps/s value into 10-bit integer for this
1596:L6470.c       ****     //  register.
1597:L6470.c       ****     case x_FS_SPD:
1598:L6470.c       ****       ret_val = Param(value, 10);
 6604              		.loc 1 1598 0
 6605 00e4 0A21     		movs	r1, #10
 6606 00e6 3868     		ldr	r0, [r7]
 6607 00e8 FFF7FEFF 		bl	Param
 6608 00ec F860     		str	r0, [r7, #12]
1599:L6470.c       ****       break;
 6609              		.loc 1 1599 0
 6610 00ee 88E0     		b	.L335
 6611              	.L318:
1600:L6470.c       ****     // KVAL is the maximum voltage of the PWM outputs. These 8-bit values are ratiometric
1601:L6470.c       ****     //  representations: 255 for full output voltage, 128 for half, etc. Default is 0x29.
1602:L6470.c       ****     // The implications of different KVAL settings is too complex to dig into here, but
1603:L6470.c       ****     //  it will usually work to max the value for RUN, ACC, and DEC. Maxing the value for
1604:L6470.c       ****     //  HOLD may result in excessive power dissipation when the motor is not running.
1605:L6470.c       ****     case x_KVAL_HOLD:
1606:L6470.c       ****       ret_val = Data_To_Transfer((uint8_t)value);
 6612              		.loc 1 1606 0
 6613 00f0 3B68     		ldr	r3, [r7]
 6614 00f2 DBB2     		uxtb	r3, r3
 6615 00f4 1846     		mov	r0, r3
 6616 00f6 FFF7FEFF 		bl	Data_To_Transfer
 6617 00fa 0346     		mov	r3, r0
 6618 00fc FB60     		str	r3, [r7, #12]
1607:L6470.c       ****       break;
 6619              		.loc 1 1607 0
 6620 00fe 80E0     		b	.L335
 6621              	.L319:
1608:L6470.c       ****     case x_KVAL_RUN:
1609:L6470.c       ****       ret_val = Data_To_Transfer((uint8_t)value);
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 152


 6622              		.loc 1 1609 0
 6623 0100 3B68     		ldr	r3, [r7]
 6624 0102 DBB2     		uxtb	r3, r3
 6625 0104 1846     		mov	r0, r3
 6626 0106 FFF7FEFF 		bl	Data_To_Transfer
 6627 010a 0346     		mov	r3, r0
 6628 010c FB60     		str	r3, [r7, #12]
1610:L6470.c       ****       break;
 6629              		.loc 1 1610 0
 6630 010e 78E0     		b	.L335
 6631              	.L320:
1611:L6470.c       ****     case x_KVAL_ACC:
1612:L6470.c       ****       ret_val = Data_To_Transfer((uint8_t)value);
 6632              		.loc 1 1612 0
 6633 0110 3B68     		ldr	r3, [r7]
 6634 0112 DBB2     		uxtb	r3, r3
 6635 0114 1846     		mov	r0, r3
 6636 0116 FFF7FEFF 		bl	Data_To_Transfer
 6637 011a 0346     		mov	r3, r0
 6638 011c FB60     		str	r3, [r7, #12]
1613:L6470.c       ****       break;
 6639              		.loc 1 1613 0
 6640 011e 70E0     		b	.L335
 6641              	.L321:
1614:L6470.c       ****     case x_KVAL_DEC:
1615:L6470.c       ****       ret_val = Data_To_Transfer((uint8_t)value);
 6642              		.loc 1 1615 0
 6643 0120 3B68     		ldr	r3, [r7]
 6644 0122 DBB2     		uxtb	r3, r3
 6645 0124 1846     		mov	r0, r3
 6646 0126 FFF7FEFF 		bl	Data_To_Transfer
 6647 012a 0346     		mov	r3, r0
 6648 012c FB60     		str	r3, [r7, #12]
1616:L6470.c       ****       break;
 6649              		.loc 1 1616 0
 6650 012e 68E0     		b	.L335
 6651              	.L322:
1617:L6470.c       ****     // INT_SPD, ST_SLP, FN_SLP_ACC and FN_SLP_DEC are all related to the back EMF
1618:L6470.c       ****     //  compensation functionality. Please see the datasheet for details of this
1619:L6470.c       ****     //  function- it is too complex to discuss here. Default values seem to work
1620:L6470.c       ****     //  well enough.
1621:L6470.c       ****     case x_INT_SPD:
1622:L6470.c       ****       ret_val = Param(value, 14);
 6652              		.loc 1 1622 0
 6653 0130 0E21     		movs	r1, #14
 6654 0132 3868     		ldr	r0, [r7]
 6655 0134 FFF7FEFF 		bl	Param
 6656 0138 F860     		str	r0, [r7, #12]
1623:L6470.c       ****       break;
 6657              		.loc 1 1623 0
 6658 013a 62E0     		b	.L335
 6659              	.L323:
1624:L6470.c       ****     case x_ST_SLP:
1625:L6470.c       ****       ret_val = Data_To_Transfer((uint8_t)value);
 6660              		.loc 1 1625 0
 6661 013c 3B68     		ldr	r3, [r7]
 6662 013e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 153


 6663 0140 1846     		mov	r0, r3
 6664 0142 FFF7FEFF 		bl	Data_To_Transfer
 6665 0146 0346     		mov	r3, r0
 6666 0148 FB60     		str	r3, [r7, #12]
1626:L6470.c       ****       break;
 6667              		.loc 1 1626 0
 6668 014a 5AE0     		b	.L335
 6669              	.L324:
1627:L6470.c       ****     case x_FN_SLP_ACC:
1628:L6470.c       ****       ret_val = Data_To_Transfer((uint8_t)value);
 6670              		.loc 1 1628 0
 6671 014c 3B68     		ldr	r3, [r7]
 6672 014e DBB2     		uxtb	r3, r3
 6673 0150 1846     		mov	r0, r3
 6674 0152 FFF7FEFF 		bl	Data_To_Transfer
 6675 0156 0346     		mov	r3, r0
 6676 0158 FB60     		str	r3, [r7, #12]
1629:L6470.c       ****       break;
 6677              		.loc 1 1629 0
 6678 015a 52E0     		b	.L335
 6679              	.L325:
1630:L6470.c       ****     case x_FN_SLP_DEC:
1631:L6470.c       ****       ret_val = Data_To_Transfer((uint8_t)value);
 6680              		.loc 1 1631 0
 6681 015c 3B68     		ldr	r3, [r7]
 6682 015e DBB2     		uxtb	r3, r3
 6683 0160 1846     		mov	r0, r3
 6684 0162 FFF7FEFF 		bl	Data_To_Transfer
 6685 0166 0346     		mov	r3, r0
 6686 0168 FB60     		str	r3, [r7, #12]
1632:L6470.c       ****       break;
 6687              		.loc 1 1632 0
 6688 016a 4AE0     		b	.L335
 6689              	.L326:
1633:L6470.c       ****     // K_THERM is motor winding thermal drift compensation. Please see the datasheet
1634:L6470.c       ****     //  for full details on operation- the default value should be okay for most users.
1635:L6470.c       ****     case x_K_THERM:
1636:L6470.c       ****       ret_val = Data_To_Transfer((uint8_t)value & 0x0F);
 6690              		.loc 1 1636 0
 6691 016c 3B68     		ldr	r3, [r7]
 6692 016e DBB2     		uxtb	r3, r3
 6693 0170 03F00F03 		and	r3, r3, #15
 6694 0174 DBB2     		uxtb	r3, r3
 6695 0176 1846     		mov	r0, r3
 6696 0178 FFF7FEFF 		bl	Data_To_Transfer
 6697 017c 0346     		mov	r3, r0
 6698 017e FB60     		str	r3, [r7, #12]
1637:L6470.c       ****       break;
 6699              		.loc 1 1637 0
 6700 0180 3FE0     		b	.L335
 6701              	.L327:
1638:L6470.c       ****     // ADC_OUT is a read-only register containing the result of the ADC measurements.
1639:L6470.c       ****     //  This is less useful than it sounds; see the datasheet for more information.
1640:L6470.c       ****     case x_ADC_OUT:
1641:L6470.c       ****       ret_val = Data_To_Transfer(0);
 6702              		.loc 1 1641 0
 6703 0182 0020     		movs	r0, #0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 154


 6704 0184 FFF7FEFF 		bl	Data_To_Transfer
 6705 0188 0346     		mov	r3, r0
 6706 018a FB60     		str	r3, [r7, #12]
1642:L6470.c       ****       break;
 6707              		.loc 1 1642 0
 6708 018c 39E0     		b	.L335
 6709              	.L328:
1643:L6470.c       ****     // Set the overcurrent threshold. Ranges from 375mA to 6A in steps of 375mA.
1644:L6470.c       ****     //  A set of defined constants is provided for the user's convenience. Default
1645:L6470.c       ****     //  value is 3.375A- 0x08. This is a 4-bit value.
1646:L6470.c       ****     case x_OCD_TH:
1647:L6470.c       ****       ret_val = Data_To_Transfer((uint8_t)value & 0x0F);
 6710              		.loc 1 1647 0
 6711 018e 3B68     		ldr	r3, [r7]
 6712 0190 DBB2     		uxtb	r3, r3
 6713 0192 03F00F03 		and	r3, r3, #15
 6714 0196 DBB2     		uxtb	r3, r3
 6715 0198 1846     		mov	r0, r3
 6716 019a FFF7FEFF 		bl	Data_To_Transfer
 6717 019e 0346     		mov	r3, r0
 6718 01a0 FB60     		str	r3, [r7, #12]
1648:L6470.c       ****       break;
 6719              		.loc 1 1648 0
 6720 01a2 2EE0     		b	.L335
 6721              	.L329:
1649:L6470.c       ****     // Stall current threshold. Defaults to 0x40, or 2.03A. Value is from 31.25mA to
1650:L6470.c       ****     //  4A in 31.25mA steps. This is a 7-bit value.
1651:L6470.c       ****     case x_STALL_TH:
1652:L6470.c       ****       ret_val = Data_To_Transfer((uint8_t)value & 0x7F);
 6722              		.loc 1 1652 0
 6723 01a4 3B68     		ldr	r3, [r7]
 6724 01a6 DBB2     		uxtb	r3, r3
 6725 01a8 03F07F03 		and	r3, r3, #127
 6726 01ac DBB2     		uxtb	r3, r3
 6727 01ae 1846     		mov	r0, r3
 6728 01b0 FFF7FEFF 		bl	Data_To_Transfer
 6729 01b4 0346     		mov	r3, r0
 6730 01b6 FB60     		str	r3, [r7, #12]
1653:L6470.c       ****       break;
 6731              		.loc 1 1653 0
 6732 01b8 23E0     		b	.L335
 6733              	.L331:
1654:L6470.c       ****     // STEP_MODE controls the microstepping settings, as well as the generation of an
1655:L6470.c       ****     //  output signal from the x. Bits 2:0 control the number of microsteps per
1656:L6470.c       ****     //  step the part will generate. Bit 7 controls whether the BUSY/SYNC pin outputs
1657:L6470.c       ****     //  a BUSY signal or a step synchronization signal. Bits 6:4 control the frequency
1658:L6470.c       ****     //  of the output signal relative to the full-step frequency; see datasheet for
1659:L6470.c       ****     //  that relationship as it is too complex to reproduce here.
1660:L6470.c       ****     // Most likely, only the microsteps per step value will be needed; there is a set
1661:L6470.c       ****     //  of constants provided for ease of use of these values.
1662:L6470.c       ****     case x_STEP_MODE:
1663:L6470.c       ****       ret_val = Data_To_Transfer((uint8_t)value);
 6734              		.loc 1 1663 0
 6735 01ba 3B68     		ldr	r3, [r7]
 6736 01bc DBB2     		uxtb	r3, r3
 6737 01be 1846     		mov	r0, r3
 6738 01c0 FFF7FEFF 		bl	Data_To_Transfer
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 155


 6739 01c4 0346     		mov	r3, r0
 6740 01c6 FB60     		str	r3, [r7, #12]
1664:L6470.c       ****       break;
 6741              		.loc 1 1664 0
 6742 01c8 1BE0     		b	.L335
 6743              	.L332:
1665:L6470.c       ****     // ALARM_EN controls which alarms will cause the FLAG pin to fall. A set of constants
1666:L6470.c       ****     //  is provided to make this easy to interpret. By default, ALL alarms will trigger the
1667:L6470.c       ****     //  FLAG pin.
1668:L6470.c       ****     case x_ALARM_EN:
1669:L6470.c       ****       ret_val = Data_To_Transfer((uint8_t)value);
 6744              		.loc 1 1669 0
 6745 01ca 3B68     		ldr	r3, [r7]
 6746 01cc DBB2     		uxtb	r3, r3
 6747 01ce 1846     		mov	r0, r3
 6748 01d0 FFF7FEFF 		bl	Data_To_Transfer
 6749 01d4 0346     		mov	r3, r0
 6750 01d6 FB60     		str	r3, [r7, #12]
1670:L6470.c       ****       break;
 6751              		.loc 1 1670 0
 6752 01d8 13E0     		b	.L335
 6753              	.L333:
1671:L6470.c       ****     // CONFIG contains some assorted configuration bits and fields. A fairly comprehensive
1672:L6470.c       ****     //  set of reasonably self-explanatory constants is provided, but users should refer
1673:L6470.c       ****     //  to the datasheet before modifying the contents of this register to be certain they
1674:L6470.c       ****     //  understand the implications of their modifications. Value on boot is 0x2E88; this
1675:L6470.c       ****     //  can be a useful way to verify proper start up and operation of the x chip.
1676:L6470.c       ****     case x_CONFIG:
1677:L6470.c       ****       ret_val = Param(value, 16);
 6754              		.loc 1 1677 0
 6755 01da 1021     		movs	r1, #16
 6756 01dc 3868     		ldr	r0, [r7]
 6757 01de FFF7FEFF 		bl	Param
 6758 01e2 F860     		str	r0, [r7, #12]
1678:L6470.c       ****       break;
 6759              		.loc 1 1678 0
 6760 01e4 0DE0     		b	.L335
 6761              	.L334:
1679:L6470.c       ****     // STATUS contains read-only information about the current condition of the chip. A
1680:L6470.c       ****     //  comprehensive set of constants for masking and testing this register is provided, but
1681:L6470.c       ****     //  users should refer to the datasheet to ensure that they fully understand each one of
1682:L6470.c       ****     //  the bits in the register.
1683:L6470.c       ****     case x_STATUS:  // STATUS is a read-only register
1684:L6470.c       ****       ret_val = Param(0, 16);
 6762              		.loc 1 1684 0
 6763 01e6 1021     		movs	r1, #16
 6764 01e8 0020     		movs	r0, #0
 6765 01ea FFF7FEFF 		bl	Param
 6766 01ee F860     		str	r0, [r7, #12]
1685:L6470.c       ****       break;
 6767              		.loc 1 1685 0
 6768 01f0 07E0     		b	.L335
 6769              	.L308:
1686:L6470.c       ****     default:
1687:L6470.c       ****       ret_val = Data_To_Transfer((uint8_t)(value));
 6770              		.loc 1 1687 0
 6771 01f2 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 156


 6772 01f4 DBB2     		uxtb	r3, r3
 6773 01f6 1846     		mov	r0, r3
 6774 01f8 FFF7FEFF 		bl	Data_To_Transfer
 6775 01fc 0346     		mov	r3, r0
 6776 01fe FB60     		str	r3, [r7, #12]
1688:L6470.c       ****       break;
 6777              		.loc 1 1688 0
 6778 0200 00BF     		nop
 6779              	.L335:
1689:L6470.c       ****   }
1690:L6470.c       ****   return ret_val;
 6780              		.loc 1 1690 0
 6781 0202 FB68     		ldr	r3, [r7, #12]
1691:L6470.c       **** }
 6782              		.loc 1 1691 0
 6783 0204 1846     		mov	r0, r3
 6784 0206 1037     		adds	r7, r7, #16
 6785              		.cfi_def_cfa_offset 8
 6786 0208 BD46     		mov	sp, r7
 6787              		.cfi_def_cfa_register 13
 6788              		@ sp needed
 6789 020a 80BD     		pop	{r7, pc}
 6790              		.cfi_endproc
 6791              	.LFE108:
 6792              		.size	ParamHandler, .-ParamHandler
 6793              		.section	.text.Param,"ax",%progbits
 6794              		.align	2
 6795              		.global	Param
 6796              		.thumb
 6797              		.thumb_func
 6798              		.type	Param, %function
 6799              	Param:
 6800              	.LFB109:
1692:L6470.c       **** unsigned long Param(unsigned long value, uint8_t bit_len)
1693:L6470.c       **** {
 6801              		.loc 1 1693 0
 6802              		.cfi_startproc
 6803              		@ args = 0, pretend = 0, frame = 24
 6804              		@ frame_needed = 1, uses_anonymous_args = 0
 6805 0000 80B5     		push	{r7, lr}
 6806              		.cfi_def_cfa_offset 8
 6807              		.cfi_offset 7, -8
 6808              		.cfi_offset 14, -4
 6809 0002 86B0     		sub	sp, sp, #24
 6810              		.cfi_def_cfa_offset 32
 6811 0004 00AF     		add	r7, sp, #0
 6812              		.cfi_def_cfa_register 7
 6813 0006 7860     		str	r0, [r7, #4]
 6814 0008 0B46     		mov	r3, r1
 6815 000a FB70     		strb	r3, [r7, #3]
1694:L6470.c       ****   unsigned long ret_val = 0;      // We'll return this to generalize this function
 6816              		.loc 1 1694 0
 6817 000c 0023     		movs	r3, #0
 6818 000e 7B61     		str	r3, [r7, #20]
1695:L6470.c       ****   //  for both read and write of registers.
1696:L6470.c       ****   uint8_t byte_len = bit_len / 8;    // How many BYTES do we have?
 6819              		.loc 1 1696 0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 157


 6820 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 6821 0012 DB08     		lsrs	r3, r3, #3
 6822 0014 FB74     		strb	r3, [r7, #19]
1697:L6470.c       ****   if (bit_len % 8 > 0) byte_len++; // Make sure not to lose any partial byte values.
 6823              		.loc 1 1697 0
 6824 0016 FB78     		ldrb	r3, [r7, #3]
 6825 0018 03F00703 		and	r3, r3, #7
 6826 001c DBB2     		uxtb	r3, r3
 6827 001e 002B     		cmp	r3, #0
 6828 0020 02D0     		beq	.L338
 6829              		.loc 1 1697 0 is_stmt 0 discriminator 1
 6830 0022 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 6831 0024 0133     		adds	r3, r3, #1
 6832 0026 FB74     		strb	r3, [r7, #19]
 6833              	.L338:
1698:L6470.c       ****   // Let's make sure our value has no spurious bits set, and if the value was too
1699:L6470.c       ****   //  high, max it out.
1700:L6470.c       ****   unsigned long mask = 0xffffffff >> (32 - bit_len);
 6834              		.loc 1 1700 0 is_stmt 1
 6835 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 6836 002a C3F12003 		rsb	r3, r3, #32
 6837 002e 4FF0FF32 		mov	r2, #-1
 6838 0032 22FA03F3 		lsr	r3, r2, r3
 6839 0036 FB60     		str	r3, [r7, #12]
1701:L6470.c       ****   if (value > mask) value = mask;
 6840              		.loc 1 1701 0
 6841 0038 7A68     		ldr	r2, [r7, #4]
 6842 003a FB68     		ldr	r3, [r7, #12]
 6843 003c 9A42     		cmp	r2, r3
 6844 003e 01D9     		bls	.L339
 6845              		.loc 1 1701 0 is_stmt 0 discriminator 1
 6846 0040 FB68     		ldr	r3, [r7, #12]
 6847 0042 7B60     		str	r3, [r7, #4]
 6848              	.L339:
1702:L6470.c       ****   // The following three if statements handle the various possible byte length
1703:L6470.c       ****   //  transfers- it'll be no less than 1 but no more than 3 bytes of data.
1704:L6470.c       ****   // Data_To_Transfer() sends a byte out through SPI and returns a byte received
1705:L6470.c       ****   //  over SPI- when calling it, we typecast a shifted version of the masked
1706:L6470.c       ****   //  value, then we shift the received value back by the same amount and
1707:L6470.c       ****   //  store it until return time.
1708:L6470.c       ****   if (byte_len == 3) {
 6849              		.loc 1 1708 0 is_stmt 1
 6850 0044 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 6851 0046 032B     		cmp	r3, #3
 6852 0048 0BD1     		bne	.L340
1709:L6470.c       ****     ret_val |= Data_To_Transfer((uint8_t)(value >> 16)) << 16;
 6853              		.loc 1 1709 0
 6854 004a 7B68     		ldr	r3, [r7, #4]
 6855 004c 1B0C     		lsrs	r3, r3, #16
 6856 004e DBB2     		uxtb	r3, r3
 6857 0050 1846     		mov	r0, r3
 6858 0052 FFF7FEFF 		bl	Data_To_Transfer
 6859 0056 0346     		mov	r3, r0
 6860 0058 1B04     		lsls	r3, r3, #16
 6861 005a 1A46     		mov	r2, r3
 6862 005c 7B69     		ldr	r3, [r7, #20]
 6863 005e 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 158


 6864 0060 7B61     		str	r3, [r7, #20]
 6865              	.L340:
1710:L6470.c       ****     //Serial.println(ret_val, HEX);
1711:L6470.c       ****   }
1712:L6470.c       ****   if (byte_len >= 2) {
 6866              		.loc 1 1712 0
 6867 0062 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 6868 0064 012B     		cmp	r3, #1
 6869 0066 0BD9     		bls	.L341
1713:L6470.c       ****     ret_val |= Data_To_Transfer((uint8_t)(value >> 8)) << 8;
 6870              		.loc 1 1713 0
 6871 0068 7B68     		ldr	r3, [r7, #4]
 6872 006a 1B0A     		lsrs	r3, r3, #8
 6873 006c DBB2     		uxtb	r3, r3
 6874 006e 1846     		mov	r0, r3
 6875 0070 FFF7FEFF 		bl	Data_To_Transfer
 6876 0074 0346     		mov	r3, r0
 6877 0076 1B02     		lsls	r3, r3, #8
 6878 0078 1A46     		mov	r2, r3
 6879 007a 7B69     		ldr	r3, [r7, #20]
 6880 007c 1343     		orrs	r3, r3, r2
 6881 007e 7B61     		str	r3, [r7, #20]
 6882              	.L341:
1714:L6470.c       ****     //Serial.println(ret_val, HEX);
1715:L6470.c       ****   }
1716:L6470.c       ****   if (byte_len >= 1) {
 6883              		.loc 1 1716 0
 6884 0080 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 6885 0082 002B     		cmp	r3, #0
 6886 0084 09D0     		beq	.L342
1717:L6470.c       ****     ret_val |= Data_To_Transfer((uint8_t)value);
 6887              		.loc 1 1717 0
 6888 0086 7B68     		ldr	r3, [r7, #4]
 6889 0088 DBB2     		uxtb	r3, r3
 6890 008a 1846     		mov	r0, r3
 6891 008c FFF7FEFF 		bl	Data_To_Transfer
 6892 0090 0346     		mov	r3, r0
 6893 0092 1A46     		mov	r2, r3
 6894 0094 7B69     		ldr	r3, [r7, #20]
 6895 0096 1343     		orrs	r3, r3, r2
 6896 0098 7B61     		str	r3, [r7, #20]
 6897              	.L342:
1718:L6470.c       ****   }
1719:L6470.c       ****   // Return the received values. Mask off any unnecessary bits, just for
1720:L6470.c       ****   //  the sake of thoroughness- we don't EXPECT to see anything outside
1721:L6470.c       ****   //  the bit length range but better to be safe than sorry.
1722:L6470.c       ****   return (ret_val & mask);
 6898              		.loc 1 1722 0
 6899 009a 7A69     		ldr	r2, [r7, #20]
 6900 009c FB68     		ldr	r3, [r7, #12]
 6901 009e 1340     		ands	r3, r3, r2
1723:L6470.c       **** }
 6902              		.loc 1 1723 0
 6903 00a0 1846     		mov	r0, r3
 6904 00a2 1837     		adds	r7, r7, #24
 6905              		.cfi_def_cfa_offset 8
 6906 00a4 BD46     		mov	sp, r7
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 159


 6907              		.cfi_def_cfa_register 13
 6908              		@ sp needed
 6909 00a6 80BD     		pop	{r7, pc}
 6910              		.cfi_endproc
 6911              	.LFE109:
 6912              		.size	Param, .-Param
 6913              		.bss
 6914              	dont_Execute_1st_Time.8895:
 6915 0054 00       		.space	1
 6916              		.data
 6917              		.align	2
 6918              		.type	Str_Last_One.8912, %object
 6919              		.size	Str_Last_One.8912, 13
 6920              	Str_Last_One.8912:
 6921 001c 53686F6E 		.ascii	"ShonitV2.2\015\012\000"
 6921      69745632 
 6921      2E320D0A 
 6921      00
 6922              		.text
 6923              	.Letext0:
 6924              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 6925              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 6926              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 6927              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 6928              		.file 6 "variables.h"
 6929              		.section	.debug_info,"",%progbits
 6930              	.Ldebug_info0:
 6931 0000 530A0000 		.4byte	0xa53
 6932 0004 0400     		.2byte	0x4
 6933 0006 00000000 		.4byte	.Ldebug_abbrev0
 6934 000a 04       		.byte	0x4
 6935 000b 01       		.uleb128 0x1
 6936 000c 18010000 		.4byte	.LASF129
 6937 0010 0C       		.byte	0xc
 6938 0011 32040000 		.4byte	.LASF130
 6939 0015 E2020000 		.4byte	.LASF131
 6940 0019 00000000 		.4byte	.Ldebug_ranges0+0
 6941 001d 00000000 		.4byte	0
 6942 0021 00000000 		.4byte	.Ldebug_line0
 6943 0025 02       		.uleb128 0x2
 6944 0026 01       		.byte	0x1
 6945 0027 06       		.byte	0x6
 6946 0028 97070000 		.4byte	.LASF0
 6947 002c 03       		.uleb128 0x3
 6948 002d B2060000 		.4byte	.LASF4
 6949 0031 02       		.byte	0x2
 6950 0032 1D       		.byte	0x1d
 6951 0033 37000000 		.4byte	0x37
 6952 0037 02       		.uleb128 0x2
 6953 0038 01       		.byte	0x1
 6954 0039 08       		.byte	0x8
 6955 003a 42070000 		.4byte	.LASF1
 6956 003e 02       		.uleb128 0x2
 6957 003f 02       		.byte	0x2
 6958 0040 05       		.byte	0x5
 6959 0041 03060000 		.4byte	.LASF2
 6960 0045 02       		.uleb128 0x2
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 160


 6961 0046 02       		.byte	0x2
 6962 0047 07       		.byte	0x7
 6963 0048 A3070000 		.4byte	.LASF3
 6964 004c 03       		.uleb128 0x3
 6965 004d AF000000 		.4byte	.LASF5
 6966 0051 02       		.byte	0x2
 6967 0052 3F       		.byte	0x3f
 6968 0053 57000000 		.4byte	0x57
 6969 0057 02       		.uleb128 0x2
 6970 0058 04       		.byte	0x4
 6971 0059 05       		.byte	0x5
 6972 005a 1C060000 		.4byte	.LASF6
 6973 005e 02       		.uleb128 0x2
 6974 005f 04       		.byte	0x4
 6975 0060 07       		.byte	0x7
 6976 0061 F1060000 		.4byte	.LASF7
 6977 0065 02       		.uleb128 0x2
 6978 0066 08       		.byte	0x8
 6979 0067 05       		.byte	0x5
 6980 0068 D7040000 		.4byte	.LASF8
 6981 006c 02       		.uleb128 0x2
 6982 006d 08       		.byte	0x8
 6983 006e 07       		.byte	0x7
 6984 006f 54020000 		.4byte	.LASF9
 6985 0073 04       		.uleb128 0x4
 6986 0074 04       		.byte	0x4
 6987 0075 05       		.byte	0x5
 6988 0076 696E7400 		.ascii	"int\000"
 6989 007a 02       		.uleb128 0x2
 6990 007b 04       		.byte	0x4
 6991 007c 07       		.byte	0x7
 6992 007d A2000000 		.4byte	.LASF10
 6993 0081 03       		.uleb128 0x3
 6994 0082 76040000 		.4byte	.LASF11
 6995 0086 03       		.byte	0x3
 6996 0087 18       		.byte	0x18
 6997 0088 2C000000 		.4byte	0x2c
 6998 008c 03       		.uleb128 0x3
 6999 008d 26070000 		.4byte	.LASF12
 7000 0091 03       		.byte	0x3
 7001 0092 2C       		.byte	0x2c
 7002 0093 4C000000 		.4byte	0x4c
 7003 0097 05       		.uleb128 0x5
 7004 0098 F6070000 		.4byte	.LASF13
 7005 009c 04       		.byte	0x4
 7006 009d E401     		.2byte	0x1e4
 7007 009f 37000000 		.4byte	0x37
 7008 00a3 05       		.uleb128 0x5
 7009 00a4 65040000 		.4byte	.LASF14
 7010 00a8 04       		.byte	0x4
 7011 00a9 E501     		.2byte	0x1e5
 7012 00ab 45000000 		.4byte	0x45
 7013 00af 05       		.uleb128 0x5
 7014 00b0 71040000 		.4byte	.LASF15
 7015 00b4 04       		.byte	0x4
 7016 00b5 E701     		.2byte	0x1e7
 7017 00b7 25000000 		.4byte	0x25
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 161


 7018 00bb 05       		.uleb128 0x5
 7019 00bc 48020000 		.4byte	.LASF16
 7020 00c0 04       		.byte	0x4
 7021 00c1 E901     		.2byte	0x1e9
 7022 00c3 57000000 		.4byte	0x57
 7023 00c7 02       		.uleb128 0x2
 7024 00c8 04       		.byte	0x4
 7025 00c9 04       		.byte	0x4
 7026 00ca 42020000 		.4byte	.LASF17
 7027 00ce 02       		.uleb128 0x2
 7028 00cf 08       		.byte	0x8
 7029 00d0 04       		.byte	0x4
 7030 00d1 FC070000 		.4byte	.LASF18
 7031 00d5 02       		.uleb128 0x2
 7032 00d6 01       		.byte	0x1
 7033 00d7 08       		.byte	0x8
 7034 00d8 4A040000 		.4byte	.LASF19
 7035 00dc 02       		.uleb128 0x2
 7036 00dd 08       		.byte	0x8
 7037 00de 04       		.byte	0x4
 7038 00df D4050000 		.4byte	.LASF20
 7039 00e3 02       		.uleb128 0x2
 7040 00e4 04       		.byte	0x4
 7041 00e5 07       		.byte	0x7
 7042 00e6 E8060000 		.4byte	.LASF21
 7043 00ea 06       		.uleb128 0x6
 7044 00eb 04       		.byte	0x4
 7045 00ec D5000000 		.4byte	0xd5
 7046 00f0 07       		.uleb128 0x7
 7047 00f1 60080000 		.4byte	.LASF22
 7048 00f5 01       		.byte	0x1
 7049 00f6 37       		.byte	0x37
 7050 00f7 73000000 		.4byte	0x73
 7051 00fb 00000000 		.4byte	.LFB64
 7052 00ff 4C020000 		.4byte	.LFE64-.LFB64
 7053 0103 01       		.uleb128 0x1
 7054 0104 9C       		.byte	0x9c
 7055 0105 18010000 		.4byte	0x118
 7056 0109 08       		.uleb128 0x8
 7057 010a CB000000 		.4byte	.LASF24
 7058 010e 01       		.byte	0x1
 7059 010f 3E       		.byte	0x3e
 7060 0110 BB000000 		.4byte	0xbb
 7061 0114 02       		.uleb128 0x2
 7062 0115 91       		.byte	0x91
 7063 0116 74       		.sleb128 -12
 7064 0117 00       		.byte	0
 7065 0118 07       		.uleb128 0x7
 7066 0119 67080000 		.4byte	.LASF23
 7067 011d 01       		.byte	0x1
 7068 011e A4       		.byte	0xa4
 7069 011f 73000000 		.4byte	0x73
 7070 0123 00000000 		.4byte	.LFB65
 7071 0127 28020000 		.4byte	.LFE65-.LFB65
 7072 012b 01       		.uleb128 0x1
 7073 012c 9C       		.byte	0x9c
 7074 012d 40010000 		.4byte	0x140
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 162


 7075 0131 08       		.uleb128 0x8
 7076 0132 7F000000 		.4byte	.LASF25
 7077 0136 01       		.byte	0x1
 7078 0137 AB       		.byte	0xab
 7079 0138 BB000000 		.4byte	0xbb
 7080 013c 02       		.uleb128 0x2
 7081 013d 91       		.byte	0x91
 7082 013e 74       		.sleb128 -12
 7083 013f 00       		.byte	0
 7084 0140 09       		.uleb128 0x9
 7085 0141 6E080000 		.4byte	.LASF26
 7086 0145 01       		.byte	0x1
 7087 0146 0801     		.2byte	0x108
 7088 0148 73000000 		.4byte	0x73
 7089 014c 00000000 		.4byte	.LFB66
 7090 0150 10020000 		.4byte	.LFE66-.LFB66
 7091 0154 01       		.uleb128 0x1
 7092 0155 9C       		.byte	0x9c
 7093 0156 79010000 		.4byte	0x179
 7094 015a 0A       		.uleb128 0xa
 7095 015b 27000000 		.4byte	.LASF27
 7096 015f 01       		.byte	0x1
 7097 0160 1201     		.2byte	0x112
 7098 0162 BB000000 		.4byte	0xbb
 7099 0166 02       		.uleb128 0x2
 7100 0167 91       		.byte	0x91
 7101 0168 70       		.sleb128 -16
 7102 0169 0A       		.uleb128 0xa
 7103 016a EF010000 		.4byte	.LASF28
 7104 016e 01       		.byte	0x1
 7105 016f 1301     		.2byte	0x113
 7106 0171 73000000 		.4byte	0x73
 7107 0175 02       		.uleb128 0x2
 7108 0176 91       		.byte	0x91
 7109 0177 74       		.sleb128 -12
 7110 0178 00       		.byte	0
 7111 0179 0B       		.uleb128 0xb
 7112 017a 00000000 		.4byte	.LASF29
 7113 017e 01       		.byte	0x1
 7114 017f 6A01     		.2byte	0x16a
 7115 0181 73000000 		.4byte	0x73
 7116 0185 00000000 		.4byte	.LFB67
 7117 0189 DC010000 		.4byte	.LFE67-.LFB67
 7118 018d 01       		.uleb128 0x1
 7119 018e 9C       		.byte	0x9c
 7120 018f A3010000 		.4byte	0x1a3
 7121 0193 0C       		.uleb128 0xc
 7122 0194 78060000 		.4byte	.LASF31
 7123 0198 01       		.byte	0x1
 7124 0199 6A01     		.2byte	0x16a
 7125 019b BB000000 		.4byte	0xbb
 7126 019f 02       		.uleb128 0x2
 7127 01a0 91       		.byte	0x91
 7128 01a1 74       		.sleb128 -12
 7129 01a2 00       		.byte	0
 7130 01a3 0B       		.uleb128 0xb
 7131 01a4 07000000 		.4byte	.LASF30
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 163


 7132 01a8 01       		.byte	0x1
 7133 01a9 B001     		.2byte	0x1b0
 7134 01ab 73000000 		.4byte	0x73
 7135 01af 00000000 		.4byte	.LFB68
 7136 01b3 F0010000 		.4byte	.LFE68-.LFB68
 7137 01b7 01       		.uleb128 0x1
 7138 01b8 9C       		.byte	0x9c
 7139 01b9 CD010000 		.4byte	0x1cd
 7140 01bd 0C       		.uleb128 0xc
 7141 01be 73050000 		.4byte	.LASF32
 7142 01c2 01       		.byte	0x1
 7143 01c3 B001     		.2byte	0x1b0
 7144 01c5 BB000000 		.4byte	0xbb
 7145 01c9 02       		.uleb128 0x2
 7146 01ca 91       		.byte	0x91
 7147 01cb 74       		.sleb128 -12
 7148 01cc 00       		.byte	0
 7149 01cd 0B       		.uleb128 0xb
 7150 01ce 0E000000 		.4byte	.LASF33
 7151 01d2 01       		.byte	0x1
 7152 01d3 F601     		.2byte	0x1f6
 7153 01d5 73000000 		.4byte	0x73
 7154 01d9 00000000 		.4byte	.LFB69
 7155 01dd D8010000 		.4byte	.LFE69-.LFB69
 7156 01e1 01       		.uleb128 0x1
 7157 01e2 9C       		.byte	0x9c
 7158 01e3 F7010000 		.4byte	0x1f7
 7159 01e7 0C       		.uleb128 0xc
 7160 01e8 80030000 		.4byte	.LASF34
 7161 01ec 01       		.byte	0x1
 7162 01ed F601     		.2byte	0x1f6
 7163 01ef BB000000 		.4byte	0xbb
 7164 01f3 02       		.uleb128 0x2
 7165 01f4 91       		.byte	0x91
 7166 01f5 74       		.sleb128 -12
 7167 01f6 00       		.byte	0
 7168 01f7 0B       		.uleb128 0xb
 7169 01f8 B9000000 		.4byte	.LASF35
 7170 01fc 01       		.byte	0x1
 7171 01fd 3A02     		.2byte	0x23a
 7172 01ff 21020000 		.4byte	0x221
 7173 0203 00000000 		.4byte	.LFB70
 7174 0207 1C010000 		.4byte	.LFE70-.LFB70
 7175 020b 01       		.uleb128 0x1
 7176 020c 9C       		.byte	0x9c
 7177 020d 21020000 		.4byte	0x221
 7178 0211 0C       		.uleb128 0xc
 7179 0212 DE010000 		.4byte	.LASF36
 7180 0216 01       		.byte	0x1
 7181 0217 3A02     		.2byte	0x23a
 7182 0219 73000000 		.4byte	0x73
 7183 021d 02       		.uleb128 0x2
 7184 021e 91       		.byte	0x91
 7185 021f 74       		.sleb128 -12
 7186 0220 00       		.byte	0
 7187 0221 02       		.uleb128 0x2
 7188 0222 01       		.byte	0x1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 164


 7189 0223 02       		.byte	0x2
 7190 0224 A4030000 		.4byte	.LASF37
 7191 0228 0B       		.uleb128 0xb
 7192 0229 6D000000 		.4byte	.LASF38
 7193 022d 01       		.byte	0x1
 7194 022e 6302     		.2byte	0x263
 7195 0230 21020000 		.4byte	0x221
 7196 0234 00000000 		.4byte	.LFB71
 7197 0238 14010000 		.4byte	.LFE71-.LFB71
 7198 023c 01       		.uleb128 0x1
 7199 023d 9C       		.byte	0x9c
 7200 023e 52020000 		.4byte	0x252
 7201 0242 0C       		.uleb128 0xc
 7202 0243 DE010000 		.4byte	.LASF36
 7203 0247 01       		.byte	0x1
 7204 0248 6302     		.2byte	0x263
 7205 024a 73000000 		.4byte	0x73
 7206 024e 02       		.uleb128 0x2
 7207 024f 91       		.byte	0x91
 7208 0250 74       		.sleb128 -12
 7209 0251 00       		.byte	0
 7210 0252 0B       		.uleb128 0xb
 7211 0253 15000000 		.4byte	.LASF39
 7212 0257 01       		.byte	0x1
 7213 0258 8402     		.2byte	0x284
 7214 025a 21020000 		.4byte	0x221
 7215 025e 00000000 		.4byte	.LFB72
 7216 0262 D4000000 		.4byte	.LFE72-.LFB72
 7217 0266 01       		.uleb128 0x1
 7218 0267 9C       		.byte	0x9c
 7219 0268 7C020000 		.4byte	0x27c
 7220 026c 0C       		.uleb128 0xc
 7221 026d DE010000 		.4byte	.LASF36
 7222 0271 01       		.byte	0x1
 7223 0272 8402     		.2byte	0x284
 7224 0274 73000000 		.4byte	0x73
 7225 0278 02       		.uleb128 0x2
 7226 0279 91       		.byte	0x91
 7227 027a 74       		.sleb128 -12
 7228 027b 00       		.byte	0
 7229 027c 0D       		.uleb128 0xd
 7230 027d BC060000 		.4byte	.LASF40
 7231 0281 01       		.byte	0x1
 7232 0282 A502     		.2byte	0x2a5
 7233 0284 21020000 		.4byte	0x221
 7234 0288 00000000 		.4byte	.LFB73
 7235 028c A4000000 		.4byte	.LFE73-.LFB73
 7236 0290 01       		.uleb128 0x1
 7237 0291 9C       		.byte	0x9c
 7238 0292 0E       		.uleb128 0xe
 7239 0293 AF050000 		.4byte	.LASF42
 7240 0297 01       		.byte	0x1
 7241 0298 C402     		.2byte	0x2c4
 7242 029a 00000000 		.4byte	.LFB74
 7243 029e 12000000 		.4byte	.LFE74-.LFB74
 7244 02a2 01       		.uleb128 0x1
 7245 02a3 9C       		.byte	0x9c
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 165


 7246 02a4 0D       		.uleb128 0xd
 7247 02a5 AC040000 		.4byte	.LASF41
 7248 02a9 01       		.byte	0x1
 7249 02aa C902     		.2byte	0x2c9
 7250 02ac 73000000 		.4byte	0x73
 7251 02b0 00000000 		.4byte	.LFB75
 7252 02b4 98000000 		.4byte	.LFE75-.LFB75
 7253 02b8 01       		.uleb128 0x1
 7254 02b9 9C       		.byte	0x9c
 7255 02ba 0E       		.uleb128 0xe
 7256 02bb 0D040000 		.4byte	.LASF43
 7257 02bf 01       		.byte	0x1
 7258 02c0 D602     		.2byte	0x2d6
 7259 02c2 00000000 		.4byte	.LFB76
 7260 02c6 3C000000 		.4byte	.LFE76-.LFB76
 7261 02ca 01       		.uleb128 0x1
 7262 02cb 9C       		.byte	0x9c
 7263 02cc 0F       		.uleb128 0xf
 7264 02cd 88050000 		.4byte	.LASF44
 7265 02d1 01       		.byte	0x1
 7266 02d2 E002     		.2byte	0x2e0
 7267 02d4 00000000 		.4byte	.LFB77
 7268 02d8 28000000 		.4byte	.LFE77-.LFB77
 7269 02dc 01       		.uleb128 0x1
 7270 02dd 9C       		.byte	0x9c
 7271 02de F2020000 		.4byte	0x2f2
 7272 02e2 0C       		.uleb128 0xc
 7273 02e3 3C020000 		.4byte	.LASF45
 7274 02e7 01       		.byte	0x1
 7275 02e8 E002     		.2byte	0x2e0
 7276 02ea 73000000 		.4byte	0x73
 7277 02ee 02       		.uleb128 0x2
 7278 02ef 91       		.byte	0x91
 7279 02f0 74       		.sleb128 -12
 7280 02f1 00       		.byte	0
 7281 02f2 0F       		.uleb128 0xf
 7282 02f3 99050000 		.4byte	.LASF46
 7283 02f7 01       		.byte	0x1
 7284 02f8 E602     		.2byte	0x2e6
 7285 02fa 00000000 		.4byte	.LFB78
 7286 02fe 28000000 		.4byte	.LFE78-.LFB78
 7287 0302 01       		.uleb128 0x1
 7288 0303 9C       		.byte	0x9c
 7289 0304 18030000 		.4byte	0x318
 7290 0308 0C       		.uleb128 0xc
 7291 0309 3C020000 		.4byte	.LASF45
 7292 030d 01       		.byte	0x1
 7293 030e E602     		.2byte	0x2e6
 7294 0310 73000000 		.4byte	0x73
 7295 0314 02       		.uleb128 0x2
 7296 0315 91       		.byte	0x91
 7297 0316 74       		.sleb128 -12
 7298 0317 00       		.byte	0
 7299 0318 0E       		.uleb128 0xe
 7300 0319 CF060000 		.4byte	.LASF47
 7301 031d 01       		.byte	0x1
 7302 031e EC02     		.2byte	0x2ec
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 166


 7303 0320 00000000 		.4byte	.LFB79
 7304 0324 64000000 		.4byte	.LFE79-.LFB79
 7305 0328 01       		.uleb128 0x1
 7306 0329 9C       		.byte	0x9c
 7307 032a 0E       		.uleb128 0xe
 7308 032b 8D060000 		.4byte	.LASF48
 7309 032f 01       		.byte	0x1
 7310 0330 FE02     		.2byte	0x2fe
 7311 0332 00000000 		.4byte	.LFB80
 7312 0336 34020000 		.4byte	.LFE80-.LFB80
 7313 033a 01       		.uleb128 0x1
 7314 033b 9C       		.byte	0x9c
 7315 033c 0F       		.uleb128 0xf
 7316 033d C1070000 		.4byte	.LASF49
 7317 0341 01       		.byte	0x1
 7318 0342 4E03     		.2byte	0x34e
 7319 0344 00000000 		.4byte	.LFB81
 7320 0348 20040000 		.4byte	.LFE81-.LFB81
 7321 034c 01       		.uleb128 0x1
 7322 034d 9C       		.byte	0x9c
 7323 034e 62030000 		.4byte	0x362
 7324 0352 0C       		.uleb128 0xc
 7325 0353 A7020000 		.4byte	.LASF50
 7326 0357 01       		.byte	0x1
 7327 0358 4E03     		.2byte	0x34e
 7328 035a 73000000 		.4byte	0x73
 7329 035e 02       		.uleb128 0x2
 7330 035f 91       		.byte	0x91
 7331 0360 74       		.sleb128 -12
 7332 0361 00       		.byte	0
 7333 0362 0E       		.uleb128 0xe
 7334 0363 3A000000 		.4byte	.LASF51
 7335 0367 01       		.byte	0x1
 7336 0368 2204     		.2byte	0x422
 7337 036a 00000000 		.4byte	.LFB82
 7338 036e F2000000 		.4byte	.LFE82-.LFB82
 7339 0372 01       		.uleb128 0x1
 7340 0373 9C       		.byte	0x9c
 7341 0374 0E       		.uleb128 0xe
 7342 0375 C9020000 		.4byte	.LASF52
 7343 0379 01       		.byte	0x1
 7344 037a 4D04     		.2byte	0x44d
 7345 037c 00000000 		.4byte	.LFB83
 7346 0380 40000000 		.4byte	.LFE83-.LFB83
 7347 0384 01       		.uleb128 0x1
 7348 0385 9C       		.byte	0x9c
 7349 0386 10       		.uleb128 0x10
 7350 0387 FD030000 		.4byte	.LASF54
 7351 038b 01       		.byte	0x1
 7352 038c 5904     		.2byte	0x459
 7353 038e 00000000 		.4byte	.LFB84
 7354 0392 48000000 		.4byte	.LFE84-.LFB84
 7355 0396 01       		.uleb128 0x1
 7356 0397 9C       		.byte	0x9c
 7357 0398 AF030000 		.4byte	0x3af
 7358 039c 0A       		.uleb128 0xa
 7359 039d C8010000 		.4byte	.LASF53
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 167


 7360 03a1 01       		.byte	0x1
 7361 03a2 5B04     		.2byte	0x45b
 7362 03a4 21020000 		.4byte	0x221
 7363 03a8 05       		.uleb128 0x5
 7364 03a9 03       		.byte	0x3
 7365 03aa 54000000 		.4byte	dont_Execute_1st_Time.8895
 7366 03ae 00       		.byte	0
 7367 03af 11       		.uleb128 0x11
 7368 03b0 75020000 		.4byte	.LASF55
 7369 03b4 01       		.byte	0x1
 7370 03b5 6B04     		.2byte	0x46b
 7371 03b7 00000000 		.4byte	.LFB85
 7372 03bb 34000000 		.4byte	.LFE85-.LFB85
 7373 03bf 01       		.uleb128 0x1
 7374 03c0 9C       		.byte	0x9c
 7375 03c1 D3030000 		.4byte	0x3d3
 7376 03c5 12       		.uleb128 0x12
 7377 03c6 6900     		.ascii	"i\000"
 7378 03c8 01       		.byte	0x1
 7379 03c9 6D04     		.2byte	0x46d
 7380 03cb 73000000 		.4byte	0x73
 7381 03cf 02       		.uleb128 0x2
 7382 03d0 91       		.byte	0x91
 7383 03d1 74       		.sleb128 -12
 7384 03d2 00       		.byte	0
 7385 03d3 10       		.uleb128 0x10
 7386 03d4 61070000 		.4byte	.LASF56
 7387 03d8 01       		.byte	0x1
 7388 03d9 7104     		.2byte	0x471
 7389 03db 00000000 		.4byte	.LFB86
 7390 03df 28000000 		.4byte	.LFE86-.LFB86
 7391 03e3 01       		.uleb128 0x1
 7392 03e4 9C       		.byte	0x9c
 7393 03e5 07040000 		.4byte	0x407
 7394 03e9 12       		.uleb128 0x12
 7395 03ea 6900     		.ascii	"i\000"
 7396 03ec 01       		.byte	0x1
 7397 03ed 7304     		.2byte	0x473
 7398 03ef 73000000 		.4byte	0x73
 7399 03f3 02       		.uleb128 0x2
 7400 03f4 91       		.byte	0x91
 7401 03f5 74       		.sleb128 -12
 7402 03f6 0A       		.uleb128 0xa
 7403 03f7 E5040000 		.4byte	.LASF57
 7404 03fb 01       		.byte	0x1
 7405 03fc 7404     		.2byte	0x474
 7406 03fe 07040000 		.4byte	0x407
 7407 0402 03       		.uleb128 0x3
 7408 0403 91       		.byte	0x91
 7409 0404 B47F     		.sleb128 -76
 7410 0406 00       		.byte	0
 7411 0407 13       		.uleb128 0x13
 7412 0408 97000000 		.4byte	0x97
 7413 040c 17040000 		.4byte	0x417
 7414 0410 14       		.uleb128 0x14
 7415 0411 E3000000 		.4byte	0xe3
 7416 0415 3F       		.byte	0x3f
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 168


 7417 0416 00       		.byte	0
 7418 0417 0F       		.uleb128 0xf
 7419 0418 03070000 		.4byte	.LASF58
 7420 041c 01       		.byte	0x1
 7421 041d 7A04     		.2byte	0x47a
 7422 041f 00000000 		.4byte	.LFB87
 7423 0423 44000000 		.4byte	.LFE87-.LFB87
 7424 0427 01       		.uleb128 0x1
 7425 0428 9C       		.byte	0x9c
 7426 0429 59040000 		.4byte	0x459
 7427 042d 15       		.uleb128 0x15
 7428 042e 53747200 		.ascii	"Str\000"
 7429 0432 01       		.byte	0x1
 7430 0433 7A04     		.2byte	0x47a
 7431 0435 EA000000 		.4byte	0xea
 7432 0439 02       		.uleb128 0x2
 7433 043a 91       		.byte	0x91
 7434 043b 74       		.sleb128 -12
 7435 043c 16       		.uleb128 0x16
 7436 043d 12000000 		.4byte	.LBB2
 7437 0441 26000000 		.4byte	.LBE2-.LBB2
 7438 0445 0A       		.uleb128 0xa
 7439 0446 19070000 		.4byte	.LASF59
 7440 044a 01       		.byte	0x1
 7441 044b 7E04     		.2byte	0x47e
 7442 044d 59040000 		.4byte	0x459
 7443 0451 05       		.uleb128 0x5
 7444 0452 03       		.byte	0x3
 7445 0453 1C000000 		.4byte	Str_Last_One.8912
 7446 0457 00       		.byte	0
 7447 0458 00       		.byte	0
 7448 0459 13       		.uleb128 0x13
 7449 045a D5000000 		.4byte	0xd5
 7450 045e 69040000 		.4byte	0x469
 7451 0462 14       		.uleb128 0x14
 7452 0463 E3000000 		.4byte	0xe3
 7453 0467 0C       		.byte	0xc
 7454 0468 00       		.byte	0
 7455 0469 0F       		.uleb128 0xf
 7456 046a 97040000 		.4byte	.LASF60
 7457 046e 01       		.byte	0x1
 7458 046f 8704     		.2byte	0x487
 7459 0471 00000000 		.4byte	.LFB88
 7460 0475 3C000000 		.4byte	.LFE88-.LFB88
 7461 0479 01       		.uleb128 0x1
 7462 047a 9C       		.byte	0x9c
 7463 047b A8040000 		.4byte	0x4a8
 7464 047f 15       		.uleb128 0x15
 7465 0480 6E756D00 		.ascii	"num\000"
 7466 0484 01       		.byte	0x1
 7467 0485 8704     		.2byte	0x487
 7468 0487 BB000000 		.4byte	0xbb
 7469 048b 02       		.uleb128 0x2
 7470 048c 91       		.byte	0x91
 7471 048d 5C       		.sleb128 -36
 7472 048e 16       		.uleb128 0x16
 7473 048f 12000000 		.4byte	.LBB3
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 169


 7474 0493 1E000000 		.4byte	.LBE3-.LBB3
 7475 0497 0A       		.uleb128 0xa
 7476 0498 06050000 		.4byte	.LASF61
 7477 049c 01       		.byte	0x1
 7478 049d 8B04     		.2byte	0x48b
 7479 049f A8040000 		.4byte	0x4a8
 7480 04a3 02       		.uleb128 0x2
 7481 04a4 91       		.byte	0x91
 7482 04a5 64       		.sleb128 -28
 7483 04a6 00       		.byte	0
 7484 04a7 00       		.byte	0
 7485 04a8 13       		.uleb128 0x13
 7486 04a9 D5000000 		.4byte	0xd5
 7487 04ad B8040000 		.4byte	0x4b8
 7488 04b1 14       		.uleb128 0x14
 7489 04b2 E3000000 		.4byte	0xe3
 7490 04b6 13       		.byte	0x13
 7491 04b7 00       		.byte	0
 7492 04b8 0E       		.uleb128 0xe
 7493 04b9 22050000 		.4byte	.LASF62
 7494 04bd 01       		.byte	0x1
 7495 04be 9104     		.2byte	0x491
 7496 04c0 00000000 		.4byte	.LFB89
 7497 04c4 80030000 		.4byte	.LFE89-.LFB89
 7498 04c8 01       		.uleb128 0x1
 7499 04c9 9C       		.byte	0x9c
 7500 04ca 0E       		.uleb128 0xe
 7501 04cb BE050000 		.4byte	.LASF63
 7502 04cf 01       		.byte	0x1
 7503 04d0 F104     		.2byte	0x4f1
 7504 04d2 00000000 		.4byte	.LFB90
 7505 04d6 50000000 		.4byte	.LFE90-.LFB90
 7506 04da 01       		.uleb128 0x1
 7507 04db 9C       		.byte	0x9c
 7508 04dc 0E       		.uleb128 0xe
 7509 04dd DE000000 		.4byte	.LASF64
 7510 04e1 01       		.byte	0x1
 7511 04e2 0005     		.2byte	0x500
 7512 04e4 00000000 		.4byte	.LFB91
 7513 04e8 4A000000 		.4byte	.LFE91-.LFB91
 7514 04ec 01       		.uleb128 0x1
 7515 04ed 9C       		.byte	0x9c
 7516 04ee 0E       		.uleb128 0xe
 7517 04ef 36080000 		.4byte	.LASF65
 7518 04f3 01       		.byte	0x1
 7519 04f4 0F05     		.2byte	0x50f
 7520 04f6 00000000 		.4byte	.LFB92
 7521 04fa EC000000 		.4byte	.LFE92-.LFB92
 7522 04fe 01       		.uleb128 0x1
 7523 04ff 9C       		.byte	0x9c
 7524 0500 0E       		.uleb128 0xe
 7525 0501 38050000 		.4byte	.LASF66
 7526 0505 01       		.byte	0x1
 7527 0506 2D05     		.2byte	0x52d
 7528 0508 00000000 		.4byte	.LFB93
 7529 050c EC000000 		.4byte	.LFE93-.LFB93
 7530 0510 01       		.uleb128 0x1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 170


 7531 0511 9C       		.byte	0x9c
 7532 0512 0E       		.uleb128 0xe
 7533 0513 FC000000 		.4byte	.LASF67
 7534 0517 01       		.byte	0x1
 7535 0518 4B05     		.2byte	0x54b
 7536 051a 00000000 		.4byte	.LFB94
 7537 051e EC000000 		.4byte	.LFE94-.LFB94
 7538 0522 01       		.uleb128 0x1
 7539 0523 9C       		.byte	0x9c
 7540 0524 0E       		.uleb128 0xe
 7541 0525 24020000 		.4byte	.LASF68
 7542 0529 01       		.byte	0x1
 7543 052a 6905     		.2byte	0x569
 7544 052c 00000000 		.4byte	.LFB95
 7545 0530 1A000000 		.4byte	.LFE95-.LFB95
 7546 0534 01       		.uleb128 0x1
 7547 0535 9C       		.byte	0x9c
 7548 0536 0B       		.uleb128 0xb
 7549 0537 2E070000 		.4byte	.LASF69
 7550 053b 01       		.byte	0x1
 7551 053c 7005     		.2byte	0x570
 7552 053e 73000000 		.4byte	0x73
 7553 0542 00000000 		.4byte	.LFB96
 7554 0546 B0000000 		.4byte	.LFE96-.LFB96
 7555 054a 01       		.uleb128 0x1
 7556 054b 9C       		.byte	0x9c
 7557 054c 6F050000 		.4byte	0x56f
 7558 0550 0C       		.uleb128 0xc
 7559 0551 FE050000 		.4byte	.LASF70
 7560 0555 01       		.byte	0x1
 7561 0556 7005     		.2byte	0x570
 7562 0558 D5000000 		.4byte	0xd5
 7563 055c 02       		.uleb128 0x2
 7564 055d 91       		.byte	0x91
 7565 055e 77       		.sleb128 -9
 7566 055f 0C       		.uleb128 0xc
 7567 0560 42060000 		.4byte	.LASF71
 7568 0564 01       		.byte	0x1
 7569 0565 7005     		.2byte	0x570
 7570 0567 D5000000 		.4byte	0xd5
 7571 056b 02       		.uleb128 0x2
 7572 056c 91       		.byte	0x91
 7573 056d 76       		.sleb128 -10
 7574 056e 00       		.byte	0
 7575 056f 0E       		.uleb128 0xe
 7576 0570 58000000 		.4byte	.LASF72
 7577 0574 01       		.byte	0x1
 7578 0575 A005     		.2byte	0x5a0
 7579 0577 00000000 		.4byte	.LFB97
 7580 057b 0E000000 		.4byte	.LFE97-.LFB97
 7581 057f 01       		.uleb128 0x1
 7582 0580 9C       		.byte	0x9c
 7583 0581 0E       		.uleb128 0xe
 7584 0582 9E060000 		.4byte	.LASF73
 7585 0586 01       		.byte	0x1
 7586 0587 A405     		.2byte	0x5a4
 7587 0589 00000000 		.4byte	.LFB98
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 171


 7588 058d 98000000 		.4byte	.LFE98-.LFB98
 7589 0591 01       		.uleb128 0x1
 7590 0592 9C       		.byte	0x9c
 7591 0593 0E       		.uleb128 0xe
 7592 0594 6B020000 		.4byte	.LASF74
 7593 0598 01       		.byte	0x1
 7594 0599 B205     		.2byte	0x5b2
 7595 059b 00000000 		.4byte	.LFB99
 7596 059f 90000000 		.4byte	.LFE99-.LFB99
 7597 05a3 01       		.uleb128 0x1
 7598 05a4 9C       		.byte	0x9c
 7599 05a5 0B       		.uleb128 0xb
 7600 05a6 90070000 		.4byte	.LASF75
 7601 05aa 01       		.byte	0x1
 7602 05ab C405     		.2byte	0x5c4
 7603 05ad 5E000000 		.4byte	0x5e
 7604 05b1 00000000 		.4byte	.LFB100
 7605 05b5 6C000000 		.4byte	.LFE100-.LFB100
 7606 05b9 01       		.uleb128 0x1
 7607 05ba 9C       		.byte	0x9c
 7608 05bb DE050000 		.4byte	0x5de
 7609 05bf 0C       		.uleb128 0xc
 7610 05c0 50070000 		.4byte	.LASF76
 7611 05c4 01       		.byte	0x1
 7612 05c5 C405     		.2byte	0x5c4
 7613 05c7 C7000000 		.4byte	0xc7
 7614 05cb 02       		.uleb128 0x2
 7615 05cc 91       		.byte	0x91
 7616 05cd 64       		.sleb128 -28
 7617 05ce 0A       		.uleb128 0xa
 7618 05cf 73060000 		.4byte	.LASF77
 7619 05d3 01       		.byte	0x1
 7620 05d4 C605     		.2byte	0x5c6
 7621 05d6 C7000000 		.4byte	0xc7
 7622 05da 02       		.uleb128 0x2
 7623 05db 91       		.byte	0x91
 7624 05dc 6C       		.sleb128 -20
 7625 05dd 00       		.byte	0
 7626 05de 0B       		.uleb128 0xb
 7627 05df CC040000 		.4byte	.LASF78
 7628 05e3 01       		.byte	0x1
 7629 05e4 CA05     		.2byte	0x5ca
 7630 05e6 5E000000 		.4byte	0x5e
 7631 05ea 00000000 		.4byte	.LFB101
 7632 05ee 58000000 		.4byte	.LFE101-.LFB101
 7633 05f2 01       		.uleb128 0x1
 7634 05f3 9C       		.byte	0x9c
 7635 05f4 17060000 		.4byte	0x617
 7636 05f8 0C       		.uleb128 0xc
 7637 05f9 50070000 		.4byte	.LASF76
 7638 05fd 01       		.byte	0x1
 7639 05fe CA05     		.2byte	0x5ca
 7640 0600 C7000000 		.4byte	0xc7
 7641 0604 02       		.uleb128 0x2
 7642 0605 91       		.byte	0x91
 7643 0606 64       		.sleb128 -28
 7644 0607 0A       		.uleb128 0xa
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 172


 7645 0608 73060000 		.4byte	.LASF77
 7646 060c 01       		.byte	0x1
 7647 060d CC05     		.2byte	0x5cc
 7648 060f C7000000 		.4byte	0xc7
 7649 0613 02       		.uleb128 0x2
 7650 0614 91       		.byte	0x91
 7651 0615 6C       		.sleb128 -20
 7652 0616 00       		.byte	0
 7653 0617 0B       		.uleb128 0xb
 7654 0618 ED050000 		.4byte	.LASF79
 7655 061c 01       		.byte	0x1
 7656 061d D105     		.2byte	0x5d1
 7657 061f 81000000 		.4byte	0x81
 7658 0623 00000000 		.4byte	.LFB102
 7659 0627 22000000 		.4byte	.LFE102-.LFB102
 7660 062b 01       		.uleb128 0x1
 7661 062c 9C       		.byte	0x9c
 7662 062d 41060000 		.4byte	0x641
 7663 0631 0C       		.uleb128 0xc
 7664 0632 6C040000 		.4byte	.LASF80
 7665 0636 01       		.byte	0x1
 7666 0637 D105     		.2byte	0x5d1
 7667 0639 81000000 		.4byte	0x81
 7668 063d 02       		.uleb128 0x2
 7669 063e 91       		.byte	0x91
 7670 063f 77       		.sleb128 -9
 7671 0640 00       		.byte	0
 7672 0641 0F       		.uleb128 0xf
 7673 0642 D6070000 		.4byte	.LASF81
 7674 0646 01       		.byte	0x1
 7675 0647 D705     		.2byte	0x5d7
 7676 0649 00000000 		.4byte	.LFB103
 7677 064d 26000000 		.4byte	.LFE103-.LFB103
 7678 0651 01       		.uleb128 0x1
 7679 0652 9C       		.byte	0x9c
 7680 0653 76060000 		.4byte	0x676
 7681 0657 0C       		.uleb128 0xc
 7682 0658 6D050000 		.4byte	.LASF82
 7683 065c 01       		.byte	0x1
 7684 065d D705     		.2byte	0x5d7
 7685 065f 81000000 		.4byte	0x81
 7686 0663 02       		.uleb128 0x2
 7687 0664 91       		.byte	0x91
 7688 0665 77       		.sleb128 -9
 7689 0666 0C       		.uleb128 0xc
 7690 0667 AD020000 		.4byte	.LASF83
 7691 066b 01       		.byte	0x1
 7692 066c D705     		.2byte	0x5d7
 7693 066e 5E000000 		.4byte	0x5e
 7694 0672 02       		.uleb128 0x2
 7695 0673 91       		.byte	0x91
 7696 0674 70       		.sleb128 -16
 7697 0675 00       		.byte	0
 7698 0676 0F       		.uleb128 0xf
 7699 0677 5C070000 		.4byte	.LASF84
 7700 067b 01       		.byte	0x1
 7701 067c DC05     		.2byte	0x5dc
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 173


 7702 067e 00000000 		.4byte	.LFB104
 7703 0682 8C000000 		.4byte	.LFE104-.LFB104
 7704 0686 01       		.uleb128 0x1
 7705 0687 9C       		.byte	0x9c
 7706 0688 AB060000 		.4byte	0x6ab
 7707 068c 15       		.uleb128 0x15
 7708 068d 64697200 		.ascii	"dir\000"
 7709 0691 01       		.byte	0x1
 7710 0692 DC05     		.2byte	0x5dc
 7711 0694 81000000 		.4byte	0x81
 7712 0698 02       		.uleb128 0x2
 7713 0699 91       		.byte	0x91
 7714 069a 6F       		.sleb128 -17
 7715 069b 0C       		.uleb128 0xc
 7716 069c C1010000 		.4byte	.LASF85
 7717 06a0 01       		.byte	0x1
 7718 06a1 DC05     		.2byte	0x5dc
 7719 06a3 5E000000 		.4byte	0x5e
 7720 06a7 02       		.uleb128 0x2
 7721 06a8 91       		.byte	0x91
 7722 06a9 68       		.sleb128 -24
 7723 06aa 00       		.byte	0
 7724 06ab 0F       		.uleb128 0xf
 7725 06ac E0050000 		.4byte	.LASF86
 7726 06b0 01       		.byte	0x1
 7727 06b1 E705     		.2byte	0x5e7
 7728 06b3 00000000 		.4byte	.LFB105
 7729 06b7 48000000 		.4byte	.LFE105-.LFB105
 7730 06bb 01       		.uleb128 0x1
 7731 06bc 9C       		.byte	0x9c
 7732 06bd D1060000 		.4byte	0x6d1
 7733 06c1 15       		.uleb128 0x15
 7734 06c2 706F7300 		.ascii	"pos\000"
 7735 06c6 01       		.byte	0x1
 7736 06c7 E705     		.2byte	0x5e7
 7737 06c9 57000000 		.4byte	0x57
 7738 06cd 02       		.uleb128 0x2
 7739 06ce 91       		.byte	0x91
 7740 06cf 74       		.sleb128 -12
 7741 06d0 00       		.byte	0
 7742 06d1 0E       		.uleb128 0xe
 7743 06d2 75080000 		.4byte	.LASF87
 7744 06d6 01       		.byte	0x1
 7745 06d7 EF05     		.2byte	0x5ef
 7746 06d9 00000000 		.4byte	.LFB106
 7747 06dd 0E000000 		.4byte	.LFE106-.LFB106
 7748 06e1 01       		.uleb128 0x1
 7749 06e2 9C       		.byte	0x9c
 7750 06e3 09       		.uleb128 0x9
 7751 06e4 D8020000 		.4byte	.LASF88
 7752 06e8 01       		.byte	0x1
 7753 06e9 F305     		.2byte	0x5f3
 7754 06eb 73000000 		.4byte	0x73
 7755 06ef 00000000 		.4byte	.LFB107
 7756 06f3 36000000 		.4byte	.LFE107-.LFB107
 7757 06f7 01       		.uleb128 0x1
 7758 06f8 9C       		.byte	0x9c
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 174


 7759 06f9 0D070000 		.4byte	0x70d
 7760 06fd 0A       		.uleb128 0xa
 7761 06fe 73060000 		.4byte	.LASF77
 7762 0702 01       		.byte	0x1
 7763 0703 F505     		.2byte	0x5f5
 7764 0705 73000000 		.4byte	0x73
 7765 0709 02       		.uleb128 0x2
 7766 070a 91       		.byte	0x91
 7767 070b 74       		.sleb128 -12
 7768 070c 00       		.byte	0
 7769 070d 0B       		.uleb128 0xb
 7770 070e 56060000 		.4byte	.LASF89
 7771 0712 01       		.byte	0x1
 7772 0713 FB05     		.2byte	0x5fb
 7773 0715 5E000000 		.4byte	0x5e
 7774 0719 00000000 		.4byte	.LFB108
 7775 071d 0C020000 		.4byte	.LFE108-.LFB108
 7776 0721 01       		.uleb128 0x1
 7777 0722 9C       		.byte	0x9c
 7778 0723 55070000 		.4byte	0x755
 7779 0727 0C       		.uleb128 0xc
 7780 0728 6D050000 		.4byte	.LASF82
 7781 072c 01       		.byte	0x1
 7782 072d FB05     		.2byte	0x5fb
 7783 072f 81000000 		.4byte	0x81
 7784 0733 02       		.uleb128 0x2
 7785 0734 91       		.byte	0x91
 7786 0735 6F       		.sleb128 -17
 7787 0736 0C       		.uleb128 0xc
 7788 0737 AD020000 		.4byte	.LASF83
 7789 073b 01       		.byte	0x1
 7790 073c FB05     		.2byte	0x5fb
 7791 073e 5E000000 		.4byte	0x5e
 7792 0742 02       		.uleb128 0x2
 7793 0743 91       		.byte	0x91
 7794 0744 68       		.sleb128 -24
 7795 0745 0A       		.uleb128 0xa
 7796 0746 3A070000 		.4byte	.LASF90
 7797 074a 01       		.byte	0x1
 7798 074b FD05     		.2byte	0x5fd
 7799 074d 5E000000 		.4byte	0x5e
 7800 0751 02       		.uleb128 0x2
 7801 0752 91       		.byte	0x91
 7802 0753 74       		.sleb128 -12
 7803 0754 00       		.byte	0
 7804 0755 0B       		.uleb128 0xb
 7805 0756 89020000 		.4byte	.LASF91
 7806 075a 01       		.byte	0x1
 7807 075b 9C06     		.2byte	0x69c
 7808 075d 5E000000 		.4byte	0x5e
 7809 0761 00000000 		.4byte	.LFB109
 7810 0765 A8000000 		.4byte	.LFE109-.LFB109
 7811 0769 01       		.uleb128 0x1
 7812 076a 9C       		.byte	0x9c
 7813 076b BB070000 		.4byte	0x7bb
 7814 076f 0C       		.uleb128 0xc
 7815 0770 AD020000 		.4byte	.LASF83
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 175


 7816 0774 01       		.byte	0x1
 7817 0775 9C06     		.2byte	0x69c
 7818 0777 5E000000 		.4byte	0x5e
 7819 077b 02       		.uleb128 0x2
 7820 077c 91       		.byte	0x91
 7821 077d 64       		.sleb128 -28
 7822 077e 0C       		.uleb128 0xc
 7823 077f E5050000 		.4byte	.LASF92
 7824 0783 01       		.byte	0x1
 7825 0784 9C06     		.2byte	0x69c
 7826 0786 81000000 		.4byte	0x81
 7827 078a 02       		.uleb128 0x2
 7828 078b 91       		.byte	0x91
 7829 078c 63       		.sleb128 -29
 7830 078d 0A       		.uleb128 0xa
 7831 078e 3A070000 		.4byte	.LASF90
 7832 0792 01       		.byte	0x1
 7833 0793 9E06     		.2byte	0x69e
 7834 0795 5E000000 		.4byte	0x5e
 7835 0799 02       		.uleb128 0x2
 7836 079a 91       		.byte	0x91
 7837 079b 74       		.sleb128 -12
 7838 079c 0A       		.uleb128 0xa
 7839 079d 2D080000 		.4byte	.LASF93
 7840 07a1 01       		.byte	0x1
 7841 07a2 A006     		.2byte	0x6a0
 7842 07a4 81000000 		.4byte	0x81
 7843 07a8 02       		.uleb128 0x2
 7844 07a9 91       		.byte	0x91
 7845 07aa 73       		.sleb128 -13
 7846 07ab 0A       		.uleb128 0xa
 7847 07ac AA050000 		.4byte	.LASF94
 7848 07b0 01       		.byte	0x1
 7849 07b1 A406     		.2byte	0x6a4
 7850 07b3 5E000000 		.4byte	0x5e
 7851 07b7 02       		.uleb128 0x2
 7852 07b8 91       		.byte	0x91
 7853 07b9 6C       		.sleb128 -20
 7854 07ba 00       		.byte	0
 7855 07bb 17       		.uleb128 0x17
 7856 07bc 25060000 		.4byte	.LASF95
 7857 07c0 05       		.byte	0x5
 7858 07c1 1207     		.2byte	0x712
 7859 07c3 C7070000 		.4byte	0x7c7
 7860 07c7 18       		.uleb128 0x18
 7861 07c8 8C000000 		.4byte	0x8c
 7862 07cc 19       		.uleb128 0x19
 7863 07cd AA030000 		.4byte	.LASF96
 7864 07d1 06       		.byte	0x6
 7865 07d2 14       		.byte	0x14
 7866 07d3 21020000 		.4byte	0x221
 7867 07d7 05       		.uleb128 0x5
 7868 07d8 03       		.byte	0x3
 7869 07d9 00000000 		.4byte	Is_Slide_On_Gripper
 7870 07dd 19       		.uleb128 0x19
 7871 07de 4E020000 		.4byte	.LASF97
 7872 07e2 06       		.byte	0x6
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 176


 7873 07e3 15       		.byte	0x15
 7874 07e4 A3000000 		.4byte	0xa3
 7875 07e8 05       		.uleb128 0x5
 7876 07e9 03       		.byte	0x3
 7877 07ea 00000000 		.4byte	count
 7878 07ee 19       		.uleb128 0x19
 7879 07ef A6010000 		.4byte	.LASF98
 7880 07f3 06       		.byte	0x6
 7881 07f4 16       		.byte	0x16
 7882 07f5 07040000 		.4byte	0x407
 7883 07f9 05       		.uleb128 0x5
 7884 07fa 03       		.byte	0x3
 7885 07fb 00000000 		.4byte	USB_received
 7886 07ff 13       		.uleb128 0x13
 7887 0800 AF000000 		.4byte	0xaf
 7888 0804 0F080000 		.4byte	0x80f
 7889 0808 14       		.uleb128 0x14
 7890 0809 E3000000 		.4byte	0xe3
 7891 080d 39       		.byte	0x39
 7892 080e 00       		.byte	0
 7893 080f 19       		.uleb128 0x19
 7894 0810 8F020000 		.4byte	.LASF99
 7895 0814 06       		.byte	0x6
 7896 0815 17       		.byte	0x17
 7897 0816 FF070000 		.4byte	0x7ff
 7898 081a 05       		.uleb128 0x5
 7899 081b 03       		.byte	0x3
 7900 081c 00000000 		.4byte	USB_transmit
 7901 0820 19       		.uleb128 0x19
 7902 0821 FB010000 		.4byte	.LASF100
 7903 0825 06       		.byte	0x6
 7904 0826 18       		.byte	0x18
 7905 0827 BB000000 		.4byte	0xbb
 7906 082b 05       		.uleb128 0x5
 7907 082c 03       		.byte	0x3
 7908 082d 00000000 		.4byte	InterStage_QuadPosition
 7909 0831 19       		.uleb128 0x19
 7910 0832 7E040000 		.4byte	.LASF101
 7911 0836 06       		.byte	0x6
 7912 0837 19       		.byte	0x19
 7913 0838 BB000000 		.4byte	0xbb
 7914 083c 05       		.uleb128 0x5
 7915 083d 03       		.byte	0x3
 7916 083e 00000000 		.4byte	Inter_Stage_QuadPosition
 7917 0842 19       		.uleb128 0x19
 7918 0843 0D060000 		.4byte	.LASF102
 7919 0847 01       		.byte	0x1
 7920 0848 14       		.byte	0x14
 7921 0849 21020000 		.4byte	0x221
 7922 084d 05       		.uleb128 0x5
 7923 084e 03       		.byte	0x3
 7924 084f 00000000 		.4byte	Time_Out_Error
 7925 0853 19       		.uleb128 0x19
 7926 0854 78070000 		.4byte	.LASF103
 7927 0858 01       		.byte	0x1
 7928 0859 15       		.byte	0x15
 7929 085a 7A000000 		.4byte	0x7a
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 177


 7930 085e 05       		.uleb128 0x5
 7931 085f 03       		.byte	0x3
 7932 0860 00000000 		.4byte	command
 7933 0864 19       		.uleb128 0x19
 7934 0865 A7020000 		.4byte	.LASF50
 7935 0869 01       		.byte	0x1
 7936 086a 17       		.byte	0x17
 7937 086b 73000000 		.4byte	0x73
 7938 086f 05       		.uleb128 0x5
 7939 0870 03       		.byte	0x3
 7940 0871 00000000 		.4byte	Error
 7941 0875 19       		.uleb128 0x19
 7942 0876 3A040000 		.4byte	.LASF104
 7943 087a 01       		.byte	0x1
 7944 087b 19       		.byte	0x19
 7945 087c BB000000 		.4byte	0xbb
 7946 0880 05       		.uleb128 0x5
 7947 0881 03       		.byte	0x3
 7948 0882 00000000 		.4byte	X_last_position
 7949 0886 19       		.uleb128 0x19
 7950 0887 63060000 		.4byte	.LASF105
 7951 088b 01       		.byte	0x1
 7952 088c 1A       		.byte	0x1a
 7953 088d BB000000 		.4byte	0xbb
 7954 0891 05       		.uleb128 0x5
 7955 0892 03       		.byte	0x3
 7956 0893 00000000 		.4byte	Y_last_position
 7957 0897 19       		.uleb128 0x19
 7958 0898 32060000 		.4byte	.LASF106
 7959 089c 01       		.byte	0x1
 7960 089d 1B       		.byte	0x1b
 7961 089e BB000000 		.4byte	0xbb
 7962 08a2 05       		.uleb128 0x5
 7963 08a3 03       		.byte	0x3
 7964 08a4 00000000 		.4byte	Z_last_position
 7965 08a8 19       		.uleb128 0x19
 7966 08a9 78060000 		.4byte	.LASF31
 7967 08ad 01       		.byte	0x1
 7968 08ae 1C       		.byte	0x1c
 7969 08af BB000000 		.4byte	0xbb
 7970 08b3 05       		.uleb128 0x5
 7971 08b4 03       		.byte	0x3
 7972 08b5 00000000 		.4byte	Position_X_Requested
 7973 08b9 19       		.uleb128 0x19
 7974 08ba 73050000 		.4byte	.LASF32
 7975 08be 01       		.byte	0x1
 7976 08bf 1D       		.byte	0x1d
 7977 08c0 BB000000 		.4byte	0xbb
 7978 08c4 05       		.uleb128 0x5
 7979 08c5 03       		.byte	0x3
 7980 08c6 00000000 		.4byte	Position_Y_Requested
 7981 08ca 19       		.uleb128 0x19
 7982 08cb 80030000 		.4byte	.LASF34
 7983 08cf 01       		.byte	0x1
 7984 08d0 1E       		.byte	0x1e
 7985 08d1 BB000000 		.4byte	0xbb
 7986 08d5 05       		.uleb128 0x5
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 178


 7987 08d6 03       		.byte	0x3
 7988 08d7 00000000 		.4byte	Position_Z_Requested
 7989 08db 19       		.uleb128 0x19
 7990 08dc 80070000 		.4byte	.LASF107
 7991 08e0 01       		.byte	0x1
 7992 08e1 1F       		.byte	0x1f
 7993 08e2 BB000000 		.4byte	0xbb
 7994 08e6 05       		.uleb128 0x5
 7995 08e7 03       		.byte	0x3
 7996 08e8 00000000 		.4byte	Position_X_Move
 7997 08ec 19       		.uleb128 0x19
 7998 08ed 12050000 		.4byte	.LASF108
 7999 08f1 01       		.byte	0x1
 8000 08f2 20       		.byte	0x20
 8001 08f3 BB000000 		.4byte	0xbb
 8002 08f7 05       		.uleb128 0x5
 8003 08f8 03       		.byte	0x3
 8004 08f9 00000000 		.4byte	Position_Y_Move
 8005 08fd 19       		.uleb128 0x19
 8006 08fe 92000000 		.4byte	.LASF109
 8007 0902 01       		.byte	0x1
 8008 0903 21       		.byte	0x21
 8009 0904 BB000000 		.4byte	0xbb
 8010 0908 05       		.uleb128 0x5
 8011 0909 03       		.byte	0x3
 8012 090a 00000000 		.4byte	Position_Z_Move
 8013 090e 19       		.uleb128 0x19
 8014 090f BD040000 		.4byte	.LASF110
 8015 0913 01       		.byte	0x1
 8016 0914 22       		.byte	0x22
 8017 0915 1F090000 		.4byte	0x91f
 8018 0919 05       		.uleb128 0x5
 8019 091a 03       		.byte	0x3
 8020 091b 00000000 		.4byte	X_QuadPosition
 8021 091f 18       		.uleb128 0x18
 8022 0920 BB000000 		.4byte	0xbb
 8023 0924 19       		.uleb128 0x19
 8024 0925 95030000 		.4byte	.LASF111
 8025 0929 01       		.byte	0x1
 8026 092a 23       		.byte	0x23
 8027 092b 1F090000 		.4byte	0x91f
 8028 092f 05       		.uleb128 0x5
 8029 0930 03       		.byte	0x3
 8030 0931 00000000 		.4byte	Y_QuadPosition
 8031 0935 19       		.uleb128 0x19
 8032 0936 F7040000 		.4byte	.LASF112
 8033 093a 01       		.byte	0x1
 8034 093b 24       		.byte	0x24
 8035 093c 1F090000 		.4byte	0x91f
 8036 0940 05       		.uleb128 0x5
 8037 0941 03       		.byte	0x3
 8038 0942 00000000 		.4byte	Z_QuadPosition
 8039 0946 19       		.uleb128 0x19
 8040 0947 52080000 		.4byte	.LASF113
 8041 094b 01       		.byte	0x1
 8042 094c 25       		.byte	0x25
 8043 094d 73000000 		.4byte	0x73
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 179


 8044 0951 05       		.uleb128 0x5
 8045 0952 03       		.byte	0x3
 8046 0953 00000000 		.4byte	No_of_X_Cycle
 8047 0957 19       		.uleb128 0x19
 8048 0958 54050000 		.4byte	.LASF114
 8049 095c 01       		.byte	0x1
 8050 095d 26       		.byte	0x26
 8051 095e 73000000 		.4byte	0x73
 8052 0962 05       		.uleb128 0x5
 8053 0963 03       		.byte	0x3
 8054 0964 00000000 		.4byte	No_of_Y_Cycle
 8055 0968 19       		.uleb128 0x19
 8056 0969 B3010000 		.4byte	.LASF115
 8057 096d 01       		.byte	0x1
 8058 096e 27       		.byte	0x27
 8059 096f 73000000 		.4byte	0x73
 8060 0973 05       		.uleb128 0x5
 8061 0974 03       		.byte	0x3
 8062 0975 00000000 		.4byte	No_of_Z_Cycle
 8063 0979 19       		.uleb128 0x19
 8064 097a 03080000 		.4byte	.LASF116
 8065 097e 01       		.byte	0x1
 8066 097f 28       		.byte	0x28
 8067 0980 7A000000 		.4byte	0x7a
 8068 0984 05       		.uleb128 0x5
 8069 0985 03       		.byte	0x3
 8070 0986 00000000 		.4byte	Motor_Speed_X
 8071 098a 19       		.uleb128 0x19
 8072 098b 11080000 		.4byte	.LASF117
 8073 098f 01       		.byte	0x1
 8074 0990 29       		.byte	0x29
 8075 0991 7A000000 		.4byte	0x7a
 8076 0995 05       		.uleb128 0x5
 8077 0996 03       		.byte	0x3
 8078 0997 00000000 		.4byte	Motor_Speed_Y
 8079 099b 19       		.uleb128 0x19
 8080 099c 1F080000 		.4byte	.LASF118
 8081 09a0 01       		.byte	0x1
 8082 09a1 2A       		.byte	0x2a
 8083 09a2 7A000000 		.4byte	0x7a
 8084 09a6 05       		.uleb128 0x5
 8085 09a7 03       		.byte	0x3
 8086 09a8 00000000 		.4byte	Motor_Speed_Z
 8087 09ac 19       		.uleb128 0x19
 8088 09ad DF070000 		.4byte	.LASF119
 8089 09b1 01       		.byte	0x1
 8090 09b2 2B       		.byte	0x2b
 8091 09b3 73000000 		.4byte	0x73
 8092 09b7 05       		.uleb128 0x5
 8093 09b8 03       		.byte	0x3
 8094 09b9 00000000 		.4byte	step_correction_loop_x
 8095 09bd 19       		.uleb128 0x19
 8096 09be BE030000 		.4byte	.LASF120
 8097 09c2 01       		.byte	0x1
 8098 09c3 2C       		.byte	0x2c
 8099 09c4 73000000 		.4byte	0x73
 8100 09c8 05       		.uleb128 0x5
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 180


 8101 09c9 03       		.byte	0x3
 8102 09ca 00000000 		.4byte	step_correction_loop_y
 8103 09ce 19       		.uleb128 0x19
 8104 09cf D5030000 		.4byte	.LASF121
 8105 09d3 01       		.byte	0x1
 8106 09d4 2D       		.byte	0x2d
 8107 09d5 73000000 		.4byte	0x73
 8108 09d9 05       		.uleb128 0x5
 8109 09da 03       		.byte	0x3
 8110 09db 00000000 		.4byte	step_correction_loop_z
 8111 09df 19       		.uleb128 0x19
 8112 09e0 9C020000 		.4byte	.LASF122
 8113 09e4 01       		.byte	0x1
 8114 09e5 2E       		.byte	0x2e
 8115 09e6 21020000 		.4byte	0x221
 8116 09ea 05       		.uleb128 0x5
 8117 09eb 03       		.byte	0x3
 8118 09ec 00000000 		.4byte	HomeX_done
 8119 09f0 19       		.uleb128 0x19
 8120 09f1 B6070000 		.4byte	.LASF123
 8121 09f5 01       		.byte	0x1
 8122 09f6 2F       		.byte	0x2f
 8123 09f7 21020000 		.4byte	0x221
 8124 09fb 05       		.uleb128 0x5
 8125 09fc 03       		.byte	0x3
 8126 09fd 00000000 		.4byte	HomeY_done
 8127 0a01 19       		.uleb128 0x19
 8128 0a02 62050000 		.4byte	.LASF124
 8129 0a06 01       		.byte	0x1
 8130 0a07 30       		.byte	0x30
 8131 0a08 21020000 		.4byte	0x221
 8132 0a0c 05       		.uleb128 0x5
 8133 0a0d 03       		.byte	0x3
 8134 0a0e 00000000 		.4byte	HomeZ_done
 8135 0a12 19       		.uleb128 0x19
 8136 0a13 EC030000 		.4byte	.LASF125
 8137 0a17 01       		.byte	0x1
 8138 0a18 31       		.byte	0x31
 8139 0a19 73000000 		.4byte	0x73
 8140 0a1d 05       		.uleb128 0x5
 8141 0a1e 03       		.byte	0x3
 8142 0a1f 00000000 		.4byte	EncoderXnYSelect
 8143 0a23 19       		.uleb128 0x19
 8144 0a24 4F040000 		.4byte	.LASF126
 8145 0a28 01       		.byte	0x1
 8146 0a29 32       		.byte	0x32
 8147 0a2a 73000000 		.4byte	0x73
 8148 0a2e 05       		.uleb128 0x5
 8149 0a2f 03       		.byte	0x3
 8150 0a30 00000000 		.4byte	Buffer_X_QuadPosition
 8151 0a34 19       		.uleb128 0x19
 8152 0a35 B3020000 		.4byte	.LASF127
 8153 0a39 01       		.byte	0x1
 8154 0a3a 33       		.byte	0x33
 8155 0a3b 73000000 		.4byte	0x73
 8156 0a3f 05       		.uleb128 0x5
 8157 0a40 03       		.byte	0x3
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 181


 8158 0a41 00000000 		.4byte	Buffer_Y_QuadPosition
 8159 0a45 19       		.uleb128 0x19
 8160 0a46 13020000 		.4byte	.LASF128
 8161 0a4a 01       		.byte	0x1
 8162 0a4b 34       		.byte	0x34
 8163 0a4c 73000000 		.4byte	0x73
 8164 0a50 05       		.uleb128 0x5
 8165 0a51 03       		.byte	0x3
 8166 0a52 00000000 		.4byte	PWM_comare_value
 8167 0a56 00       		.byte	0
 8168              		.section	.debug_abbrev,"",%progbits
 8169              	.Ldebug_abbrev0:
 8170 0000 01       		.uleb128 0x1
 8171 0001 11       		.uleb128 0x11
 8172 0002 01       		.byte	0x1
 8173 0003 25       		.uleb128 0x25
 8174 0004 0E       		.uleb128 0xe
 8175 0005 13       		.uleb128 0x13
 8176 0006 0B       		.uleb128 0xb
 8177 0007 03       		.uleb128 0x3
 8178 0008 0E       		.uleb128 0xe
 8179 0009 1B       		.uleb128 0x1b
 8180 000a 0E       		.uleb128 0xe
 8181 000b 55       		.uleb128 0x55
 8182 000c 17       		.uleb128 0x17
 8183 000d 11       		.uleb128 0x11
 8184 000e 01       		.uleb128 0x1
 8185 000f 10       		.uleb128 0x10
 8186 0010 17       		.uleb128 0x17
 8187 0011 00       		.byte	0
 8188 0012 00       		.byte	0
 8189 0013 02       		.uleb128 0x2
 8190 0014 24       		.uleb128 0x24
 8191 0015 00       		.byte	0
 8192 0016 0B       		.uleb128 0xb
 8193 0017 0B       		.uleb128 0xb
 8194 0018 3E       		.uleb128 0x3e
 8195 0019 0B       		.uleb128 0xb
 8196 001a 03       		.uleb128 0x3
 8197 001b 0E       		.uleb128 0xe
 8198 001c 00       		.byte	0
 8199 001d 00       		.byte	0
 8200 001e 03       		.uleb128 0x3
 8201 001f 16       		.uleb128 0x16
 8202 0020 00       		.byte	0
 8203 0021 03       		.uleb128 0x3
 8204 0022 0E       		.uleb128 0xe
 8205 0023 3A       		.uleb128 0x3a
 8206 0024 0B       		.uleb128 0xb
 8207 0025 3B       		.uleb128 0x3b
 8208 0026 0B       		.uleb128 0xb
 8209 0027 49       		.uleb128 0x49
 8210 0028 13       		.uleb128 0x13
 8211 0029 00       		.byte	0
 8212 002a 00       		.byte	0
 8213 002b 04       		.uleb128 0x4
 8214 002c 24       		.uleb128 0x24
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 182


 8215 002d 00       		.byte	0
 8216 002e 0B       		.uleb128 0xb
 8217 002f 0B       		.uleb128 0xb
 8218 0030 3E       		.uleb128 0x3e
 8219 0031 0B       		.uleb128 0xb
 8220 0032 03       		.uleb128 0x3
 8221 0033 08       		.uleb128 0x8
 8222 0034 00       		.byte	0
 8223 0035 00       		.byte	0
 8224 0036 05       		.uleb128 0x5
 8225 0037 16       		.uleb128 0x16
 8226 0038 00       		.byte	0
 8227 0039 03       		.uleb128 0x3
 8228 003a 0E       		.uleb128 0xe
 8229 003b 3A       		.uleb128 0x3a
 8230 003c 0B       		.uleb128 0xb
 8231 003d 3B       		.uleb128 0x3b
 8232 003e 05       		.uleb128 0x5
 8233 003f 49       		.uleb128 0x49
 8234 0040 13       		.uleb128 0x13
 8235 0041 00       		.byte	0
 8236 0042 00       		.byte	0
 8237 0043 06       		.uleb128 0x6
 8238 0044 0F       		.uleb128 0xf
 8239 0045 00       		.byte	0
 8240 0046 0B       		.uleb128 0xb
 8241 0047 0B       		.uleb128 0xb
 8242 0048 49       		.uleb128 0x49
 8243 0049 13       		.uleb128 0x13
 8244 004a 00       		.byte	0
 8245 004b 00       		.byte	0
 8246 004c 07       		.uleb128 0x7
 8247 004d 2E       		.uleb128 0x2e
 8248 004e 01       		.byte	0x1
 8249 004f 3F       		.uleb128 0x3f
 8250 0050 19       		.uleb128 0x19
 8251 0051 03       		.uleb128 0x3
 8252 0052 0E       		.uleb128 0xe
 8253 0053 3A       		.uleb128 0x3a
 8254 0054 0B       		.uleb128 0xb
 8255 0055 3B       		.uleb128 0x3b
 8256 0056 0B       		.uleb128 0xb
 8257 0057 49       		.uleb128 0x49
 8258 0058 13       		.uleb128 0x13
 8259 0059 11       		.uleb128 0x11
 8260 005a 01       		.uleb128 0x1
 8261 005b 12       		.uleb128 0x12
 8262 005c 06       		.uleb128 0x6
 8263 005d 40       		.uleb128 0x40
 8264 005e 18       		.uleb128 0x18
 8265 005f 9642     		.uleb128 0x2116
 8266 0061 19       		.uleb128 0x19
 8267 0062 01       		.uleb128 0x1
 8268 0063 13       		.uleb128 0x13
 8269 0064 00       		.byte	0
 8270 0065 00       		.byte	0
 8271 0066 08       		.uleb128 0x8
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 183


 8272 0067 34       		.uleb128 0x34
 8273 0068 00       		.byte	0
 8274 0069 03       		.uleb128 0x3
 8275 006a 0E       		.uleb128 0xe
 8276 006b 3A       		.uleb128 0x3a
 8277 006c 0B       		.uleb128 0xb
 8278 006d 3B       		.uleb128 0x3b
 8279 006e 0B       		.uleb128 0xb
 8280 006f 49       		.uleb128 0x49
 8281 0070 13       		.uleb128 0x13
 8282 0071 02       		.uleb128 0x2
 8283 0072 18       		.uleb128 0x18
 8284 0073 00       		.byte	0
 8285 0074 00       		.byte	0
 8286 0075 09       		.uleb128 0x9
 8287 0076 2E       		.uleb128 0x2e
 8288 0077 01       		.byte	0x1
 8289 0078 3F       		.uleb128 0x3f
 8290 0079 19       		.uleb128 0x19
 8291 007a 03       		.uleb128 0x3
 8292 007b 0E       		.uleb128 0xe
 8293 007c 3A       		.uleb128 0x3a
 8294 007d 0B       		.uleb128 0xb
 8295 007e 3B       		.uleb128 0x3b
 8296 007f 05       		.uleb128 0x5
 8297 0080 49       		.uleb128 0x49
 8298 0081 13       		.uleb128 0x13
 8299 0082 11       		.uleb128 0x11
 8300 0083 01       		.uleb128 0x1
 8301 0084 12       		.uleb128 0x12
 8302 0085 06       		.uleb128 0x6
 8303 0086 40       		.uleb128 0x40
 8304 0087 18       		.uleb128 0x18
 8305 0088 9642     		.uleb128 0x2116
 8306 008a 19       		.uleb128 0x19
 8307 008b 01       		.uleb128 0x1
 8308 008c 13       		.uleb128 0x13
 8309 008d 00       		.byte	0
 8310 008e 00       		.byte	0
 8311 008f 0A       		.uleb128 0xa
 8312 0090 34       		.uleb128 0x34
 8313 0091 00       		.byte	0
 8314 0092 03       		.uleb128 0x3
 8315 0093 0E       		.uleb128 0xe
 8316 0094 3A       		.uleb128 0x3a
 8317 0095 0B       		.uleb128 0xb
 8318 0096 3B       		.uleb128 0x3b
 8319 0097 05       		.uleb128 0x5
 8320 0098 49       		.uleb128 0x49
 8321 0099 13       		.uleb128 0x13
 8322 009a 02       		.uleb128 0x2
 8323 009b 18       		.uleb128 0x18
 8324 009c 00       		.byte	0
 8325 009d 00       		.byte	0
 8326 009e 0B       		.uleb128 0xb
 8327 009f 2E       		.uleb128 0x2e
 8328 00a0 01       		.byte	0x1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 184


 8329 00a1 3F       		.uleb128 0x3f
 8330 00a2 19       		.uleb128 0x19
 8331 00a3 03       		.uleb128 0x3
 8332 00a4 0E       		.uleb128 0xe
 8333 00a5 3A       		.uleb128 0x3a
 8334 00a6 0B       		.uleb128 0xb
 8335 00a7 3B       		.uleb128 0x3b
 8336 00a8 05       		.uleb128 0x5
 8337 00a9 27       		.uleb128 0x27
 8338 00aa 19       		.uleb128 0x19
 8339 00ab 49       		.uleb128 0x49
 8340 00ac 13       		.uleb128 0x13
 8341 00ad 11       		.uleb128 0x11
 8342 00ae 01       		.uleb128 0x1
 8343 00af 12       		.uleb128 0x12
 8344 00b0 06       		.uleb128 0x6
 8345 00b1 40       		.uleb128 0x40
 8346 00b2 18       		.uleb128 0x18
 8347 00b3 9642     		.uleb128 0x2116
 8348 00b5 19       		.uleb128 0x19
 8349 00b6 01       		.uleb128 0x1
 8350 00b7 13       		.uleb128 0x13
 8351 00b8 00       		.byte	0
 8352 00b9 00       		.byte	0
 8353 00ba 0C       		.uleb128 0xc
 8354 00bb 05       		.uleb128 0x5
 8355 00bc 00       		.byte	0
 8356 00bd 03       		.uleb128 0x3
 8357 00be 0E       		.uleb128 0xe
 8358 00bf 3A       		.uleb128 0x3a
 8359 00c0 0B       		.uleb128 0xb
 8360 00c1 3B       		.uleb128 0x3b
 8361 00c2 05       		.uleb128 0x5
 8362 00c3 49       		.uleb128 0x49
 8363 00c4 13       		.uleb128 0x13
 8364 00c5 02       		.uleb128 0x2
 8365 00c6 18       		.uleb128 0x18
 8366 00c7 00       		.byte	0
 8367 00c8 00       		.byte	0
 8368 00c9 0D       		.uleb128 0xd
 8369 00ca 2E       		.uleb128 0x2e
 8370 00cb 00       		.byte	0
 8371 00cc 3F       		.uleb128 0x3f
 8372 00cd 19       		.uleb128 0x19
 8373 00ce 03       		.uleb128 0x3
 8374 00cf 0E       		.uleb128 0xe
 8375 00d0 3A       		.uleb128 0x3a
 8376 00d1 0B       		.uleb128 0xb
 8377 00d2 3B       		.uleb128 0x3b
 8378 00d3 05       		.uleb128 0x5
 8379 00d4 49       		.uleb128 0x49
 8380 00d5 13       		.uleb128 0x13
 8381 00d6 11       		.uleb128 0x11
 8382 00d7 01       		.uleb128 0x1
 8383 00d8 12       		.uleb128 0x12
 8384 00d9 06       		.uleb128 0x6
 8385 00da 40       		.uleb128 0x40
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 185


 8386 00db 18       		.uleb128 0x18
 8387 00dc 9642     		.uleb128 0x2116
 8388 00de 19       		.uleb128 0x19
 8389 00df 00       		.byte	0
 8390 00e0 00       		.byte	0
 8391 00e1 0E       		.uleb128 0xe
 8392 00e2 2E       		.uleb128 0x2e
 8393 00e3 00       		.byte	0
 8394 00e4 3F       		.uleb128 0x3f
 8395 00e5 19       		.uleb128 0x19
 8396 00e6 03       		.uleb128 0x3
 8397 00e7 0E       		.uleb128 0xe
 8398 00e8 3A       		.uleb128 0x3a
 8399 00e9 0B       		.uleb128 0xb
 8400 00ea 3B       		.uleb128 0x3b
 8401 00eb 05       		.uleb128 0x5
 8402 00ec 11       		.uleb128 0x11
 8403 00ed 01       		.uleb128 0x1
 8404 00ee 12       		.uleb128 0x12
 8405 00ef 06       		.uleb128 0x6
 8406 00f0 40       		.uleb128 0x40
 8407 00f1 18       		.uleb128 0x18
 8408 00f2 9642     		.uleb128 0x2116
 8409 00f4 19       		.uleb128 0x19
 8410 00f5 00       		.byte	0
 8411 00f6 00       		.byte	0
 8412 00f7 0F       		.uleb128 0xf
 8413 00f8 2E       		.uleb128 0x2e
 8414 00f9 01       		.byte	0x1
 8415 00fa 3F       		.uleb128 0x3f
 8416 00fb 19       		.uleb128 0x19
 8417 00fc 03       		.uleb128 0x3
 8418 00fd 0E       		.uleb128 0xe
 8419 00fe 3A       		.uleb128 0x3a
 8420 00ff 0B       		.uleb128 0xb
 8421 0100 3B       		.uleb128 0x3b
 8422 0101 05       		.uleb128 0x5
 8423 0102 27       		.uleb128 0x27
 8424 0103 19       		.uleb128 0x19
 8425 0104 11       		.uleb128 0x11
 8426 0105 01       		.uleb128 0x1
 8427 0106 12       		.uleb128 0x12
 8428 0107 06       		.uleb128 0x6
 8429 0108 40       		.uleb128 0x40
 8430 0109 18       		.uleb128 0x18
 8431 010a 9642     		.uleb128 0x2116
 8432 010c 19       		.uleb128 0x19
 8433 010d 01       		.uleb128 0x1
 8434 010e 13       		.uleb128 0x13
 8435 010f 00       		.byte	0
 8436 0110 00       		.byte	0
 8437 0111 10       		.uleb128 0x10
 8438 0112 2E       		.uleb128 0x2e
 8439 0113 01       		.byte	0x1
 8440 0114 3F       		.uleb128 0x3f
 8441 0115 19       		.uleb128 0x19
 8442 0116 03       		.uleb128 0x3
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 186


 8443 0117 0E       		.uleb128 0xe
 8444 0118 3A       		.uleb128 0x3a
 8445 0119 0B       		.uleb128 0xb
 8446 011a 3B       		.uleb128 0x3b
 8447 011b 05       		.uleb128 0x5
 8448 011c 11       		.uleb128 0x11
 8449 011d 01       		.uleb128 0x1
 8450 011e 12       		.uleb128 0x12
 8451 011f 06       		.uleb128 0x6
 8452 0120 40       		.uleb128 0x40
 8453 0121 18       		.uleb128 0x18
 8454 0122 9642     		.uleb128 0x2116
 8455 0124 19       		.uleb128 0x19
 8456 0125 01       		.uleb128 0x1
 8457 0126 13       		.uleb128 0x13
 8458 0127 00       		.byte	0
 8459 0128 00       		.byte	0
 8460 0129 11       		.uleb128 0x11
 8461 012a 2E       		.uleb128 0x2e
 8462 012b 01       		.byte	0x1
 8463 012c 3F       		.uleb128 0x3f
 8464 012d 19       		.uleb128 0x19
 8465 012e 03       		.uleb128 0x3
 8466 012f 0E       		.uleb128 0xe
 8467 0130 3A       		.uleb128 0x3a
 8468 0131 0B       		.uleb128 0xb
 8469 0132 3B       		.uleb128 0x3b
 8470 0133 05       		.uleb128 0x5
 8471 0134 11       		.uleb128 0x11
 8472 0135 01       		.uleb128 0x1
 8473 0136 12       		.uleb128 0x12
 8474 0137 06       		.uleb128 0x6
 8475 0138 40       		.uleb128 0x40
 8476 0139 18       		.uleb128 0x18
 8477 013a 9742     		.uleb128 0x2117
 8478 013c 19       		.uleb128 0x19
 8479 013d 01       		.uleb128 0x1
 8480 013e 13       		.uleb128 0x13
 8481 013f 00       		.byte	0
 8482 0140 00       		.byte	0
 8483 0141 12       		.uleb128 0x12
 8484 0142 34       		.uleb128 0x34
 8485 0143 00       		.byte	0
 8486 0144 03       		.uleb128 0x3
 8487 0145 08       		.uleb128 0x8
 8488 0146 3A       		.uleb128 0x3a
 8489 0147 0B       		.uleb128 0xb
 8490 0148 3B       		.uleb128 0x3b
 8491 0149 05       		.uleb128 0x5
 8492 014a 49       		.uleb128 0x49
 8493 014b 13       		.uleb128 0x13
 8494 014c 02       		.uleb128 0x2
 8495 014d 18       		.uleb128 0x18
 8496 014e 00       		.byte	0
 8497 014f 00       		.byte	0
 8498 0150 13       		.uleb128 0x13
 8499 0151 01       		.uleb128 0x1
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 187


 8500 0152 01       		.byte	0x1
 8501 0153 49       		.uleb128 0x49
 8502 0154 13       		.uleb128 0x13
 8503 0155 01       		.uleb128 0x1
 8504 0156 13       		.uleb128 0x13
 8505 0157 00       		.byte	0
 8506 0158 00       		.byte	0
 8507 0159 14       		.uleb128 0x14
 8508 015a 21       		.uleb128 0x21
 8509 015b 00       		.byte	0
 8510 015c 49       		.uleb128 0x49
 8511 015d 13       		.uleb128 0x13
 8512 015e 2F       		.uleb128 0x2f
 8513 015f 0B       		.uleb128 0xb
 8514 0160 00       		.byte	0
 8515 0161 00       		.byte	0
 8516 0162 15       		.uleb128 0x15
 8517 0163 05       		.uleb128 0x5
 8518 0164 00       		.byte	0
 8519 0165 03       		.uleb128 0x3
 8520 0166 08       		.uleb128 0x8
 8521 0167 3A       		.uleb128 0x3a
 8522 0168 0B       		.uleb128 0xb
 8523 0169 3B       		.uleb128 0x3b
 8524 016a 05       		.uleb128 0x5
 8525 016b 49       		.uleb128 0x49
 8526 016c 13       		.uleb128 0x13
 8527 016d 02       		.uleb128 0x2
 8528 016e 18       		.uleb128 0x18
 8529 016f 00       		.byte	0
 8530 0170 00       		.byte	0
 8531 0171 16       		.uleb128 0x16
 8532 0172 0B       		.uleb128 0xb
 8533 0173 01       		.byte	0x1
 8534 0174 11       		.uleb128 0x11
 8535 0175 01       		.uleb128 0x1
 8536 0176 12       		.uleb128 0x12
 8537 0177 06       		.uleb128 0x6
 8538 0178 00       		.byte	0
 8539 0179 00       		.byte	0
 8540 017a 17       		.uleb128 0x17
 8541 017b 34       		.uleb128 0x34
 8542 017c 00       		.byte	0
 8543 017d 03       		.uleb128 0x3
 8544 017e 0E       		.uleb128 0xe
 8545 017f 3A       		.uleb128 0x3a
 8546 0180 0B       		.uleb128 0xb
 8547 0181 3B       		.uleb128 0x3b
 8548 0182 05       		.uleb128 0x5
 8549 0183 49       		.uleb128 0x49
 8550 0184 13       		.uleb128 0x13
 8551 0185 3F       		.uleb128 0x3f
 8552 0186 19       		.uleb128 0x19
 8553 0187 3C       		.uleb128 0x3c
 8554 0188 19       		.uleb128 0x19
 8555 0189 00       		.byte	0
 8556 018a 00       		.byte	0
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 188


 8557 018b 18       		.uleb128 0x18
 8558 018c 35       		.uleb128 0x35
 8559 018d 00       		.byte	0
 8560 018e 49       		.uleb128 0x49
 8561 018f 13       		.uleb128 0x13
 8562 0190 00       		.byte	0
 8563 0191 00       		.byte	0
 8564 0192 19       		.uleb128 0x19
 8565 0193 34       		.uleb128 0x34
 8566 0194 00       		.byte	0
 8567 0195 03       		.uleb128 0x3
 8568 0196 0E       		.uleb128 0xe
 8569 0197 3A       		.uleb128 0x3a
 8570 0198 0B       		.uleb128 0xb
 8571 0199 3B       		.uleb128 0x3b
 8572 019a 0B       		.uleb128 0xb
 8573 019b 49       		.uleb128 0x49
 8574 019c 13       		.uleb128 0x13
 8575 019d 3F       		.uleb128 0x3f
 8576 019e 19       		.uleb128 0x19
 8577 019f 02       		.uleb128 0x2
 8578 01a0 18       		.uleb128 0x18
 8579 01a1 00       		.byte	0
 8580 01a2 00       		.byte	0
 8581 01a3 00       		.byte	0
 8582              		.section	.debug_aranges,"",%progbits
 8583 0000 84010000 		.4byte	0x184
 8584 0004 0200     		.2byte	0x2
 8585 0006 00000000 		.4byte	.Ldebug_info0
 8586 000a 04       		.byte	0x4
 8587 000b 00       		.byte	0
 8588 000c 0000     		.2byte	0
 8589 000e 0000     		.2byte	0
 8590 0010 00000000 		.4byte	.LFB64
 8591 0014 4C020000 		.4byte	.LFE64-.LFB64
 8592 0018 00000000 		.4byte	.LFB65
 8593 001c 28020000 		.4byte	.LFE65-.LFB65
 8594 0020 00000000 		.4byte	.LFB66
 8595 0024 10020000 		.4byte	.LFE66-.LFB66
 8596 0028 00000000 		.4byte	.LFB67
 8597 002c DC010000 		.4byte	.LFE67-.LFB67
 8598 0030 00000000 		.4byte	.LFB68
 8599 0034 F0010000 		.4byte	.LFE68-.LFB68
 8600 0038 00000000 		.4byte	.LFB69
 8601 003c D8010000 		.4byte	.LFE69-.LFB69
 8602 0040 00000000 		.4byte	.LFB70
 8603 0044 1C010000 		.4byte	.LFE70-.LFB70
 8604 0048 00000000 		.4byte	.LFB71
 8605 004c 14010000 		.4byte	.LFE71-.LFB71
 8606 0050 00000000 		.4byte	.LFB72
 8607 0054 D4000000 		.4byte	.LFE72-.LFB72
 8608 0058 00000000 		.4byte	.LFB73
 8609 005c A4000000 		.4byte	.LFE73-.LFB73
 8610 0060 00000000 		.4byte	.LFB74
 8611 0064 12000000 		.4byte	.LFE74-.LFB74
 8612 0068 00000000 		.4byte	.LFB75
 8613 006c 98000000 		.4byte	.LFE75-.LFB75
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 189


 8614 0070 00000000 		.4byte	.LFB76
 8615 0074 3C000000 		.4byte	.LFE76-.LFB76
 8616 0078 00000000 		.4byte	.LFB77
 8617 007c 28000000 		.4byte	.LFE77-.LFB77
 8618 0080 00000000 		.4byte	.LFB78
 8619 0084 28000000 		.4byte	.LFE78-.LFB78
 8620 0088 00000000 		.4byte	.LFB79
 8621 008c 64000000 		.4byte	.LFE79-.LFB79
 8622 0090 00000000 		.4byte	.LFB80
 8623 0094 34020000 		.4byte	.LFE80-.LFB80
 8624 0098 00000000 		.4byte	.LFB81
 8625 009c 20040000 		.4byte	.LFE81-.LFB81
 8626 00a0 00000000 		.4byte	.LFB82
 8627 00a4 F2000000 		.4byte	.LFE82-.LFB82
 8628 00a8 00000000 		.4byte	.LFB83
 8629 00ac 40000000 		.4byte	.LFE83-.LFB83
 8630 00b0 00000000 		.4byte	.LFB84
 8631 00b4 48000000 		.4byte	.LFE84-.LFB84
 8632 00b8 00000000 		.4byte	.LFB85
 8633 00bc 34000000 		.4byte	.LFE85-.LFB85
 8634 00c0 00000000 		.4byte	.LFB86
 8635 00c4 28000000 		.4byte	.LFE86-.LFB86
 8636 00c8 00000000 		.4byte	.LFB87
 8637 00cc 44000000 		.4byte	.LFE87-.LFB87
 8638 00d0 00000000 		.4byte	.LFB88
 8639 00d4 3C000000 		.4byte	.LFE88-.LFB88
 8640 00d8 00000000 		.4byte	.LFB89
 8641 00dc 80030000 		.4byte	.LFE89-.LFB89
 8642 00e0 00000000 		.4byte	.LFB90
 8643 00e4 50000000 		.4byte	.LFE90-.LFB90
 8644 00e8 00000000 		.4byte	.LFB91
 8645 00ec 4A000000 		.4byte	.LFE91-.LFB91
 8646 00f0 00000000 		.4byte	.LFB92
 8647 00f4 EC000000 		.4byte	.LFE92-.LFB92
 8648 00f8 00000000 		.4byte	.LFB93
 8649 00fc EC000000 		.4byte	.LFE93-.LFB93
 8650 0100 00000000 		.4byte	.LFB94
 8651 0104 EC000000 		.4byte	.LFE94-.LFB94
 8652 0108 00000000 		.4byte	.LFB95
 8653 010c 1A000000 		.4byte	.LFE95-.LFB95
 8654 0110 00000000 		.4byte	.LFB96
 8655 0114 B0000000 		.4byte	.LFE96-.LFB96
 8656 0118 00000000 		.4byte	.LFB97
 8657 011c 0E000000 		.4byte	.LFE97-.LFB97
 8658 0120 00000000 		.4byte	.LFB98
 8659 0124 98000000 		.4byte	.LFE98-.LFB98
 8660 0128 00000000 		.4byte	.LFB99
 8661 012c 90000000 		.4byte	.LFE99-.LFB99
 8662 0130 00000000 		.4byte	.LFB100
 8663 0134 6C000000 		.4byte	.LFE100-.LFB100
 8664 0138 00000000 		.4byte	.LFB101
 8665 013c 58000000 		.4byte	.LFE101-.LFB101
 8666 0140 00000000 		.4byte	.LFB102
 8667 0144 22000000 		.4byte	.LFE102-.LFB102
 8668 0148 00000000 		.4byte	.LFB103
 8669 014c 26000000 		.4byte	.LFE103-.LFB103
 8670 0150 00000000 		.4byte	.LFB104
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 190


 8671 0154 8C000000 		.4byte	.LFE104-.LFB104
 8672 0158 00000000 		.4byte	.LFB105
 8673 015c 48000000 		.4byte	.LFE105-.LFB105
 8674 0160 00000000 		.4byte	.LFB106
 8675 0164 0E000000 		.4byte	.LFE106-.LFB106
 8676 0168 00000000 		.4byte	.LFB107
 8677 016c 36000000 		.4byte	.LFE107-.LFB107
 8678 0170 00000000 		.4byte	.LFB108
 8679 0174 0C020000 		.4byte	.LFE108-.LFB108
 8680 0178 00000000 		.4byte	.LFB109
 8681 017c A8000000 		.4byte	.LFE109-.LFB109
 8682 0180 00000000 		.4byte	0
 8683 0184 00000000 		.4byte	0
 8684              		.section	.debug_ranges,"",%progbits
 8685              	.Ldebug_ranges0:
 8686 0000 00000000 		.4byte	.LFB64
 8687 0004 4C020000 		.4byte	.LFE64
 8688 0008 00000000 		.4byte	.LFB65
 8689 000c 28020000 		.4byte	.LFE65
 8690 0010 00000000 		.4byte	.LFB66
 8691 0014 10020000 		.4byte	.LFE66
 8692 0018 00000000 		.4byte	.LFB67
 8693 001c DC010000 		.4byte	.LFE67
 8694 0020 00000000 		.4byte	.LFB68
 8695 0024 F0010000 		.4byte	.LFE68
 8696 0028 00000000 		.4byte	.LFB69
 8697 002c D8010000 		.4byte	.LFE69
 8698 0030 00000000 		.4byte	.LFB70
 8699 0034 1C010000 		.4byte	.LFE70
 8700 0038 00000000 		.4byte	.LFB71
 8701 003c 14010000 		.4byte	.LFE71
 8702 0040 00000000 		.4byte	.LFB72
 8703 0044 D4000000 		.4byte	.LFE72
 8704 0048 00000000 		.4byte	.LFB73
 8705 004c A4000000 		.4byte	.LFE73
 8706 0050 00000000 		.4byte	.LFB74
 8707 0054 12000000 		.4byte	.LFE74
 8708 0058 00000000 		.4byte	.LFB75
 8709 005c 98000000 		.4byte	.LFE75
 8710 0060 00000000 		.4byte	.LFB76
 8711 0064 3C000000 		.4byte	.LFE76
 8712 0068 00000000 		.4byte	.LFB77
 8713 006c 28000000 		.4byte	.LFE77
 8714 0070 00000000 		.4byte	.LFB78
 8715 0074 28000000 		.4byte	.LFE78
 8716 0078 00000000 		.4byte	.LFB79
 8717 007c 64000000 		.4byte	.LFE79
 8718 0080 00000000 		.4byte	.LFB80
 8719 0084 34020000 		.4byte	.LFE80
 8720 0088 00000000 		.4byte	.LFB81
 8721 008c 20040000 		.4byte	.LFE81
 8722 0090 00000000 		.4byte	.LFB82
 8723 0094 F2000000 		.4byte	.LFE82
 8724 0098 00000000 		.4byte	.LFB83
 8725 009c 40000000 		.4byte	.LFE83
 8726 00a0 00000000 		.4byte	.LFB84
 8727 00a4 48000000 		.4byte	.LFE84
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 191


 8728 00a8 00000000 		.4byte	.LFB85
 8729 00ac 34000000 		.4byte	.LFE85
 8730 00b0 00000000 		.4byte	.LFB86
 8731 00b4 28000000 		.4byte	.LFE86
 8732 00b8 00000000 		.4byte	.LFB87
 8733 00bc 44000000 		.4byte	.LFE87
 8734 00c0 00000000 		.4byte	.LFB88
 8735 00c4 3C000000 		.4byte	.LFE88
 8736 00c8 00000000 		.4byte	.LFB89
 8737 00cc 80030000 		.4byte	.LFE89
 8738 00d0 00000000 		.4byte	.LFB90
 8739 00d4 50000000 		.4byte	.LFE90
 8740 00d8 00000000 		.4byte	.LFB91
 8741 00dc 4A000000 		.4byte	.LFE91
 8742 00e0 00000000 		.4byte	.LFB92
 8743 00e4 EC000000 		.4byte	.LFE92
 8744 00e8 00000000 		.4byte	.LFB93
 8745 00ec EC000000 		.4byte	.LFE93
 8746 00f0 00000000 		.4byte	.LFB94
 8747 00f4 EC000000 		.4byte	.LFE94
 8748 00f8 00000000 		.4byte	.LFB95
 8749 00fc 1A000000 		.4byte	.LFE95
 8750 0100 00000000 		.4byte	.LFB96
 8751 0104 B0000000 		.4byte	.LFE96
 8752 0108 00000000 		.4byte	.LFB97
 8753 010c 0E000000 		.4byte	.LFE97
 8754 0110 00000000 		.4byte	.LFB98
 8755 0114 98000000 		.4byte	.LFE98
 8756 0118 00000000 		.4byte	.LFB99
 8757 011c 90000000 		.4byte	.LFE99
 8758 0120 00000000 		.4byte	.LFB100
 8759 0124 6C000000 		.4byte	.LFE100
 8760 0128 00000000 		.4byte	.LFB101
 8761 012c 58000000 		.4byte	.LFE101
 8762 0130 00000000 		.4byte	.LFB102
 8763 0134 22000000 		.4byte	.LFE102
 8764 0138 00000000 		.4byte	.LFB103
 8765 013c 26000000 		.4byte	.LFE103
 8766 0140 00000000 		.4byte	.LFB104
 8767 0144 8C000000 		.4byte	.LFE104
 8768 0148 00000000 		.4byte	.LFB105
 8769 014c 48000000 		.4byte	.LFE105
 8770 0150 00000000 		.4byte	.LFB106
 8771 0154 0E000000 		.4byte	.LFE106
 8772 0158 00000000 		.4byte	.LFB107
 8773 015c 36000000 		.4byte	.LFE107
 8774 0160 00000000 		.4byte	.LFB108
 8775 0164 0C020000 		.4byte	.LFE108
 8776 0168 00000000 		.4byte	.LFB109
 8777 016c A8000000 		.4byte	.LFE109
 8778 0170 00000000 		.4byte	0
 8779 0174 00000000 		.4byte	0
 8780              		.section	.debug_line,"",%progbits
 8781              	.Ldebug_line0:
 8782 0000 F7090000 		.section	.debug_str,"MS",%progbits,1
 8782      02005C01 
 8782      00000201 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 192


 8782      FB0E0D00 
 8782      01010101 
 8783              	.LASF29:
 8784 0000 676F546F 		.ascii	"goTo_X\000"
 8784      5F5800
 8785              	.LASF30:
 8786 0007 676F546F 		.ascii	"goTo_Y\000"
 8786      5F5900
 8787              	.LASF33:
 8788 000e 676F546F 		.ascii	"goTo_Z\000"
 8788      5F5A00
 8789              	.LASF39:
 8790 0015 69735F5A 		.ascii	"is_Z_Step_Correct\000"
 8790      5F537465 
 8790      705F436F 
 8790      72726563 
 8790      7400
 8791              	.LASF27:
 8792 0027 6E6F775F 		.ascii	"now_Z_QuadPosition\000"
 8792      5A5F5175 
 8792      6164506F 
 8792      73697469 
 8792      6F6E00
 8793              	.LASF51:
 8794 003a 5553425F 		.ascii	"USB_Detect_Indication_Via_LED\000"
 8794      44657465 
 8794      63745F49 
 8794      6E646963 
 8794      6174696F 
 8795              	.LASF72:
 8796 0058 64697363 		.ascii	"disconnect_all_motor\000"
 8796      6F6E6E65 
 8796      63745F61 
 8796      6C6C5F6D 
 8796      6F746F72 
 8797              	.LASF38:
 8798 006d 69735F59 		.ascii	"is_Y_Step_Correct\000"
 8798      5F537465 
 8798      705F436F 
 8798      72726563 
 8798      7400
 8799              	.LASF25:
 8800 007f 6E6F775F 		.ascii	"now_Y_QuadPosition\000"
 8800      595F5175 
 8800      6164506F 
 8800      73697469 
 8800      6F6E00
 8801              	.LASF109:
 8802 0092 506F7369 		.ascii	"Position_Z_Move\000"
 8802      74696F6E 
 8802      5F5A5F4D 
 8802      6F766500 
 8803              	.LASF10:
 8804 00a2 756E7369 		.ascii	"unsigned int\000"
 8804      676E6564 
 8804      20696E74 
 8804      00
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 193


 8805              	.LASF5:
 8806 00af 5F5F696E 		.ascii	"__int32_t\000"
 8806      7433325F 
 8806      7400
 8807              	.LASF35:
 8808 00b9 69735F58 		.ascii	"is_X_Step_Correct\000"
 8808      5F537465 
 8808      705F436F 
 8808      72726563 
 8808      7400
 8809              	.LASF24:
 8810 00cb 6E6F775F 		.ascii	"now_X_QuadPosition\000"
 8810      585F5175 
 8810      6164506F 
 8810      73697469 
 8810      6F6E00
 8811              	.LASF64:
 8812 00de 436F6E66 		.ascii	"Configure_All_XYZ_L6470_Motor\000"
 8812      69677572 
 8812      655F416C 
 8812      6C5F5859 
 8812      5A5F4C36 
 8813              	.LASF67:
 8814 00fc 436F6E66 		.ascii	"Configure_L6470_For_Z_Motor\000"
 8814      69677572 
 8814      655F4C36 
 8814      3437305F 
 8814      466F725F 
 8815              	.LASF129:
 8816 0118 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 8816      43313120 
 8816      352E342E 
 8816      31203230 
 8816      31363036 
 8817 014b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 8817      20726576 
 8817      6973696F 
 8817      6E203233 
 8817      37373135 
 8818 017e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 8818      66756E63 
 8818      74696F6E 
 8818      2D736563 
 8818      74696F6E 
 8819              	.LASF98:
 8820 01a6 5553425F 		.ascii	"USB_received\000"
 8820      72656365 
 8820      69766564 
 8820      00
 8821              	.LASF115:
 8822 01b3 4E6F5F6F 		.ascii	"No_of_Z_Cycle\000"
 8822      665F5A5F 
 8822      4379636C 
 8822      6500
 8823              	.LASF85:
 8824 01c1 6E5F7374 		.ascii	"n_step\000"
 8824      657000
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 194


 8825              	.LASF53:
 8826 01c8 646F6E74 		.ascii	"dont_Execute_1st_Time\000"
 8826      5F457865 
 8826      63757465 
 8826      5F317374 
 8826      5F54696D 
 8827              	.LASF36:
 8828 01de 4E6F5F6F 		.ascii	"No_of_executions\000"
 8828      665F6578 
 8828      65637574 
 8828      696F6E73 
 8828      00
 8829              	.LASF28:
 8830 01ef 73656E73 		.ascii	"sensor_flag\000"
 8830      6F725F66 
 8830      6C616700 
 8831              	.LASF100:
 8832 01fb 496E7465 		.ascii	"InterStage_QuadPosition\000"
 8832      72537461 
 8832      67655F51 
 8832      75616450 
 8832      6F736974 
 8833              	.LASF128:
 8834 0213 50574D5F 		.ascii	"PWM_comare_value\000"
 8834      636F6D61 
 8834      72655F76 
 8834      616C7565 
 8834      00
 8835              	.LASF68:
 8836 0224 43686563 		.ascii	"Check_Thermal_Shoutdown\000"
 8836      6B5F5468 
 8836      65726D61 
 8836      6C5F5368 
 8836      6F757464 
 8837              	.LASF45:
 8838 023c 73746570 		.ascii	"steps\000"
 8838      7300
 8839              	.LASF17:
 8840 0242 666C6F61 		.ascii	"float\000"
 8840      7400
 8841              	.LASF16:
 8842 0248 696E7433 		.ascii	"int32\000"
 8842      3200
 8843              	.LASF97:
 8844 024e 636F756E 		.ascii	"count\000"
 8844      7400
 8845              	.LASF9:
 8846 0254 6C6F6E67 		.ascii	"long long unsigned int\000"
 8846      206C6F6E 
 8846      6720756E 
 8846      7369676E 
 8846      65642069 
 8847              	.LASF74:
 8848 026b 5365745F 		.ascii	"Set_Speed\000"
 8848      53706565 
 8848      6400
 8849              	.LASF55:
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 195


 8850 0275 436C6561 		.ascii	"Clear_USB_RX_Buffer\000"
 8850      725F5553 
 8850      425F5258 
 8850      5F427566 
 8850      66657200 
 8851              	.LASF91:
 8852 0289 50617261 		.ascii	"Param\000"
 8852      6D00
 8853              	.LASF99:
 8854 028f 5553425F 		.ascii	"USB_transmit\000"
 8854      7472616E 
 8854      736D6974 
 8854      00
 8855              	.LASF122:
 8856 029c 486F6D65 		.ascii	"HomeX_done\000"
 8856      585F646F 
 8856      6E6500
 8857              	.LASF50:
 8858 02a7 4572726F 		.ascii	"Error\000"
 8858      7200
 8859              	.LASF83:
 8860 02ad 76616C75 		.ascii	"value\000"
 8860      6500
 8861              	.LASF127:
 8862 02b3 42756666 		.ascii	"Buffer_Y_QuadPosition\000"
 8862      65725F59 
 8862      5F517561 
 8862      64506F73 
 8862      6974696F 
 8863              	.LASF52:
 8864 02c9 496E6974 		.ascii	"Initialize_USB\000"
 8864      69616C69 
 8864      7A655F55 
 8864      534200
 8865              	.LASF88:
 8866 02d8 47657453 		.ascii	"GetStatus\000"
 8866      74617475 
 8866      7300
 8867              	.LASF131:
 8868 02e2 433A5C55 		.ascii	"C:\\Users\\Admin\\Dropbox\\My PC (DESKTOP-JTCBHVV)\\"
 8868      73657273 
 8868      5C41646D 
 8868      696E5C44 
 8868      726F7062 
 8869 0311 446F6375 		.ascii	"Documents\\robotics\\Shonit_v2\\Firmware\\Firmware "
 8869      6D656E74 
 8869      735C726F 
 8869      626F7469 
 8869      63735C53 
 8870 0340 666F7220 		.ascii	"for ShonitV2.2 PCB AI100 N_seriesV2.5_devlopment\\D"
 8870      53686F6E 
 8870      69745632 
 8870      2E322050 
 8870      43422041 
 8871 0372 65736967 		.ascii	"esign01.cydsn\000"
 8871      6E30312E 
 8871      63796473 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 196


 8871      6E00
 8872              	.LASF34:
 8873 0380 506F7369 		.ascii	"Position_Z_Requested\000"
 8873      74696F6E 
 8873      5F5A5F52 
 8873      65717565 
 8873      73746564 
 8874              	.LASF111:
 8875 0395 595F5175 		.ascii	"Y_QuadPosition\000"
 8875      6164506F 
 8875      73697469 
 8875      6F6E00
 8876              	.LASF37:
 8877 03a4 5F426F6F 		.ascii	"_Bool\000"
 8877      6C00
 8878              	.LASF96:
 8879 03aa 49735F53 		.ascii	"Is_Slide_On_Gripper\000"
 8879      6C696465 
 8879      5F4F6E5F 
 8879      47726970 
 8879      70657200 
 8880              	.LASF120:
 8881 03be 73746570 		.ascii	"step_correction_loop_y\000"
 8881      5F636F72 
 8881      72656374 
 8881      696F6E5F 
 8881      6C6F6F70 
 8882              	.LASF121:
 8883 03d5 73746570 		.ascii	"step_correction_loop_z\000"
 8883      5F636F72 
 8883      72656374 
 8883      696F6E5F 
 8883      6C6F6F70 
 8884              	.LASF125:
 8885 03ec 456E636F 		.ascii	"EncoderXnYSelect\000"
 8885      64657258 
 8885      6E595365 
 8885      6C656374 
 8885      00
 8886              	.LASF54:
 8887 03fd 49735F55 		.ascii	"Is_USB_Unpluged\000"
 8887      53425F55 
 8887      6E706C75 
 8887      67656400 
 8888              	.LASF43:
 8889 040d 496E6974 		.ascii	"Initialize_And_Start_All_Opt_Encoder\000"
 8889      69616C69 
 8889      7A655F41 
 8889      6E645F53 
 8889      74617274 
 8890              	.LASF130:
 8891 0432 4C363437 		.ascii	"L6470.c\000"
 8891      302E6300 
 8892              	.LASF104:
 8893 043a 585F6C61 		.ascii	"X_last_position\000"
 8893      73745F70 
 8893      6F736974 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 197


 8893      696F6E00 
 8894              	.LASF19:
 8895 044a 63686172 		.ascii	"char\000"
 8895      00
 8896              	.LASF126:
 8897 044f 42756666 		.ascii	"Buffer_X_QuadPosition\000"
 8897      65725F58 
 8897      5F517561 
 8897      64506F73 
 8897      6974696F 
 8898              	.LASF14:
 8899 0465 75696E74 		.ascii	"uint16\000"
 8899      313600
 8900              	.LASF80:
 8901 046c 64617461 		.ascii	"data\000"
 8901      00
 8902              	.LASF15:
 8903 0471 696E7438 		.ascii	"int8\000"
 8903      00
 8904              	.LASF11:
 8905 0476 75696E74 		.ascii	"uint8_t\000"
 8905      385F7400 
 8906              	.LASF101:
 8907 047e 496E7465 		.ascii	"Inter_Stage_QuadPosition\000"
 8907      725F5374 
 8907      6167655F 
 8907      51756164 
 8907      506F7369 
 8908              	.LASF60:
 8909 0497 57726974 		.ascii	"Write_Debug_UART_Int\000"
 8909      655F4465 
 8909      6275675F 
 8909      55415254 
 8909      5F496E74 
 8910              	.LASF41:
 8911 04ac 7365745F 		.ascii	"set_CondenserLED\000"
 8911      436F6E64 
 8911      656E7365 
 8911      724C4544 
 8911      00
 8912              	.LASF110:
 8913 04bd 585F5175 		.ascii	"X_QuadPosition\000"
 8913      6164506F 
 8913      73697469 
 8913      6F6E00
 8914              	.LASF78:
 8915 04cc 4D617853 		.ascii	"MaxSpdCalc\000"
 8915      70644361 
 8915      6C6300
 8916              	.LASF8:
 8917 04d7 6C6F6E67 		.ascii	"long long int\000"
 8917      206C6F6E 
 8917      6720696E 
 8917      7400
 8918              	.LASF57:
 8919 04e5 5553425F 		.ascii	"USB_received_temp\000"
 8919      72656365 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 198


 8919      69766564 
 8919      5F74656D 
 8919      7000
 8920              	.LASF112:
 8921 04f7 5A5F5175 		.ascii	"Z_QuadPosition\000"
 8921      6164506F 
 8921      73697469 
 8921      6F6E00
 8922              	.LASF61:
 8923 0506 75617274 		.ascii	"uart_Buffer\000"
 8923      5F427566 
 8923      66657200 
 8924              	.LASF108:
 8925 0512 506F7369 		.ascii	"Position_Y_Move\000"
 8925      74696F6E 
 8925      5F595F4D 
 8925      6F766500 
 8926              	.LASF62:
 8927 0522 55415254 		.ascii	"UART_print_all_values\000"
 8927      5F707269 
 8927      6E745F61 
 8927      6C6C5F76 
 8927      616C7565 
 8928              	.LASF66:
 8929 0538 436F6E66 		.ascii	"Configure_L6470_For_Y_Motor\000"
 8929      69677572 
 8929      655F4C36 
 8929      3437305F 
 8929      466F725F 
 8930              	.LASF114:
 8931 0554 4E6F5F6F 		.ascii	"No_of_Y_Cycle\000"
 8931      665F595F 
 8931      4379636C 
 8931      6500
 8932              	.LASF124:
 8933 0562 486F6D65 		.ascii	"HomeZ_done\000"
 8933      5A5F646F 
 8933      6E6500
 8934              	.LASF82:
 8935 056d 70617261 		.ascii	"param\000"
 8935      6D00
 8936              	.LASF32:
 8937 0573 506F7369 		.ascii	"Position_Y_Requested\000"
 8937      74696F6E 
 8937      5F595F52 
 8937      65717565 
 8937      73746564 
 8938              	.LASF44:
 8939 0588 456E6162 		.ascii	"Enable_Encoder_X\000"
 8939      6C655F45 
 8939      6E636F64 
 8939      65725F58 
 8939      00
 8940              	.LASF46:
 8941 0599 456E6162 		.ascii	"Enable_Encoder_Y\000"
 8941      6C655F45 
 8941      6E636F64 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 199


 8941      65725F59 
 8941      00
 8942              	.LASF94:
 8943 05aa 6D61736B 		.ascii	"mask\000"
 8943      00
 8944              	.LASF42:
 8945 05af 496E6974 		.ascii	"Initialize_PWM\000"
 8945      69616C69 
 8945      7A655F50 
 8945      574D00
 8946              	.LASF63:
 8947 05be 52657365 		.ascii	"Reset_All_L6470_Motor\000"
 8947      745F416C 
 8947      6C5F4C36 
 8947      3437305F 
 8947      4D6F746F 
 8948              	.LASF20:
 8949 05d4 6C6F6E67 		.ascii	"long double\000"
 8949      20646F75 
 8949      626C6500 
 8950              	.LASF86:
 8951 05e0 676F546F 		.ascii	"goTo\000"
 8951      00
 8952              	.LASF92:
 8953 05e5 6269745F 		.ascii	"bit_len\000"
 8953      6C656E00 
 8954              	.LASF79:
 8955 05ed 44617461 		.ascii	"Data_To_Transfer\000"
 8955      5F546F5F 
 8955      5472616E 
 8955      73666572 
 8955      00
 8956              	.LASF70:
 8957 05fe 41786973 		.ascii	"Axis\000"
 8957      00
 8958              	.LASF2:
 8959 0603 73686F72 		.ascii	"short int\000"
 8959      7420696E 
 8959      7400
 8960              	.LASF102:
 8961 060d 54696D65 		.ascii	"Time_Out_Error\000"
 8961      5F4F7574 
 8961      5F457272 
 8961      6F7200
 8962              	.LASF6:
 8963 061c 6C6F6E67 		.ascii	"long int\000"
 8963      20696E74 
 8963      00
 8964              	.LASF95:
 8965 0625 49544D5F 		.ascii	"ITM_RxBuffer\000"
 8965      52784275 
 8965      66666572 
 8965      00
 8966              	.LASF106:
 8967 0632 5A5F6C61 		.ascii	"Z_last_position\000"
 8967      73745F70 
 8967      6F736974 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 200


 8967      696F6E00 
 8968              	.LASF71:
 8969 0642 636F6D6D 		.ascii	"command_in_progress\000"
 8969      616E645F 
 8969      696E5F70 
 8969      726F6772 
 8969      65737300 
 8970              	.LASF89:
 8971 0656 50617261 		.ascii	"ParamHandler\000"
 8971      6D48616E 
 8971      646C6572 
 8971      00
 8972              	.LASF105:
 8973 0663 595F6C61 		.ascii	"Y_last_position\000"
 8973      73745F70 
 8973      6F736974 
 8973      696F6E00 
 8974              	.LASF77:
 8975 0673 74656D70 		.ascii	"temp\000"
 8975      00
 8976              	.LASF31:
 8977 0678 506F7369 		.ascii	"Position_X_Requested\000"
 8977      74696F6E 
 8977      5F585F52 
 8977      65717565 
 8977      73746564 
 8978              	.LASF48:
 8979 068d 50726F63 		.ascii	"Process_USB_Data\000"
 8979      6573735F 
 8979      5553425F 
 8979      44617461 
 8979      00
 8980              	.LASF73:
 8981 069e 7365745F 		.ascii	"set_no_of_execution\000"
 8981      6E6F5F6F 
 8981      665F6578 
 8981      65637574 
 8981      696F6E00 
 8982              	.LASF4:
 8983 06b2 5F5F7569 		.ascii	"__uint8_t\000"
 8983      6E74385F 
 8983      7400
 8984              	.LASF40:
 8985 06bc 69665F61 		.ascii	"if_all_homing_done\000"
 8985      6C6C5F68 
 8985      6F6D696E 
 8985      675F646F 
 8985      6E6500
 8986              	.LASF47:
 8987 06cf 52656164 		.ascii	"Read_All_Optical_Encoder\000"
 8987      5F416C6C 
 8987      5F4F7074 
 8987      6963616C 
 8987      5F456E63 
 8988              	.LASF21:
 8989 06e8 73697A65 		.ascii	"sizetype\000"
 8989      74797065 
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 201


 8989      00
 8990              	.LASF7:
 8991 06f1 6C6F6E67 		.ascii	"long unsigned int\000"
 8991      20756E73 
 8991      69676E65 
 8991      6420696E 
 8991      7400
 8992              	.LASF58:
 8993 0703 57726974 		.ascii	"Write_Debug_UART_Char\000"
 8993      655F4465 
 8993      6275675F 
 8993      55415254 
 8993      5F436861 
 8994              	.LASF59:
 8995 0719 5374725F 		.ascii	"Str_Last_One\000"
 8995      4C617374 
 8995      5F4F6E65 
 8995      00
 8996              	.LASF12:
 8997 0726 696E7433 		.ascii	"int32_t\000"
 8997      325F7400 
 8998              	.LASF69:
 8999 072e 63686563 		.ascii	"check_Error\000"
 8999      6B5F4572 
 8999      726F7200 
 9000              	.LASF90:
 9001 073a 7265745F 		.ascii	"ret_val\000"
 9001      76616C00 
 9002              	.LASF1:
 9003 0742 756E7369 		.ascii	"unsigned char\000"
 9003      676E6564 
 9003      20636861 
 9003      7200
 9004              	.LASF76:
 9005 0750 73746570 		.ascii	"stepsPerSec\000"
 9005      73506572 
 9005      53656300 
 9006              	.LASF84:
 9007 075c 4D6F7665 		.ascii	"Move\000"
 9007      00
 9008              	.LASF56:
 9009 0761 436C6561 		.ascii	"Clear_Pending_USB_Data\000"
 9009      725F5065 
 9009      6E64696E 
 9009      675F5553 
 9009      425F4461 
 9010              	.LASF103:
 9011 0778 636F6D6D 		.ascii	"command\000"
 9011      616E6400 
 9012              	.LASF107:
 9013 0780 506F7369 		.ascii	"Position_X_Move\000"
 9013      74696F6E 
 9013      5F585F4D 
 9013      6F766500 
 9014              	.LASF75:
 9015 0790 46534361 		.ascii	"FSCalc\000"
 9015      6C6300
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 202


 9016              	.LASF0:
 9017 0797 7369676E 		.ascii	"signed char\000"
 9017      65642063 
 9017      68617200 
 9018              	.LASF3:
 9019 07a3 73686F72 		.ascii	"short unsigned int\000"
 9019      7420756E 
 9019      7369676E 
 9019      65642069 
 9019      6E7400
 9020              	.LASF123:
 9021 07b6 486F6D65 		.ascii	"HomeY_done\000"
 9021      595F646F 
 9021      6E6500
 9022              	.LASF49:
 9023 07c1 53656E64 		.ascii	"Send_Feedback_to_USB\000"
 9023      5F466565 
 9023      64626163 
 9023      6B5F746F 
 9023      5F555342 
 9024              	.LASF81:
 9025 07d6 53657450 		.ascii	"SetParam\000"
 9025      6172616D 
 9025      00
 9026              	.LASF119:
 9027 07df 73746570 		.ascii	"step_correction_loop_x\000"
 9027      5F636F72 
 9027      72656374 
 9027      696F6E5F 
 9027      6C6F6F70 
 9028              	.LASF13:
 9029 07f6 75696E74 		.ascii	"uint8\000"
 9029      3800
 9030              	.LASF18:
 9031 07fc 646F7562 		.ascii	"double\000"
 9031      6C6500
 9032              	.LASF116:
 9033 0803 4D6F746F 		.ascii	"Motor_Speed_X\000"
 9033      725F5370 
 9033      6565645F 
 9033      5800
 9034              	.LASF117:
 9035 0811 4D6F746F 		.ascii	"Motor_Speed_Y\000"
 9035      725F5370 
 9035      6565645F 
 9035      5900
 9036              	.LASF118:
 9037 081f 4D6F746F 		.ascii	"Motor_Speed_Z\000"
 9037      725F5370 
 9037      6565645F 
 9037      5A00
 9038              	.LASF93:
 9039 082d 62797465 		.ascii	"byte_len\000"
 9039      5F6C656E 
 9039      00
 9040              	.LASF65:
 9041 0836 436F6E66 		.ascii	"Configure_L6470_For_X_Motor\000"
ARM GAS  C:\Users\Admin\AppData\Local\Temp\ccb10png.s 			page 203


 9041      69677572 
 9041      655F4C36 
 9041      3437305F 
 9041      466F725F 
 9042              	.LASF113:
 9043 0852 4E6F5F6F 		.ascii	"No_of_X_Cycle\000"
 9043      665F585F 
 9043      4379636C 
 9043      6500
 9044              	.LASF22:
 9045 0860 686F6D65 		.ascii	"home_X\000"
 9045      5F5800
 9046              	.LASF23:
 9047 0867 686F6D65 		.ascii	"home_Y\000"
 9047      5F5900
 9048              	.LASF26:
 9049 086e 686F6D65 		.ascii	"home_Z\000"
 9049      5F5A00
 9050              	.LASF87:
 9051 0875 52657365 		.ascii	"ResetPos\000"
 9051      74506F73 
 9051      00
 9052              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
